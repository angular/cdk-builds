{"version":3,"file":"overlay.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk/overlay/fullscreen-overlay-container.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {inject, Injectable, OnDestroy, RendererFactory2} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\n@Injectable({providedIn: 'root'})\nexport class FullscreenOverlayContainer extends OverlayContainer implements OnDestroy {\n  private _renderer = inject(RendererFactory2).createRenderer(null, null);\n  private _fullScreenEventName: string | undefined;\n  private _cleanupFullScreenListener: (() => void) | undefined;\n\n  constructor(...args: unknown[]);\n\n  constructor() {\n    super();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this._cleanupFullScreenListener?.();\n  }\n\n  protected override _createContainer(): void {\n    const eventName = this._getEventName();\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n\n    if (eventName) {\n      this._cleanupFullScreenListener?.();\n      this._cleanupFullScreenListener = this._renderer.listen('document', eventName, () => {\n        this._adjustParentForFullscreenChange();\n      });\n    }\n  }\n\n  private _adjustParentForFullscreenChange(): void {\n    if (this._containerElement) {\n      const fullscreenElement = this.getFullscreenElement();\n      const parent = fullscreenElement || this._document.body;\n      parent.appendChild(this._containerElement);\n    }\n  }\n\n  private _getEventName(): string | undefined {\n    if (!this._fullScreenEventName) {\n      const _document = this._document as any;\n\n      if (_document.fullscreenEnabled) {\n        this._fullScreenEventName = 'fullscreenchange';\n      } else if (_document.webkitFullscreenEnabled) {\n        this._fullScreenEventName = 'webkitfullscreenchange';\n      } else if (_document.mozFullScreenEnabled) {\n        this._fullScreenEventName = 'mozfullscreenchange';\n      } else if (_document.msFullscreenEnabled) {\n        this._fullScreenEventName = 'MSFullscreenChange';\n      }\n    }\n\n    return this._fullScreenEventName;\n  }\n\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n   */\n  getFullscreenElement(): Element {\n    const _document = this._document as any;\n\n    return (\n      _document.fullscreenElement ||\n      _document.webkitFullscreenElement ||\n      _document.mozFullScreenElement ||\n      _document.msFullscreenElement ||\n      null\n    );\n  }\n}\n"],"names":["FullscreenOverlayContainer","OverlayContainer","ngOnDestroy","_cleanupFullScreenListener","_createContainer","eventName","_getEventName","_adjustParentForFullscreenChange","_renderer","listen","_containerElement","fullscreenElement","getFullscreenElement","parent","_document","body","_fullScreenEventName","fullscreenEnabled","msFullscreenEnabled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoBUA,MAAAA,0BAAA,SAAAC,gBAAA,CAAA;;;;;;;AAYNC,EAAAA,WAAKA,GAAA;AACP,IAAA,KAAA,CAAAA,WAAA,EAAA;AAEmC,IAAA,IAAA,CAAAC,0BAAA,IAAA;AACjC;EAKEC,gBAAA,GAAA;IACA,MAAAC,SAAA,QAAAC,aAAA,EAAA;;AAGF,IAAA,IAAA,CAAAC,gCAAA,EAAA;AACF,IAAA,IAAAF,SAAA,EAAA;MAEwC,IAAA,CAAAF,0BAAA,IAAA;AACtC,MAAA,IAAA,CAAAA,0BAAA,GAAAK,IAAAA,CAAAA,SAAA,CAAAC,MAAA,aAAAJ,SAAA,EAAA,MAAA;AAEQ,QAAA,IAA0B,CAAAE,gCAAA,EAAA;OAChC,CAAA;;;kCAKQA,GAAA;AACR,IAAA,IAAA,IAAA,CAAAG,iBAAA,EAAA;MAEA,MAAAC,iBAAA,QAA+BC,oBAAE,EAAA;AAC/BC,MAAAA,MAAAA,MAAA,GAAAF,iBAAA,IAA4BG,IAAAA,CAAAA,SAAA,CAAAC,IAAA;;AACvB;AACL;EACKT,aAAA,GAAA;IACL,IAAA,CAAA,IAAA,CAAAU,oBAAK,EAAA;YACPF,SAAA,QAAAA,SAAA;MAAO,IAAAA,SAAA,CAAAG,iBAAI,EAA6B;QACtC,IAAA,CAAAD,oBAAK,GAAuB,kBAAA;;AAKlC,QAAA,IAAA,CAAAA,oBAAA,GAAA,wBAAA;AAEA,OAAA;QAGG,IAAAA,CAAAA,oBAAA,GAAA,qBAAA;aAED,IAAAF,SAAA,CAAAI,mBAAA,EAAA;AAAA,QAAA,IAAA,CAAeF,oBAAO,GAAiB,oBAAA;;;AAIrC,IAAA,OAAA,IAAA,CAAAA,oBAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}