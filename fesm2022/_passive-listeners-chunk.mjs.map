{"version":3,"file":"_passive-listeners-chunk.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk/platform/features/passive-listeners.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents: boolean;\n\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport function supportsPassiveEventListeners(): boolean {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener(\n        'test',\n        null!,\n        Object.defineProperty({}, 'passive', {\n          get: () => (supportsPassiveEvents = true),\n        }),\n      );\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nexport function normalizePassiveListenerOptions(\n  options: AddEventListenerOptions,\n): AddEventListenerOptions | boolean {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n"],"names":["supportsPassiveEventListeners","supportsPassiveEvents","window","addEventListener","Object","defineProperty"],"mappings":";AAeA,SAAAA,6BAAA,GAAA;EAEI,IAAAC,qBAAA,mBAAAC,MAAA,KAAA,WAAA,EAAA;AACE,IAAA,IAAA;AAKGA,MAAAA,MAAA,CAAAC,gBAAA,CAAAC,MAAAA,EAAAA,IAAAA,EAAAA,MAAA,CAAAC,cAAA,CAAA,EAAA,EAAA,SAAA,EAAA;;;KAIL,SAAA;MACFJ,qBAAA,GAAAA,qBAAA,IAAA,KAAA;AAEA;;;;;;;;;;"}