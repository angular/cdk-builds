{"version":3,"file":"_id-generator-chunk.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk/a11y/id-generator.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {APP_ID, inject, Injectable} from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters: Record<string, number> = {};\n\n/** Service that generates unique IDs for DOM nodes. */\n@Injectable({providedIn: 'root'})\nexport class _IdGenerator {\n  private _appId = inject(APP_ID);\n\n  /**\n   * Generates a unique ID with a specific prefix.\n   * @param prefix Prefix to add to the ID.\n   */\n  getId(prefix: string): string {\n    // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n    // Angular app on them, we can reduce the amount of breakages by not adding it.\n    if (this._appId !== 'ng') {\n      prefix += this._appId;\n    }\n\n    if (!counters.hasOwnProperty(prefix)) {\n      counters[prefix] = 0;\n    }\n\n    return `${prefix}${counters[prefix]++}`;\n  }\n}\n"],"names":["counters","_IdGenerator","_appId","hasOwnProperty","prefix","minVersion","version","ngImport","i0","type","deps","target","ɵɵFactoryTarget","Injectable"],"mappings":";;;AAiBA,MAAAA,QAAuD,GAAA,EAAA;AAG7C,MAAAC,YAAA,CAAA;;;AAcJ,IAAA,IAAA,IAAA,CAAAC,MAAA,KAAA,IAAA,EAAA;;;AAIJ,IAAA,IAAA,CAAAF,QAAA,CAAAG,cAAA,CAAAC,MAAA,CAAA,EAAA;;AAnBW;;;qCADF,CAAA;IAAAC,UAAA,EAAA,QAAA;IAAAC,OAAA,EAAA,eAAA;AAAAC,IAAAA,QAAA,EAAAC,EAAA;AAAAC,IAAAA,IAAA,EAAAR,YAAA;IAAAS,IAAA,EAAA,EAAA;AAAAC,IAAAA,MAAA,EAAAH,EAAA,CAAAI,eAAA,CAAAC;AAAA,GAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;"}