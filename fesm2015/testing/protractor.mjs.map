{"version":3,"file":"protractor.mjs","sources":["../../../../../../../src/cdk/testing/protractor/protractor-element.ts","../../../../../../../src/cdk/testing/protractor/protractor-harness-environment.ts","../../../../../../../src/cdk/testing/protractor/public-api.ts","../../../../../../../src/cdk/testing/protractor/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  _getTextWithExcludedElements,\n  ElementDimensions,\n  getNoKeysSpecifiedError,\n  ModifierKeys,\n  TestElement,\n  TestKey,\n  TextOptions,\n  EventData,\n} from '@angular/cdk/testing';\nimport {browser, Button, by, ElementFinder, Key} from 'protractor';\n\n/** Maps the `TestKey` constants to Protractor's `Key` constants. */\nconst keyMap = {\n  [TestKey.BACKSPACE]: Key.BACK_SPACE,\n  [TestKey.TAB]: Key.TAB,\n  [TestKey.ENTER]: Key.ENTER,\n  [TestKey.SHIFT]: Key.SHIFT,\n  [TestKey.CONTROL]: Key.CONTROL,\n  [TestKey.ALT]: Key.ALT,\n  [TestKey.ESCAPE]: Key.ESCAPE,\n  [TestKey.PAGE_UP]: Key.PAGE_UP,\n  [TestKey.PAGE_DOWN]: Key.PAGE_DOWN,\n  [TestKey.END]: Key.END,\n  [TestKey.HOME]: Key.HOME,\n  [TestKey.LEFT_ARROW]: Key.ARROW_LEFT,\n  [TestKey.UP_ARROW]: Key.ARROW_UP,\n  [TestKey.RIGHT_ARROW]: Key.ARROW_RIGHT,\n  [TestKey.DOWN_ARROW]: Key.ARROW_DOWN,\n  [TestKey.INSERT]: Key.INSERT,\n  [TestKey.DELETE]: Key.DELETE,\n  [TestKey.F1]: Key.F1,\n  [TestKey.F2]: Key.F2,\n  [TestKey.F3]: Key.F3,\n  [TestKey.F4]: Key.F4,\n  [TestKey.F5]: Key.F5,\n  [TestKey.F6]: Key.F6,\n  [TestKey.F7]: Key.F7,\n  [TestKey.F8]: Key.F8,\n  [TestKey.F9]: Key.F9,\n  [TestKey.F10]: Key.F10,\n  [TestKey.F11]: Key.F11,\n  [TestKey.F12]: Key.F12,\n  [TestKey.META]: Key.META,\n};\n\n/** Converts a `ModifierKeys` object to a list of Protractor `Key`s. */\nfunction toProtractorModifierKeys(modifiers: ModifierKeys): string[] {\n  const result: string[] = [];\n  if (modifiers.control) {\n    result.push(Key.CONTROL);\n  }\n  if (modifiers.alt) {\n    result.push(Key.ALT);\n  }\n  if (modifiers.shift) {\n    result.push(Key.SHIFT);\n  }\n  if (modifiers.meta) {\n    result.push(Key.META);\n  }\n  return result;\n}\n\n/**\n * A `TestElement` implementation for Protractor.\n * @deprecated\n * @breaking-change 13.0.0\n */\nexport class ProtractorElement implements TestElement {\n  constructor(readonly element: ElementFinder) {}\n\n  /** Blur the element. */\n  async blur(): Promise<void> {\n    return browser.executeScript('arguments[0].blur()', this.element);\n  }\n\n  /** Clear the element's input (for input and textarea elements only). */\n  async clear(): Promise<void> {\n    return this.element.clear();\n  }\n\n  /**\n   * Click the element at the default location for the current environment. If you need to guarantee\n   * the element is clicked at a specific location, consider using `click('center')` or\n   * `click(x, y)` instead.\n   */\n  click(modifiers?: ModifierKeys): Promise<void>;\n  /** Click the element at the element's center. */\n  click(location: 'center', modifiers?: ModifierKeys): Promise<void>;\n  /**\n   * Click the element at the specified coordinates relative to the top-left of the element.\n   * @param relativeX Coordinate within the element, along the X-axis at which to click.\n   * @param relativeY Coordinate within the element, along the Y-axis at which to click.\n   * @param modifiers Modifier keys held while clicking\n   */\n  click(relativeX: number, relativeY: number, modifiers?: ModifierKeys): Promise<void>;\n  async click(\n    ...args: [ModifierKeys?] | ['center', ModifierKeys?] | [number, number, ModifierKeys?]\n  ): Promise<void> {\n    await this._dispatchClickEventSequence(args, Button.LEFT);\n  }\n\n  /**\n   * Right clicks on the element at the specified coordinates relative to the top-left of it.\n   * @param relativeX Coordinate within the element, along the X-axis at which to click.\n   * @param relativeY Coordinate within the element, along the Y-axis at which to click.\n   * @param modifiers Modifier keys held while clicking\n   */\n  rightClick(relativeX: number, relativeY: number, modifiers?: ModifierKeys): Promise<void>;\n  async rightClick(\n    ...args: [ModifierKeys?] | ['center', ModifierKeys?] | [number, number, ModifierKeys?]\n  ): Promise<void> {\n    await this._dispatchClickEventSequence(args, Button.RIGHT);\n  }\n\n  /** Focus the element. */\n  async focus(): Promise<void> {\n    return browser.executeScript('arguments[0].focus()', this.element);\n  }\n\n  /** Get the computed value of the given CSS property for the element. */\n  async getCssValue(property: string): Promise<string> {\n    return this.element.getCssValue(property);\n  }\n\n  /** Hovers the mouse over the element. */\n  async hover(): Promise<void> {\n    return browser\n      .actions()\n      .mouseMove(await this.element.getWebElement())\n      .perform();\n  }\n\n  /** Moves the mouse away from the element. */\n  async mouseAway(): Promise<void> {\n    return browser\n      .actions()\n      .mouseMove(await this.element.getWebElement(), {x: -1, y: -1})\n      .perform();\n  }\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  async sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  async sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n  async sendKeys(...modifiersAndKeys: any[]): Promise<void> {\n    const first = modifiersAndKeys[0];\n    let modifiers: ModifierKeys;\n    let rest: (string | TestKey)[];\n    if (first !== undefined && typeof first !== 'string' && typeof first !== 'number') {\n      modifiers = first;\n      rest = modifiersAndKeys.slice(1);\n    } else {\n      modifiers = {};\n      rest = modifiersAndKeys;\n    }\n\n    const modifierKeys = toProtractorModifierKeys(modifiers);\n    const keys = rest\n      .map(k => (typeof k === 'string' ? k.split('') : [keyMap[k]]))\n      .reduce((arr, k) => arr.concat(k), [])\n      // Key.chord doesn't work well with geckodriver (mozilla/geckodriver#1502),\n      // so avoid it if no modifier keys are required.\n      .map(k => (modifierKeys.length > 0 ? Key.chord(...modifierKeys, k) : k));\n\n    // Throw an error if no keys have been specified. Calling this function with no\n    // keys should not result in a focus event being dispatched unexpectedly.\n    if (keys.length === 0) {\n      throw getNoKeysSpecifiedError();\n    }\n\n    return this.element.sendKeys(...keys);\n  }\n\n  /**\n   * Gets the text from the element.\n   * @param options Options that affect what text is included.\n   */\n  async text(options?: TextOptions): Promise<string> {\n    if (options?.exclude) {\n      return browser.executeScript(_getTextWithExcludedElements, this.element, options.exclude);\n    }\n    // We don't go through Protractor's `getText`, because it excludes text from hidden elements.\n    return browser.executeScript(`return (arguments[0].textContent || '').trim()`, this.element);\n  }\n\n  /** Gets the value for the given attribute from the element. */\n  async getAttribute(name: string): Promise<string | null> {\n    return browser.executeScript(\n      `return arguments[0].getAttribute(arguments[1])`,\n      this.element,\n      name,\n    );\n  }\n\n  /** Checks whether the element has the given class. */\n  async hasClass(name: string): Promise<boolean> {\n    const classes = (await this.getAttribute('class')) || '';\n    return new Set(classes.split(/\\s+/).filter(c => c)).has(name);\n  }\n\n  /** Gets the dimensions of the element. */\n  async getDimensions(): Promise<ElementDimensions> {\n    const {width, height} = await this.element.getSize();\n    const {x: left, y: top} = await this.element.getLocation();\n    return {width, height, left, top};\n  }\n\n  /** Gets the value of a property of an element. */\n  async getProperty<T = any>(name: string): Promise<T> {\n    return browser.executeScript(`return arguments[0][arguments[1]]`, this.element, name);\n  }\n\n  /** Sets the value of a property of an input. */\n  async setInputValue(value: string): Promise<void> {\n    return browser.executeScript(`arguments[0].value = arguments[1]`, this.element, value);\n  }\n\n  /** Selects the options at the specified indexes inside of a native `select` element. */\n  async selectOptions(...optionIndexes: number[]): Promise<void> {\n    const options = await this.element.all(by.css('option'));\n    const indexes = new Set(optionIndexes); // Convert to a set to remove duplicates.\n\n    if (options.length && indexes.size) {\n      // Reset the value so all the selected states are cleared. We can\n      // reuse the input-specific method since the logic is the same.\n      await this.setInputValue('');\n\n      for (let i = 0; i < options.length; i++) {\n        if (indexes.has(i)) {\n          // We have to hold the control key while clicking on options so that multiple can be\n          // selected in multi-selection mode. The key doesn't do anything for single selection.\n          await browser.actions().keyDown(Key.CONTROL).perform();\n          await options[i].click();\n          await browser.actions().keyUp(Key.CONTROL).perform();\n        }\n      }\n    }\n  }\n\n  /** Checks whether this element matches the given selector. */\n  async matchesSelector(selector: string): Promise<boolean> {\n    return browser.executeScript(\n      `\n          return (Element.prototype.matches ||\n                  Element.prototype.msMatchesSelector).call(arguments[0], arguments[1])\n          `,\n      this.element,\n      selector,\n    );\n  }\n\n  /** Checks whether the element is focused. */\n  async isFocused(): Promise<boolean> {\n    return this.element.equals(browser.driver.switchTo().activeElement());\n  }\n\n  /**\n   * Dispatches an event with a particular name.\n   * @param name Name of the event to be dispatched.\n   */\n  async dispatchEvent(name: string, data?: Record<string, EventData>): Promise<void> {\n    return browser.executeScript(_dispatchEvent, name, this.element, data);\n  }\n\n  /** Dispatches all the events that are part of a click event sequence. */\n  private async _dispatchClickEventSequence(\n    args: [ModifierKeys?] | ['center', ModifierKeys?] | [number, number, ModifierKeys?],\n    button: string,\n  ) {\n    let modifiers: ModifierKeys = {};\n    if (args.length && typeof args[args.length - 1] === 'object') {\n      modifiers = args.pop() as ModifierKeys;\n    }\n    const modifierKeys = toProtractorModifierKeys(modifiers);\n\n    // Omitting the offset argument to mouseMove results in clicking the center.\n    // This is the default behavior we want, so we use an empty array of offsetArgs if\n    // no args remain after popping the modifiers from the args passed to this function.\n    const offsetArgs = (args.length === 2 ? [{x: args[0], y: args[1]}] : []) as [\n      {x: number; y: number},\n    ];\n\n    let actions = browser.actions().mouseMove(await this.element.getWebElement(), ...offsetArgs);\n\n    for (const modifierKey of modifierKeys) {\n      actions = actions.keyDown(modifierKey);\n    }\n    actions = actions.click(button);\n    for (const modifierKey of modifierKeys) {\n      actions = actions.keyUp(modifierKey);\n    }\n\n    await actions.perform();\n  }\n}\n\n/**\n * Dispatches an event with a particular name and data to an element.\n * Note that this needs to be a pure function, because it gets stringified by\n * Protractor and is executed inside the browser.\n */\nfunction _dispatchEvent(name: string, element: ElementFinder, data?: Record<string, EventData>) {\n  const event = document.createEvent('Event');\n  event.initEvent(name);\n\n  if (data) {\n    // tslint:disable-next-line:ban Have to use `Object.assign` to preserve the original object.\n    Object.assign(event, data);\n  }\n\n  // This type has a string index signature, so we cannot access it using a dotted property access.\n  element['dispatchEvent'](event);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessEnvironment, HarnessLoader, TestElement} from '@angular/cdk/testing';\nimport {by, element as protractorElement, ElementArrayFinder, ElementFinder} from 'protractor';\nimport {ProtractorElement} from './protractor-element';\n\n/**\n * Options to configure the environment.\n * @deprecated\n * @breaking-change 13.0.0\n */\nexport interface ProtractorHarnessEnvironmentOptions {\n  /** The query function used to find DOM elements. */\n  queryFn: (selector: string, root: ElementFinder) => ElementArrayFinder;\n}\n\n/** The default environment options. */\nconst defaultEnvironmentOptions: ProtractorHarnessEnvironmentOptions = {\n  queryFn: (selector: string, root: ElementFinder) => root.all(by.css(selector)),\n};\n\n/**\n * A `HarnessEnvironment` implementation for Protractor.\n * @deprecated As of v13.0.0, this environment no longer works, as it is not\n * compatible with the new [Angular Package Format](https://angular.io/guide/angular-package-format).\n * @breaking-change 13.0.0\n */\nexport class ProtractorHarnessEnvironment extends HarnessEnvironment<ElementFinder> {\n  /** The options for this environment. */\n  private _options: ProtractorHarnessEnvironmentOptions;\n\n  protected constructor(\n    rawRootElement: ElementFinder,\n    options?: ProtractorHarnessEnvironmentOptions,\n  ) {\n    super(rawRootElement);\n    this._options = {...defaultEnvironmentOptions, ...options};\n  }\n\n  /** Creates a `HarnessLoader` rooted at the document root. */\n  static loader(options?: ProtractorHarnessEnvironmentOptions): HarnessLoader {\n    return new ProtractorHarnessEnvironment(protractorElement(by.css('body')), options);\n  }\n\n  /** Gets the ElementFinder corresponding to the given TestElement. */\n  static getNativeElement(el: TestElement): ElementFinder {\n    if (el instanceof ProtractorElement) {\n      return el.element;\n    }\n    throw Error('This TestElement was not created by the ProtractorHarnessEnvironment');\n  }\n\n  /**\n   * Flushes change detection and async tasks captured in the Angular zone.\n   * In most cases it should not be necessary to call this manually. However, there may be some edge\n   * cases where it is needed to fully flush animation events.\n   */\n  async forceStabilize(): Promise<void> {}\n\n  /** @docs-private */\n  async waitForTasksOutsideAngular(): Promise<void> {\n    // TODO: figure out how we can do this for the protractor environment.\n    // https://github.com/angular/components/issues/17412\n  }\n\n  /** Gets the root element for the document. */\n  protected getDocumentRoot(): ElementFinder {\n    return protractorElement(by.css('body'));\n  }\n\n  /** Creates a `TestElement` from a raw element. */\n  protected createTestElement(element: ElementFinder): TestElement {\n    return new ProtractorElement(element);\n  }\n\n  /** Creates a `HarnessLoader` rooted at the given raw element. */\n  protected createEnvironment(element: ElementFinder): HarnessEnvironment<ElementFinder> {\n    return new ProtractorHarnessEnvironment(element, this._options);\n  }\n\n  /**\n   * Gets a list of all elements matching the given selector under this environment's root element.\n   */\n  protected async getAllRawElements(selector: string): Promise<ElementFinder[]> {\n    const elementArrayFinder = this._options.queryFn(selector, this.rawRootElement);\n    const length = await elementArrayFinder.count();\n    const elements: ElementFinder[] = [];\n    for (let i = 0; i < length; i++) {\n      elements.push(elementArrayFinder.get(i));\n    }\n    return elements;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './protractor-element';\nexport * from './protractor-harness-environment';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["protractorElement"],"mappings":"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"}