{"version":3,"file":"testing__testbed.js","sources":["../testing/test-element.ts","../testing/testbed/unit-test-element.ts","../testing/testbed/testbed-harness-environment.ts","../testing/testbed/public-api.ts","../testing/testbed/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementDimensions} from './element-dimensions';\nimport {ModifierKeys} from './event-objects';\n\n/** An enum of non-text keys that can be used with the `sendKeys` method. */\n// NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n// support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n// dependency on any particular testing framework here. Instead we'll just maintain this supported\n// list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n// representation is used in its respective testing framework.\nexport enum TestKey {\n  BACKSPACE,\n  TAB,\n  ENTER,\n  SHIFT,\n  CONTROL,\n  ALT,\n  ESCAPE,\n  PAGE_UP,\n  PAGE_DOWN,\n  END,\n  HOME,\n  LEFT_ARROW,\n  UP_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  INSERT,\n  DELETE,\n  F1,\n  F2,\n  F3,\n  F4,\n  F5,\n  F6,\n  F7,\n  F8,\n  F9,\n  F10,\n  F11,\n  F12,\n  META\n}\n\n/**\n * This acts as a common interface for DOM elements across both unit and e2e tests. It is the\n * interface through which the ComponentHarness interacts with the component's DOM.\n */\nexport interface TestElement {\n  /** Blur the element. */\n  blur(): Promise<void>;\n\n  /** Clear the element's input (for input elements only). */\n  clear(): Promise<void>;\n\n  /**\n   * Click the element.\n   * @param relativeX Coordinate within the element, along the X-axis at which to click.\n   * @param relativeY Coordinate within the element, along the Y-axis at which to click.\n   */\n  click(relativeX?: number, relativeY?: number): Promise<void>;\n\n  /** Focus the element. */\n  focus(): Promise<void>;\n\n  /** Get the computed value of the given CSS property for the element. */\n  getCssValue(property: string): Promise<string>;\n\n  /** Hovers the mouse over the element. */\n  hover(): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n\n  /** Gets the text from the element. */\n  text(): Promise<string>;\n\n  /** Gets the value for the given attribute from the element. */\n  getAttribute(name: string): Promise<string | null>;\n\n  /** Checks whether the element has the given class. */\n  hasClass(name: string): Promise<boolean>;\n\n  /** Gets the dimensions of the element. */\n  getDimensions(): Promise<ElementDimensions>;\n\n  /** Gets the value of a property of an element. */\n  getProperty(name: string): Promise<any>;\n\n  /** Checks whether this element matches the given selector. */\n  matchesSelector(selector: string): Promise<boolean>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as keyCodes from '@angular/cdk/keycodes';\nimport {\n  clearElement,\n  dispatchMouseEvent,\n  isTextInput,\n  ModifierKeys,\n  triggerBlur,\n  triggerFocus,\n  typeInElement\n} from '@angular/cdk/testing';\nimport {TestElement, TestKey} from '../test-element';\nimport {ElementDimensions} from '../element-dimensions';\n\n/** Maps `TestKey` constants to the `keyCode` and `key` values used by native browser events. */\nconst keyMap = {\n  [TestKey.BACKSPACE]: {keyCode: keyCodes.BACKSPACE, key: 'Backspace'},\n  [TestKey.TAB]: {keyCode: keyCodes.TAB, key: 'Tab'},\n  [TestKey.ENTER]: {keyCode: keyCodes.ENTER, key: 'Enter'},\n  [TestKey.SHIFT]: {keyCode: keyCodes.SHIFT, key: 'Shift'},\n  [TestKey.CONTROL]: {keyCode: keyCodes.CONTROL, key: 'Control'},\n  [TestKey.ALT]: {keyCode: keyCodes.ALT, key: 'Alt'},\n  [TestKey.ESCAPE]: {keyCode: keyCodes.ESCAPE, key: 'Escape'},\n  [TestKey.PAGE_UP]: {keyCode: keyCodes.PAGE_UP, key: 'PageUp'},\n  [TestKey.PAGE_DOWN]: {keyCode: keyCodes.PAGE_DOWN, key: 'PageDown'},\n  [TestKey.END]: {keyCode: keyCodes.END, key: 'End'},\n  [TestKey.HOME]: {keyCode: keyCodes.HOME, key: 'Home'},\n  [TestKey.LEFT_ARROW]: {keyCode: keyCodes.LEFT_ARROW, key: 'ArrowLeft'},\n  [TestKey.UP_ARROW]: {keyCode: keyCodes.UP_ARROW, key: 'ArrowUp'},\n  [TestKey.RIGHT_ARROW]: {keyCode: keyCodes.RIGHT_ARROW, key: 'ArrowRight'},\n  [TestKey.DOWN_ARROW]: {keyCode: keyCodes.DOWN_ARROW, key: 'ArrowDown'},\n  [TestKey.INSERT]: {keyCode: keyCodes.INSERT, key: 'Insert'},\n  [TestKey.DELETE]: {keyCode: keyCodes.DELETE, key: 'Delete'},\n  [TestKey.F1]: {keyCode: keyCodes.F1, key: 'F1'},\n  [TestKey.F2]: {keyCode: keyCodes.F2, key: 'F2'},\n  [TestKey.F3]: {keyCode: keyCodes.F3, key: 'F3'},\n  [TestKey.F4]: {keyCode: keyCodes.F4, key: 'F4'},\n  [TestKey.F5]: {keyCode: keyCodes.F5, key: 'F5'},\n  [TestKey.F6]: {keyCode: keyCodes.F6, key: 'F6'},\n  [TestKey.F7]: {keyCode: keyCodes.F7, key: 'F7'},\n  [TestKey.F8]: {keyCode: keyCodes.F8, key: 'F8'},\n  [TestKey.F9]: {keyCode: keyCodes.F9, key: 'F9'},\n  [TestKey.F10]: {keyCode: keyCodes.F10, key: 'F10'},\n  [TestKey.F11]: {keyCode: keyCodes.F11, key: 'F11'},\n  [TestKey.F12]: {keyCode: keyCodes.F12, key: 'F12'},\n  [TestKey.META]: {keyCode: keyCodes.META, key: 'Meta'}\n};\n\n/** A `TestElement` implementation for unit tests. */\nexport class UnitTestElement implements TestElement {\n  constructor(readonly element: Element, private _stabilize: () => Promise<void>) {}\n\n  async blur(): Promise<void> {\n    await this._stabilize();\n    triggerBlur(this.element as HTMLElement);\n    await this._stabilize();\n  }\n\n  async clear(): Promise<void> {\n    await this._stabilize();\n    if (!isTextInput(this.element)) {\n      throw Error('Attempting to clear an invalid element');\n    }\n    clearElement(this.element);\n    await this._stabilize();\n  }\n\n  async click(relativeX = 0, relativeY = 0): Promise<void> {\n    await this._stabilize();\n    const {left, top} = this.element.getBoundingClientRect();\n    // Round the computed click position as decimal pixels are not\n    // supported by mouse events and could lead to unexpected results.\n    const clientX = Math.round(left + relativeX);\n    const clientY = Math.round(top + relativeY);\n    dispatchMouseEvent(this.element, 'mousedown', clientX, clientY);\n    dispatchMouseEvent(this.element, 'mouseup', clientX, clientY);\n    dispatchMouseEvent(this.element, 'click', clientX, clientY);\n    await this._stabilize();\n  }\n\n  async focus(): Promise<void> {\n    await this._stabilize();\n    triggerFocus(this.element as HTMLElement);\n    await this._stabilize();\n  }\n\n  async getCssValue(property: string): Promise<string> {\n    await this._stabilize();\n    // TODO(mmalerba): Consider adding value normalization if we run into common cases where its\n    //  needed.\n    return getComputedStyle(this.element).getPropertyValue(property);\n  }\n\n  async hover(): Promise<void> {\n    await this._stabilize();\n    dispatchMouseEvent(this.element, 'mouseenter');\n    await this._stabilize();\n  }\n\n  async sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n  async sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n  async sendKeys(...modifiersAndKeys: any[]): Promise<void> {\n    await this._stabilize();\n    const args = modifiersAndKeys.map(k => typeof k === 'number' ? keyMap[k as TestKey] : k);\n    typeInElement(this.element as HTMLElement, ...args);\n    await this._stabilize();\n  }\n\n  async text(): Promise<string> {\n    await this._stabilize();\n    return (this.element.textContent || '').trim();\n  }\n\n  async getAttribute(name: string): Promise<string|null> {\n    await this._stabilize();\n    return this.element.getAttribute(name);\n  }\n\n  async hasClass(name: string): Promise<boolean> {\n    await this._stabilize();\n    return this.element.classList.contains(name);\n  }\n\n  async getDimensions(): Promise<ElementDimensions> {\n    await this._stabilize();\n    return this.element.getBoundingClientRect();\n  }\n\n  async getProperty(name: string): Promise<any> {\n    await this._stabilize();\n    return (this.element as any)[name];\n  }\n\n  async matchesSelector(selector: string): Promise<boolean> {\n    await this._stabilize();\n    const elementPrototype = Element.prototype as any;\n    return (elementPrototype['matches'] || elementPrototype['msMatchesSelector'])\n        .call(this.element, selector);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessEnvironment} from '@angular/cdk/testing';\nimport {ComponentFixture} from '@angular/core/testing';\nimport {ComponentHarness, ComponentHarnessConstructor, HarnessLoader} from '../component-harness';\nimport {TestElement} from '../test-element';\nimport {UnitTestElement} from './unit-test-element';\n\n/** A `HarnessEnvironment` implementation for Angular's Testbed. */\nexport class TestbedHarnessEnvironment extends HarnessEnvironment<Element> {\n  private _destroyed = false;\n\n  protected constructor(rawRootElement: Element, private _fixture: ComponentFixture<unknown>) {\n    super(rawRootElement);\n    _fixture.componentRef.onDestroy(() => this._destroyed = true);\n  }\n\n  /** Creates a `HarnessLoader` rooted at the given fixture's root element. */\n  static loader(fixture: ComponentFixture<unknown>): HarnessLoader {\n    return new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n  }\n\n  /**\n   * Creates a `HarnessLoader` at the document root. This can be used if harnesses are\n   * located outside of a fixture (e.g. overlays appended to the document body).\n   */\n  static documentRootLoader(fixture: ComponentFixture<unknown>): HarnessLoader {\n    return new TestbedHarnessEnvironment(document.body, fixture);\n  }\n\n  /**\n   * Creates an instance of the given harness type, using the fixture's root element as the\n   * harness's host element. This method should be used when creating a harness for the root element\n   * of a fixture, as components do not have the correct selector when they are created as the root\n   * of the fixture.\n   */\n  static async harnessForFixture<T extends ComponentHarness>(\n      fixture: ComponentFixture<unknown>, harnessType: ComponentHarnessConstructor<T>): Promise<T> {\n    const environment = new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n    await environment.forceStabilize();\n    return environment.createComponentHarness(harnessType, fixture.nativeElement);\n  }\n\n  async forceStabilize(): Promise<void> {\n    if (this._destroyed) {\n      throw Error('Harness is attempting to use a fixture that has already been destroyed.');\n    }\n\n    this._fixture.detectChanges();\n    await this._fixture.whenStable();\n  }\n\n  protected getDocumentRoot(): Element {\n    return document.body;\n  }\n\n  protected createTestElement(element: Element): TestElement {\n    return new UnitTestElement(element, () => this.forceStabilize());\n  }\n\n  protected createEnvironment(element: Element): HarnessEnvironment<Element> {\n    return new TestbedHarnessEnvironment(element, this._fixture);\n  }\n\n  protected async getAllRawElements(selector: string): Promise<Element[]> {\n    await this.forceStabilize();\n    return Array.from(this.rawRootElement.querySelectorAll(selector));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './testbed-harness-environment';\nexport * from './unit-test-element';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["keyCodes.BACKSPACE","keyCodes.TAB","keyCodes.ENTER","keyCodes.SHIFT","keyCodes.CONTROL","keyCodes.ALT","keyCodes.ESCAPE","keyCodes.PAGE_UP","keyCodes.PAGE_DOWN","keyCodes.END","keyCodes.HOME","keyCodes.LEFT_ARROW","keyCodes.UP_ARROW","keyCodes.RIGHT_ARROW","keyCodes.DOWN_ARROW","keyCodes.INSERT","keyCodes.DELETE","keyCodes.F1","keyCodes.F2","keyCodes.F3","keyCodes.F4","keyCodes.F5","keyCodes.F6","keyCodes.F7","keyCodes.F8","keyCodes.F9","keyCodes.F10","keyCodes.F11","keyCodes.F12","keyCodes.META"],"mappings":"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"}