{"version":3,"sources":["src/cdk/cdk-layout.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","layout","core","platform","common","rxjs","operators","coercion","this","i0","hasV8BreakIterator","LayoutModule","decorators","type","NgModule","args","Intl","v8BreakIterator","_a","mediaQueryStyleNode","Platform","_platformId","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Injectable","providedIn","ctorParameters","Object","Optional","Inject","PLATFORM_ID","ɵprov","ɵɵdefineInjectable","Platform_Factory","ɵɵinject","token","mediaQueriesForWebkitCompatibility","Set","MediaMatcher","_platform","_matchMedia","matchMedia","bind","noopMatchMedia","prototype","query","createEmptyStyleRule","has","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","MediaMatcher_Factory","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","next","complete","isMatched","value","_this","splitQueries","coerceArray","some","mediaQuery","_registerQuery","mql","observe","observables","map","observable","stateObservable","combineLatest","concat","pipe","take","skip","debounceTime","breakpointStates","response","breakpoints","forEach","state","get","output","Observable","observer","handler","run","startWith","nextMql","takeUntil","set","NgZone","BreakpointObserver_Factory","queries","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/platform'), require('@angular/common'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/coercion')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/layout', ['exports', '@angular/core', '@angular/cdk/platform', '@angular/common', 'rxjs', 'rxjs/operators', '@angular/cdk/coercion'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.layout = {}), global.ng.core, global.ng.cdk.platform, global.ng.common, global.rxjs, global.rxjs.operators, global.ng.cdk.coercion));\n}(this, (function (exports, i0, platform, common, rxjs, operators, coercion) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LayoutModule = /** @class */ (function () {\n        function LayoutModule() {\n        }\n        LayoutModule.decorators = [\n            { type: i0.NgModule, args: [{},] }\n        ];\n        return LayoutModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Whether the current platform supports the V8 Break Iterator. The V8 check\n    // is necessary to detect all Blink based browsers.\n    var hasV8BreakIterator;\n    // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n    // cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n    // the consumer is providing a polyfilled `Map`. See:\n    // https://github.com/Microsoft/ChakraCore/issues/3189\n    // https://github.com/angular/components/issues/15687\n    try {\n        hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n    }\n    catch (_a) {\n        hasV8BreakIterator = false;\n    }\n    /**\n     * Service to detect the current platform by comparing the userAgent strings and\n     * checking browser-specific global properties.\n     */\n    var Platform = /** @class */ (function () {\n        /**\n         * @breaking-change 8.0.0 remove optional decorator\n         */\n        function Platform(_platformId) {\n            this._platformId = _platformId;\n            // We want to use the Angular platform check because if the Document is shimmed\n            // without the navigator, the following checks will fail. This is preferred because\n            // sometimes the Document may be shimmed without the user's knowledge or intention\n            /** Whether the Angular application is being rendered in the browser. */\n            this.isBrowser = this._platformId ?\n                common.isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n            /** Whether the current browser is Microsoft Edge. */\n            this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n            /** Whether the current rendering engine is Microsoft Trident. */\n            this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n            // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n            /** Whether the current rendering engine is Blink. */\n            this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n                typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n            // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n            // ensure that Webkit runs standalone and is not used as another engine's base.\n            /** Whether the current rendering engine is WebKit. */\n            this.WEBKIT = this.isBrowser &&\n                /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n            /** Whether the current platform is Apple iOS. */\n            this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n                !('MSStream' in window);\n            // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n            // them self as Gecko-like browsers and modify the userAgent's according to that.\n            // Since we only cover one explicit Firefox case, we can simply check for Firefox\n            // instead of having an unstable check for Gecko.\n            /** Whether the current browser is Firefox. */\n            this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n            /** Whether the current platform is Android. */\n            // Trident on mobile adds the android platform to the userAgent to trick detections.\n            this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n            // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n            // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n            // Safari browser should also use Webkit as its layout engine.\n            /** Whether the current browser is Safari. */\n            this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n        }\n        Platform.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */\n        Platform.ctorParameters = function () { return [\n            { type: Object, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [i0.PLATFORM_ID,] }] }\n        ]; };\n        Platform.ɵprov = i0.ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(i0.ɵɵinject(i0.PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n        return Platform;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Global registry for all dynamically-created, injected media queries. */\n    var mediaQueriesForWebkitCompatibility = new Set();\n    /** Style tag that holds all of the dynamically-created media queries. */\n    var mediaQueryStyleNode;\n    /** A utility for calling matchMedia queries. */\n    var MediaMatcher = /** @class */ (function () {\n        function MediaMatcher(_platform) {\n            this._platform = _platform;\n            this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n                // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                // call it from a different scope.\n                window.matchMedia.bind(window) :\n                noopMatchMedia;\n        }\n        /**\n         * Evaluates the given media query and returns the native MediaQueryList from which results\n         * can be retrieved.\n         * Confirms the layout engine will trigger for the selector query provided and returns the\n         * MediaQueryList for the query provided.\n         */\n        MediaMatcher.prototype.matchMedia = function (query) {\n            if (this._platform.WEBKIT) {\n                createEmptyStyleRule(query);\n            }\n            return this._matchMedia(query);\n        };\n        MediaMatcher.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */\n        MediaMatcher.ctorParameters = function () { return [\n            { type: platform.Platform }\n        ]; };\n        MediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n        return MediaMatcher;\n    }());\n    /**\n     * For Webkit engines that only trigger the MediaQueryListListener when\n     * there is at least one CSS selector for the respective media query.\n     */\n    function createEmptyStyleRule(query) {\n        if (mediaQueriesForWebkitCompatibility.has(query)) {\n            return;\n        }\n        try {\n            if (!mediaQueryStyleNode) {\n                mediaQueryStyleNode = document.createElement('style');\n                mediaQueryStyleNode.setAttribute('type', 'text/css');\n                document.head.appendChild(mediaQueryStyleNode);\n            }\n            if (mediaQueryStyleNode.sheet) {\n                mediaQueryStyleNode.sheet\n                    .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\n                mediaQueriesForWebkitCompatibility.add(query);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    /** No-op matchMedia replacement for non-browser platforms. */\n    function noopMatchMedia(query) {\n        // Use `as any` here to avoid adding additional necessary properties for\n        // the noop matcher.\n        return {\n            matches: query === 'all' || query === '',\n            media: query,\n            addListener: function () { },\n            removeListener: function () { }\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Utility for checking the matching state of @media queries. */\n    var BreakpointObserver = /** @class */ (function () {\n        function BreakpointObserver(_mediaMatcher, _zone) {\n            this._mediaMatcher = _mediaMatcher;\n            this._zone = _zone;\n            /**  A map of all media queries currently being listened for. */\n            this._queries = new Map();\n            /** A subject for all other observables to takeUntil based on. */\n            this._destroySubject = new rxjs.Subject();\n        }\n        /** Completes the active subject, signalling to all other observables to complete. */\n        BreakpointObserver.prototype.ngOnDestroy = function () {\n            this._destroySubject.next();\n            this._destroySubject.complete();\n        };\n        /**\n         * Whether one or more media queries match the current viewport size.\n         * @param value One or more media queries to check.\n         * @returns Whether any of the media queries match.\n         */\n        BreakpointObserver.prototype.isMatched = function (value) {\n            var _this = this;\n            var queries = splitQueries(coercion.coerceArray(value));\n            return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n        };\n        /**\n         * Gets an observable of results for the given queries that will emit new results for any changes\n         * in matching of the given queries.\n         * @param value One or more media queries to check.\n         * @returns A stream of matches for the given queries.\n         */\n        BreakpointObserver.prototype.observe = function (value) {\n            var _this = this;\n            var queries = splitQueries(coercion.coerceArray(value));\n            var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n            var stateObservable = rxjs.combineLatest(observables);\n            // Emit the first state immediately, and then debounce the subsequent emissions.\n            stateObservable = rxjs.concat(stateObservable.pipe(operators.take(1)), stateObservable.pipe(operators.skip(1), operators.debounceTime(0)));\n            return stateObservable.pipe(operators.map(function (breakpointStates) {\n                var response = {\n                    matches: false,\n                    breakpoints: {},\n                };\n                breakpointStates.forEach(function (state) {\n                    response.matches = response.matches || state.matches;\n                    response.breakpoints[state.query] = state.matches;\n                });\n                return response;\n            }));\n        };\n        /** Registers a specific query to be listened for. */\n        BreakpointObserver.prototype._registerQuery = function (query) {\n            var _this = this;\n            // Only set up a new MediaQueryList if it is not already being listened for.\n            if (this._queries.has(query)) {\n                return this._queries.get(query);\n            }\n            var mql = this._mediaMatcher.matchMedia(query);\n            // Create callback for match changes and add it is as a listener.\n            var queryObservable = new rxjs.Observable(function (observer) {\n                // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n                // back into the zone because matchMedia is only included in Zone.js by loading the\n                // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n                // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n                // patches it.\n                var handler = function (e) { return _this._zone.run(function () { return observer.next(e); }); };\n                mql.addListener(handler);\n                return function () {\n                    mql.removeListener(handler);\n                };\n            }).pipe(operators.startWith(mql), operators.map(function (nextMql) { return ({ query: query, matches: nextMql.matches }); }), operators.takeUntil(this._destroySubject));\n            // Add the MediaQueryList to the set of queries.\n            var output = { observable: queryObservable, mql: mql };\n            this._queries.set(query, output);\n            return output;\n        };\n        BreakpointObserver.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */\n        BreakpointObserver.ctorParameters = function () { return [\n            { type: MediaMatcher },\n            { type: i0.NgZone }\n        ]; };\n        BreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n        return BreakpointObserver;\n    }());\n    /**\n     * Split each query string into separate query strings if two queries are provided as comma\n     * separated.\n     */\n    function splitQueries(queries) {\n        return queries.map(function (query) { return query.split(','); })\n            .reduce(function (a1, a2) { return a1.concat(a2); })\n            .map(function (query) { return query.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // PascalCase is being used as Breakpoints is used like an enum.\n    // tslint:disable-next-line:variable-name\n    var Breakpoints = {\n        XSmall: '(max-width: 599.99px)',\n        Small: '(min-width: 600px) and (max-width: 959.99px)',\n        Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n        Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n        XLarge: '(min-width: 1920px)',\n        Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n            '(max-width: 959.99px) and (orientation: landscape)',\n        Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n            '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n        Web: '(min-width: 840px) and (orientation: portrait), ' +\n            '(min-width: 1280px) and (orientation: landscape)',\n        HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n        TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n        WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n        HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n        TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.BreakpointObserver = BreakpointObserver;\n    exports.Breakpoints = Breakpoints;\n    exports.LayoutModule = LayoutModule;\n    exports.MediaMatcher = MediaMatcher;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-layout.umd.js.map\n"]}