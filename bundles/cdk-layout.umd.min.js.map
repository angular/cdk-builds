{"version":3,"sources":["src/cdk/cdk-layout.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","cdk","layout","core","coercion","rxjs","operators","platform","this","i0","i1","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","LayoutModule","i0__namespace","i1__namespace","decorators","type","NgModule","args","mediaQueryStyleNode","mediaQueriesForWebkitCompatibility","Set","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","prototype","query","WEBKIT","createEmptyStyleRule","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","console","error","matches","media","addListener","removeListener","ɵprov","ɵɵdefineInjectable","MediaMatcher_Factory","ɵɵinject","Platform","token","providedIn","Injectable","ctorParameters","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","next","complete","isMatched","value","_this","splitQueries","coerceArray","some","mediaQuery","_registerQuery","mql","observe","observables","map","observable","stateObservable","combineLatest","concat","pipe","take","skip","debounceTime","breakpointStates","response","breakpoints","_a","output","Observable","observer","handler","run","startWith","takeUntil","set","queries","split","reduce","a1","a2","trim","BreakpointObserver_Factory","NgZone","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/coercion'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/platform')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/layout', ['exports', '@angular/core', '@angular/cdk/coercion', 'rxjs', 'rxjs/operators', '@angular/cdk/platform'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.layout = {}), global.ng.core, global.ng.cdk.coercion, global.rxjs, global.rxjs.operators, global.ng.cdk.platform));\n}(this, (function (exports, i0, coercion, rxjs, operators, i1) { 'use strict';\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return Object.freeze(n);\n    }\n\n    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);\n    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LayoutModule = /** @class */ (function () {\n        function LayoutModule() {\n        }\n        return LayoutModule;\n    }());\n    LayoutModule.decorators = [\n        { type: i0.NgModule, args: [{},] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Global registry for all dynamically-created, injected media queries. */\n    var mediaQueriesForWebkitCompatibility = new Set();\n    /** Style tag that holds all of the dynamically-created media queries. */\n    var mediaQueryStyleNode;\n    /** A utility for calling matchMedia queries. */\n    var MediaMatcher = /** @class */ (function () {\n        function MediaMatcher(_platform) {\n            this._platform = _platform;\n            this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n                // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                // call it from a different scope.\n                window.matchMedia.bind(window) :\n                noopMatchMedia;\n        }\n        /**\n         * Evaluates the given media query and returns the native MediaQueryList from which results\n         * can be retrieved.\n         * Confirms the layout engine will trigger for the selector query provided and returns the\n         * MediaQueryList for the query provided.\n         */\n        MediaMatcher.prototype.matchMedia = function (query) {\n            if (this._platform.WEBKIT) {\n                createEmptyStyleRule(query);\n            }\n            return this._matchMedia(query);\n        };\n        return MediaMatcher;\n    }());\n    MediaMatcher.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0__namespace.ɵɵinject(i1__namespace.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n    MediaMatcher.decorators = [\n        { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    MediaMatcher.ctorParameters = function () { return [\n        { type: i1.Platform }\n    ]; };\n    /**\n     * For Webkit engines that only trigger the MediaQueryListListener when\n     * there is at least one CSS selector for the respective media query.\n     */\n    function createEmptyStyleRule(query) {\n        if (mediaQueriesForWebkitCompatibility.has(query)) {\n            return;\n        }\n        try {\n            if (!mediaQueryStyleNode) {\n                mediaQueryStyleNode = document.createElement('style');\n                mediaQueryStyleNode.setAttribute('type', 'text/css');\n                document.head.appendChild(mediaQueryStyleNode);\n            }\n            if (mediaQueryStyleNode.sheet) {\n                mediaQueryStyleNode.sheet\n                    .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\n                mediaQueriesForWebkitCompatibility.add(query);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    /** No-op matchMedia replacement for non-browser platforms. */\n    function noopMatchMedia(query) {\n        // Use `as any` here to avoid adding additional necessary properties for\n        // the noop matcher.\n        return {\n            matches: query === 'all' || query === '',\n            media: query,\n            addListener: function () { },\n            removeListener: function () { }\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Utility for checking the matching state of @media queries. */\n    var BreakpointObserver = /** @class */ (function () {\n        function BreakpointObserver(_mediaMatcher, _zone) {\n            this._mediaMatcher = _mediaMatcher;\n            this._zone = _zone;\n            /**  A map of all media queries currently being listened for. */\n            this._queries = new Map();\n            /** A subject for all other observables to takeUntil based on. */\n            this._destroySubject = new rxjs.Subject();\n        }\n        /** Completes the active subject, signalling to all other observables to complete. */\n        BreakpointObserver.prototype.ngOnDestroy = function () {\n            this._destroySubject.next();\n            this._destroySubject.complete();\n        };\n        /**\n         * Whether one or more media queries match the current viewport size.\n         * @param value One or more media queries to check.\n         * @returns Whether any of the media queries match.\n         */\n        BreakpointObserver.prototype.isMatched = function (value) {\n            var _this = this;\n            var queries = splitQueries(coercion.coerceArray(value));\n            return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n        };\n        /**\n         * Gets an observable of results for the given queries that will emit new results for any changes\n         * in matching of the given queries.\n         * @param value One or more media queries to check.\n         * @returns A stream of matches for the given queries.\n         */\n        BreakpointObserver.prototype.observe = function (value) {\n            var _this = this;\n            var queries = splitQueries(coercion.coerceArray(value));\n            var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n            var stateObservable = rxjs.combineLatest(observables);\n            // Emit the first state immediately, and then debounce the subsequent emissions.\n            stateObservable = rxjs.concat(stateObservable.pipe(operators.take(1)), stateObservable.pipe(operators.skip(1), operators.debounceTime(0)));\n            return stateObservable.pipe(operators.map(function (breakpointStates) {\n                var response = {\n                    matches: false,\n                    breakpoints: {},\n                };\n                breakpointStates.forEach(function (_a) {\n                    var matches = _a.matches, query = _a.query;\n                    response.matches = response.matches || matches;\n                    response.breakpoints[query] = matches;\n                });\n                return response;\n            }));\n        };\n        /** Registers a specific query to be listened for. */\n        BreakpointObserver.prototype._registerQuery = function (query) {\n            var _this = this;\n            // Only set up a new MediaQueryList if it is not already being listened for.\n            if (this._queries.has(query)) {\n                return this._queries.get(query);\n            }\n            var mql = this._mediaMatcher.matchMedia(query);\n            // Create callback for match changes and add it is as a listener.\n            var queryObservable = new rxjs.Observable(function (observer) {\n                // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n                // back into the zone because matchMedia is only included in Zone.js by loading the\n                // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n                // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n                // patches it.\n                var handler = function (e) { return _this._zone.run(function () { return observer.next(e); }); };\n                mql.addListener(handler);\n                return function () {\n                    mql.removeListener(handler);\n                };\n            }).pipe(operators.startWith(mql), operators.map(function (_a) {\n                var matches = _a.matches;\n                return ({ query: query, matches: matches });\n            }), operators.takeUntil(this._destroySubject));\n            // Add the MediaQueryList to the set of queries.\n            var output = { observable: queryObservable, mql: mql };\n            this._queries.set(query, output);\n            return output;\n        };\n        return BreakpointObserver;\n    }());\n    BreakpointObserver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0__namespace.ɵɵinject(MediaMatcher), i0__namespace.ɵɵinject(i0__namespace.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n    BreakpointObserver.decorators = [\n        { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    BreakpointObserver.ctorParameters = function () { return [\n        { type: MediaMatcher },\n        { type: i0.NgZone }\n    ]; };\n    /**\n     * Split each query string into separate query strings if two queries are provided as comma\n     * separated.\n     */\n    function splitQueries(queries) {\n        return queries.map(function (query) { return query.split(','); })\n            .reduce(function (a1, a2) { return a1.concat(a2); })\n            .map(function (query) { return query.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // PascalCase is being used as Breakpoints is used like an enum.\n    // tslint:disable-next-line:variable-name\n    var Breakpoints = {\n        XSmall: '(max-width: 599.98px)',\n        Small: '(min-width: 600px) and (max-width: 959.98px)',\n        Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n        Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n        XLarge: '(min-width: 1920px)',\n        Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n            '(max-width: 959.98px) and (orientation: landscape)',\n        Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n            '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n        Web: '(min-width: 840px) and (orientation: portrait), ' +\n            '(min-width: 1280px) and (orientation: landscape)',\n        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n        TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n        WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n        TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.BreakpointObserver = BreakpointObserver;\n    exports.Breakpoints = Breakpoints;\n    exports.LayoutModule = LayoutModule;\n    exports.MediaMatcher = MediaMatcher;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-layout.umd.js.map\n"]}