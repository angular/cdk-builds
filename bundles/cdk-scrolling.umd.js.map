{"version":3,"file":"cdk-scrolling.umd.js","sources":["../../../../../../src/cdk/scrolling/virtual-scroll-strategy.ts","../../../../../../src/cdk/scrolling/fixed-size-virtual-scroll.ts","../../../../../../src/cdk/scrolling/scroll-dispatcher.ts","../../../../../../src/cdk/scrolling/scrollable.ts","npm_package.esm5/src/cdk/scrolling/virtual-scroll-viewport.js","../../../../../../src/cdk/scrolling/virtual-for-of.ts","../../../../../../src/cdk/scrolling/scrolling-module.ts","../../../../../../src/cdk/scrolling/viewport-ruler.ts","../../../../../../src/cdk/scrolling/public-api.ts","../../../../../../src/cdk/scrolling/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The injection token used to specify the virtual scrolling strategy. */\nexport const VIRTUAL_SCROLL_STRATEGY =\n    new InjectionToken<VirtualScrollStrategy>('VIRTUAL_SCROLL_STRATEGY');\n\n\n/** A strategy that dictates which items should be rendered in the viewport. */\nexport interface VirtualScrollStrategy {\n  /** Emits when the index of the first element visible in the viewport changes. */\n  scrolledIndexChange: Observable<number>;\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport): void;\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach(): void;\n\n  /** Called when the viewport is scrolled (debounced using requestAnimationFrame). */\n  onContentScrolled(): void;\n\n  /** Called when the length of the data changes. */\n  onDataLengthChanged(): void;\n\n  /** Called when the range of items rendered in the DOM has changed. */\n  onContentRendered(): void;\n\n  /** Called when the offset of the rendered items changed. */\n  onRenderedOffsetChanged(): void;\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Directive, forwardRef, Input, OnChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\nimport {VIRTUAL_SCROLL_STRATEGY, VirtualScrollStrategy} from './virtual-scroll-strategy';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nexport class FixedSizeVirtualScrollStrategy implements VirtualScrollStrategy {\n  private _scrolledIndexChange = new Subject<number>();\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange: Observable<number> = this._scrolledIndexChange.pipe(distinctUntilChanged());\n\n  /** The attached viewport. */\n  private _viewport: CdkVirtualScrollViewport | null = null;\n\n  /** The size of the items in the virtually scrolling list. */\n  private _itemSize: number;\n\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  private _minBufferPx: number;\n\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  private _maxBufferPx: number;\n\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    if (maxBufferPx < minBufferPx) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() { /* no-op */ }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() { /* no-op */ }\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n\n  /** Update the viewport's total content size. */\n  private _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n\n  /** Update the viewport's rendered range. */\n  private _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n\n    const scrollOffset = this._viewport.measureScrollOffset();\n    const firstVisibleIndex = scrollOffset / this._itemSize;\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {start: renderedRange.start, end: renderedRange.end};\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength,\n          Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0,\n              Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n\n\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nexport function _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir: CdkFixedSizeVirtualScroll) {\n  return fixedSizeDir._scrollStrategy;\n}\n\n\n/** A virtual scroll strategy that supports fixed-size items. */\n@Directive({\n  selector: 'cdk-virtual-scroll-viewport[itemSize]',\n  providers: [{\n    provide: VIRTUAL_SCROLL_STRATEGY,\n    useFactory: _fixedSizeVirtualScrollStrategyFactory,\n    deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n  }],\n})\nexport class CdkFixedSizeVirtualScroll implements OnChanges {\n  /** The size of the items in the list (in pixels). */\n  @Input()\n  get itemSize(): number { return this._itemSize; }\n  set itemSize(value: number) { this._itemSize = coerceNumberProperty(value); }\n  _itemSize = 20;\n\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  @Input()\n  get minBufferPx(): number { return this._minBufferPx; }\n  set minBufferPx(value: number) { this._minBufferPx = coerceNumberProperty(value); }\n  _minBufferPx = 100;\n\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  @Input()\n  get maxBufferPx(): number { return this._maxBufferPx; }\n  set maxBufferPx(value: number) { this._maxBufferPx = coerceNumberProperty(value); }\n  _maxBufferPx = 200;\n\n  /** The scroll strategy used by this directive. */\n  _scrollStrategy =\n      new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {fromEvent, of as observableOf, Subject, Subscription, Observable, Observer} from 'rxjs';\nimport {auditTime, filter} from 'rxjs/operators';\nimport {CdkScrollable} from './scrollable';\n\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollDispatcher implements OnDestroy {\n  constructor(private _ngZone: NgZone, private _platform: Platform) { }\n\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  private _scrolled = new Subject<CdkScrollable|void>();\n\n  /** Keeps track of the global `scroll` and `resize` subscriptions. */\n  _globalSubscription: Subscription | null = null;\n\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  private _scrolledCount = 0;\n\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers: Map<CdkScrollable, Subscription> = new Map();\n\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable: CdkScrollable): void {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n          .subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n\n  /**\n   * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable: CdkScrollable): void {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME): Observable<CdkScrollable|void> {\n    if (!this._platform.isBrowser) {\n      return observableOf<void>();\n    }\n\n    return new Observable((observer: Observer<CdkScrollable|void>) => {\n      if (!this._globalSubscription) {\n        this._addGlobalListener();\n      }\n\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ?\n        this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n        this._scrolled.subscribe(observer);\n\n      this._scrolledCount++;\n\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n\n        if (!this._scrolledCount) {\n          this._removeGlobalListener();\n        }\n      };\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeGlobalListener();\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementRef: ElementRef, auditTimeInMs?: number): Observable<CdkScrollable|void> {\n    const ancestors = this.getAncestorScrollContainers(elementRef);\n\n    return this.scrolled(auditTimeInMs).pipe(filter(target => {\n      return !target || ancestors.indexOf(target) > -1;\n    }));\n  }\n\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementRef: ElementRef): CdkScrollable[] {\n    const scrollingContainers: CdkScrollable[] = [];\n\n    this.scrollContainers.forEach((_subscription: Subscription, scrollable: CdkScrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n\n  /** Returns true if the element is contained within the provided Scrollable. */\n  private _scrollableContainsElement(scrollable: CdkScrollable, elementRef: ElementRef): boolean {\n    let element: HTMLElement | null = elementRef.nativeElement;\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element!.parentElement);\n\n    return false;\n  }\n\n  /** Sets up the global scroll listeners. */\n  private _addGlobalListener() {\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n    });\n  }\n\n  /** Cleans up the global scroll listener. */\n  private _removeGlobalListener() {\n    if (this._globalSubscription) {\n      this._globalSubscription.unsubscribe();\n      this._globalSubscription = null;\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function SCROLL_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: ScrollDispatcher, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const SCROLL_DISPATCHER_PROVIDER = {\n  // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n  provide: ScrollDispatcher,\n  deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n  useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  getRtlScrollAxisType,\n  RtlScrollAxisType,\n  supportsScrollBehavior\n} from '@angular/cdk/platform';\nimport {Directive, ElementRef, NgZone, OnDestroy, OnInit, Optional} from '@angular/core';\nimport {fromEvent, Observable, Subject, Observer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\nexport type _Without<T> = {[P in keyof T]?: never};\nexport type _XOR<T, U> = (_Without<T> & U) | (_Without<U> & T);\nexport type _Top = {top?: number};\nexport type _Bottom = {bottom?: number};\nexport type _Left = {left?: number};\nexport type _Right = {right?: number};\nexport type _Start = {start?: number};\nexport type _End = {end?: number};\nexport type _XAxis = _XOR<_XOR<_Left, _Right>, _XOR<_Start, _End>>;\nexport type _YAxis = _XOR<_Top, _Bottom>;\n\n/**\n * An extended version of ScrollToOptions that allows expressing scroll offsets relative to the\n * top, bottom, left, right, start, or end of the viewport rather than just the top and left.\n * Please note: the top and bottom properties are mutually exclusive, as are the left, right,\n * start, and end properties.\n */\nexport type ExtendedScrollToOptions = _XAxis & _YAxis & ScrollOptions;\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n  selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class CdkScrollable implements OnInit, OnDestroy {\n  private _destroyed = new Subject();\n\n  private _elementScrolled: Observable<Event> = new Observable((observer: Observer<Event>) =>\n      this.ngZone.runOutsideAngular(() =>\n          fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n              .subscribe(observer)));\n\n  constructor(protected elementRef: ElementRef<HTMLElement>,\n              protected scrollDispatcher: ScrollDispatcher,\n              protected ngZone: NgZone,\n              @Optional() protected dir?: Directionality) {}\n\n  ngOnInit() {\n    this.scrollDispatcher.register(this);\n  }\n\n  ngOnDestroy() {\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled(): Observable<Event> {\n    return this._elementScrolled;\n  }\n\n  /** Gets the ElementRef for the viewport. */\n  getElementRef(): ElementRef<HTMLElement> {\n    return this.elementRef;\n  }\n\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options: ExtendedScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n\n    // Rewrite start & end offsets as right or left offsets.\n    options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n    options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      (options as _Without<_Bottom> & _Top).top =\n          el.scrollHeight - el.clientHeight - options.bottom;\n    }\n\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        (options as _Without<_Left> & _Right).right =\n            el.scrollWidth - el.clientWidth - options.left;\n      }\n\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        (options as _Without<_Right> & _Left).left =\n            el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n\n    this._applyScrollToOptions(options);\n  }\n\n  private _applyScrollToOptions(options: ScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, } from '@angular/core';\nimport { animationFrameScheduler, asapScheduler, Observable, Subject } from 'rxjs';\nimport { auditTime, startWith, takeUntil } from 'rxjs/operators';\nimport { ScrollDispatcher } from './scroll-dispatcher';\nimport { CdkScrollable } from './scrollable';\nimport { VIRTUAL_SCROLL_STRATEGY } from './virtual-scroll-strategy';\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nvar SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nvar CdkVirtualScrollViewport = /** @class */ (function (_super) {\n    tslib_1.__extends(CdkVirtualScrollViewport, _super);\n    function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        var _this = _super.call(this, elementRef, scrollDispatcher, ngZone, dir) || this;\n        _this.elementRef = elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        _this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        _this._renderedRangeSubject = new Subject();\n        _this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        _this.scrolledIndexChange = new Observable(function (observer) {\n            return _this._scrollStrategy.scrolledIndexChange.subscribe(function (index) {\n                return Promise.resolve().then(function () { return _this.ngZone.run(function () { return observer.next(index); }); });\n            });\n        });\n        /** A stream that emits whenever the rendered range changes. */\n        _this.renderedRangeStream = _this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        _this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        _this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        _this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        _this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        _this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        _this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        _this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        _this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        _this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        _this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        return _this;\n    }\n    Object.defineProperty(CdkVirtualScrollViewport.prototype, \"orientation\", {\n        /** The direction the viewport scrolls. */\n        get: function () {\n            return this._orientation;\n        },\n        set: function (orientation) {\n            if (this._orientation !== orientation) {\n                this._orientation = orientation;\n                this._calculateSpacerSize();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CdkVirtualScrollViewport.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n            _this._measureViewportSize();\n            _this._scrollStrategy.attach(_this);\n            _this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(function () { return _this._scrollStrategy.onContentScrolled(); });\n            _this._markChangeDetectionNeeded();\n        }); });\n    };\n    CdkVirtualScrollViewport.prototype.ngOnDestroy = function () {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    /** Attaches a `CdkVirtualForOf` to this viewport. */\n    CdkVirtualScrollViewport.prototype.attach = function (forOf) {\n        var _this = this;\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(function () {\n            _this._forOf = forOf;\n            _this._forOf.dataStream.pipe(takeUntil(_this._detachedSubject)).subscribe(function (data) {\n                var newLength = data.length;\n                if (newLength !== _this._dataLength) {\n                    _this._dataLength = newLength;\n                    _this._scrollStrategy.onDataLengthChanged();\n                }\n                _this._doChangeDetection();\n            });\n        });\n    };\n    /** Detaches the current `CdkVirtualForOf`. */\n    CdkVirtualScrollViewport.prototype.detach = function () {\n        this._forOf = null;\n        this._detachedSubject.next();\n    };\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    CdkVirtualScrollViewport.prototype.getDataLength = function () {\n        return this._dataLength;\n    };\n    /** Gets the size of the viewport (in pixels). */\n    CdkVirtualScrollViewport.prototype.getViewportSize = function () {\n        return this._viewportSize;\n    };\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    CdkVirtualScrollViewport.prototype.getRenderedRange = function () {\n        return this._renderedRange;\n    };\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    CdkVirtualScrollViewport.prototype.setTotalContentSize = function (size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    };\n    /** Sets the currently rendered range of indices. */\n    CdkVirtualScrollViewport.prototype.setRenderedRange = function (range) {\n        var _this = this;\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(function () { return _this._scrollStrategy.onContentRendered(); });\n        }\n    };\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    CdkVirtualScrollViewport.prototype.getOffsetToRenderedContentStart = function () {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    };\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedContentOffset = function (offset, to) {\n        var _this = this;\n        if (to === void 0) { to = 'to-start'; }\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        var isHorizontal = this.orientation == 'horizontal';\n        var axis = isHorizontal ? 'X' : 'Y';\n        var axisDirection = isHorizontal && isRtl ? -1 : 1;\n        var transform = \"translate\" + axis + \"(\" + Number(axisDirection * offset) + \"px)\";\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += \" translate\" + axis + \"(-100%)\";\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(function () {\n                if (_this._renderedContentOffsetNeedsRewrite) {\n                    _this._renderedContentOffset -= _this.measureRenderedContentSize();\n                    _this._renderedContentOffsetNeedsRewrite = false;\n                    _this.setRenderedContentOffset(_this._renderedContentOffset);\n                }\n                else {\n                    _this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    };\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    CdkVirtualScrollViewport.prototype.scrollToOffset = function (offset, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        var options = { behavior: behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    };\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    CdkVirtualScrollViewport.prototype.scrollToIndex = function (index, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    };\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    CdkVirtualScrollViewport.prototype.measureScrollOffset = function (from) {\n        return _super.prototype.measureScrollOffset.call(this, from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    };\n    /** Measure the combined size of all of the rendered items. */\n    CdkVirtualScrollViewport.prototype.measureRenderedContentSize = function () {\n        var contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    };\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    CdkVirtualScrollViewport.prototype.measureRangeSize = function (range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    };\n    /** Update the viewport dimensions and re-render. */\n    CdkVirtualScrollViewport.prototype.checkViewportSize = function () {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    };\n    /** Measure the viewport size. */\n    CdkVirtualScrollViewport.prototype._measureViewportSize = function () {\n        var viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    };\n    /** Queue up change detection to run. */\n    CdkVirtualScrollViewport.prototype._markChangeDetectionNeeded = function (runAfter) {\n        var _this = this;\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n                _this._doChangeDetection();\n            }); });\n        }\n    };\n    /** Run change detection. */\n    CdkVirtualScrollViewport.prototype._doChangeDetection = function () {\n        var e_1, _a;\n        var _this = this;\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(function () { return _this._changeDetectorRef.markForCheck(); });\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        var runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        try {\n            for (var runAfterChangeDetection_1 = tslib_1.__values(runAfterChangeDetection), runAfterChangeDetection_1_1 = runAfterChangeDetection_1.next(); !runAfterChangeDetection_1_1.done; runAfterChangeDetection_1_1 = runAfterChangeDetection_1.next()) {\n                var fn = runAfterChangeDetection_1_1.value;\n                fn();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (runAfterChangeDetection_1_1 && !runAfterChangeDetection_1_1.done && (_a = runAfterChangeDetection_1.return)) _a.call(runAfterChangeDetection_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    CdkVirtualScrollViewport.prototype._calculateSpacerSize = function () {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : this._totalContentSize + \"px\";\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? this._totalContentSize + \"px\" : '';\n    };\n    CdkVirtualScrollViewport.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'cdk-virtual-scroll-viewport',\n                    template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                    host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: CdkScrollable,\n                            useExisting: CdkVirtualScrollViewport,\n                        }],\n                    styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}/*# sourceMappingURL=virtual-scroll-viewport.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    CdkVirtualScrollViewport.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ScrollDispatcher }\n    ]; };\n    CdkVirtualScrollViewport.propDecorators = {\n        orientation: [{ type: Input }],\n        scrolledIndexChange: [{ type: Output }],\n        _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n    };\n    return CdkVirtualScrollViewport;\n}(CdkScrollable));\nexport { CdkVirtualScrollViewport };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ArrayDataSource,\n  CollectionViewer,\n  DataSource,\n  ListRange,\n  isDataSource,\n} from '@angular/cdk/collections';\nimport {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  NgZone,\n  OnDestroy,\n  SkipSelf,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Observable, Subject, of as observableOf} from 'rxjs';\nimport {pairwise, shareReplay, startWith, switchMap, takeUntil} from 'rxjs/operators';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The context for an item rendered by `CdkVirtualForOf` */\nexport type CdkVirtualForOfContext<T> = {\n  /** The item value. */\n  $implicit: T;\n  /** The DataSource, Observable, or NgIterable that was passed to *cdkVirtualFor. */\n  cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T>;\n  /** The index of the item in the DataSource. */\n  index: number;\n  /** The number of items in the DataSource. */\n  count: number;\n  /** Whether this is the first item in the DataSource. */\n  first: boolean;\n  /** Whether this is the last item in the DataSource. */\n  last: boolean;\n  /** Whether the index is even. */\n  even: boolean;\n  /** Whether the index is odd. */\n  odd: boolean;\n};\n\n\n/** Helper to extract size from a DOM Node. */\nfunction getSize(orientation: 'horizontal' | 'vertical', node: Node): number {\n  const el = node as Element;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  return orientation == 'horizontal' ? rect.width : rect.height;\n}\n\n\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\n@Directive({\n  selector: '[cdkVirtualFor][cdkVirtualForOf]',\n})\nexport class CdkVirtualForOf<T> implements CollectionViewer, DoCheck, OnDestroy {\n  /** Emits when the rendered view of the data changes. */\n  viewChange = new Subject<ListRange>();\n\n  /** Subject that emits when a new DataSource instance is given. */\n  private _dataSourceChanges = new Subject<DataSource<T>>();\n\n  /** The DataSource to display. */\n  @Input()\n  get cdkVirtualForOf(): DataSource<T> | Observable<T[]> | NgIterable<T> {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value: DataSource<T> | Observable<T[]> | NgIterable<T>) {\n    this._cdkVirtualForOf = value;\n    const ds = isDataSource(value) ? value :\n        // Slice the value if its an NgIterable to ensure we're working with an array.\n        new ArrayDataSource<T>(\n            value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n    this._dataSourceChanges.next(ds);\n  }\n  _cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T>;\n\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  @Input()\n  get cdkVirtualForTrackBy(): TrackByFunction<T> | undefined {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn: TrackByFunction<T> | undefined) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ?\n        (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n        undefined;\n  }\n  private _cdkVirtualForTrackBy: TrackByFunction<T> | undefined;\n\n  /** The template used to stamp out new elements. */\n  @Input()\n  set cdkVirtualForTemplate(value: TemplateRef<CdkVirtualForOfContext<T>>) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  @Input() cdkVirtualForTemplateCacheSize: number = 20;\n\n  /** Emits whenever the data in the current DataSource changes. */\n  dataStream: Observable<T[] | ReadonlyArray<T>> = this._dataSourceChanges\n      .pipe(\n          // Start off with null `DataSource`.\n          startWith(null!),\n          // Bundle up the previous and current data sources so we can work with both.\n          pairwise(),\n          // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n          // new one, passing back a stream of data changes which we run through `switchMap` to give\n          // us a data stream that emits the latest data from whatever the current `DataSource` is.\n          switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n          // Replay the last emitted data when someone subscribes.\n          shareReplay(1));\n\n  /** The differ used to calculate changes to the data. */\n  private _differ: IterableDiffer<T> | null = null;\n\n  /** The most recent data emitted from the DataSource. */\n  private _data: T[] | ReadonlyArray<T>;\n\n  /** The currently rendered items. */\n  private _renderedItems: T[];\n\n  /** The currently rendered range of indices. */\n  private _renderedRange: ListRange;\n\n  /**\n   * The template cache used to hold on ot template instancess that have been stamped out, but don't\n   * currently need to be rendered. These instances will be reused in the future rather than\n   * stamping out brand new ones.\n   */\n  private _templateCache: EmbeddedViewRef<CdkVirtualForOfContext<T>>[] = [];\n\n  /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n  private _needsUpdate = false;\n\n  private _destroyed = new Subject<void>();\n\n  constructor(\n      /** The view container to add items to. */\n      private _viewContainerRef: ViewContainerRef,\n      /** The template to use when stamping out new items. */\n      private _template: TemplateRef<CdkVirtualForOfContext<T>>,\n      /** The set of available differs. */\n      private _differs: IterableDiffers,\n      /** The virtual scrolling viewport that these items are being rendered in. */\n      @SkipSelf() private _viewport: CdkVirtualScrollViewport,\n      ngZone: NgZone) {\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      ngZone.run(() => this.viewChange.next(this._renderedRange));\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range: ListRange, orientation: 'horizontal' | 'vertical'): number {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n\n    // Loop over all root nodes for all items in the range and sum up their size.\n    let totalSize = 0;\n    let i = rangeLen;\n    while (i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>> | null;\n      let j = view ? view.rootNodes.length : 0;\n      while (j--) {\n        totalSize += getSize(orientation, view!.rootNodes[j]);\n      }\n    }\n\n    return totalSize;\n  }\n\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._viewport.detach();\n\n    this._dataSourceChanges.next();\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    for (let view of this._templateCache) {\n      view.destroy();\n    }\n  }\n\n  /** React to scroll state changes in the viewport. */\n  private _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n    }\n    this._needsUpdate = true;\n  }\n\n  /** Swap out one `DataSource` for another. */\n  private _changeDataSource(oldDs: DataSource<T> | null, newDs: DataSource<T> | null):\n    Observable<T[] | ReadonlyArray<T>> {\n\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : observableOf();\n  }\n\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  private _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      let view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n\n  /** Apply changes to the DOM. */\n  private _applyChanges(changes: IterableChanges<T>) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record: IterableChangeRecord<T>,\n                              adjustedPreviousIndex: number | null,\n                              currentIndex: number | null) => {\n      if (record.previousIndex == null) {  // Item added.\n        const view = this._insertViewForNewItem(currentIndex!);\n        view.context.$implicit = record.item;\n      } else if (currentIndex == null) {  // Item removed.\n        this._cacheView(this._detachView(adjustedPreviousIndex !));\n      } else {  // Item moved.\n        const view = this._viewContainerRef.get(adjustedPreviousIndex!) as\n            EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n        this._viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = record.item;\n      }\n    });\n\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const view = this._viewContainerRef.get(record.currentIndex!) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.$implicit = record.item;\n    });\n\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n\n  /** Cache the given detached view. */\n  private _cacheView(view: EmbeddedViewRef<CdkVirtualForOfContext<T>>) {\n    if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n      this._templateCache.push(view);\n    } else {\n      const index = this._viewContainerRef.indexOf(view);\n\n      // It's very unlikely that the index will ever be -1, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        this._viewContainerRef.remove(index);\n      }\n    }\n  }\n\n  /** Inserts a view for a new item, either from the cache or by creating a new one. */\n  private _insertViewForNewItem(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n  }\n\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  private _updateComputedContextProperties(context: CdkVirtualForOfContext<any>) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n\n  /** Creates a new embedded view and moves it to the given index */\n  private _createEmbeddedViewAt(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    // Note that it's important that we insert the item directly at the proper index,\n    // rather than inserting it and the moving it in place, because if there's a directive\n    // on the same node that injects the `ViewContainerRef`, Angular will insert another\n    // comment node which can throw off the move when it's being repeated for all items.\n    return this._viewContainerRef.createEmbeddedView(this._template, {\n      $implicit: null!,\n      cdkVirtualForOf: this._cdkVirtualForOf,\n      index: -1,\n      count: -1,\n      first: false,\n      last: false,\n      odd: false,\n      even: false\n    }, index);\n  }\n\n  /** Inserts a recycled view from the cache at the given index. */\n  private _insertViewFromCache(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>>|null {\n    const cachedView = this._templateCache.pop();\n    if (cachedView) {\n      this._viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n\n  /** Detaches the embedded view at the given index. */\n  private _detachView(index: number): EmbeddedViewRef<CdkVirtualForOfContext<T>> {\n    return this._viewContainerRef.detach(index) as\n        EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkFixedSizeVirtualScroll} from './fixed-size-virtual-scroll';\nimport {CdkScrollable} from './scrollable';\nimport {CdkVirtualForOf} from './virtual-for-of';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n@NgModule({\n  imports: [BidiModule, PlatformModule],\n  exports: [\n    BidiModule,\n    CdkFixedSizeVirtualScroll,\n    CdkScrollable,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n  declarations: [\n    CdkFixedSizeVirtualScroll,\n    CdkScrollable,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n})\nexport class ScrollingModule {}\n\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * @breaking-change 8.0.0 delete this alias\n */\n@NgModule({\n  imports: [ScrollingModule],\n  exports: [ScrollingModule],\n})\nexport class ScrollDispatchModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable, NgZone, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {merge, of as observableOf, fromEvent, Observable, Subscription} from 'rxjs';\nimport {auditTime} from 'rxjs/operators';\n\n/** Time in ms to throttle the resize events by default. */\nexport const DEFAULT_RESIZE_TIME = 20;\n\n/** Object that holds the scroll position of the viewport in each direction. */\nexport interface ViewportScrollPosition {\n  top: number;\n  left: number;\n}\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class ViewportRuler implements OnDestroy {\n  /** Cached viewport dimensions. */\n  private _viewportSize: {width: number; height: number};\n\n  /** Stream of viewport change events. */\n  private _change: Observable<Event>;\n\n  /** Subscription to streams that invalidate the cached viewport dimensions. */\n  private _invalidateCache: Subscription;\n\n  constructor(private _platform: Platform, ngZone: NgZone) {\n    ngZone.runOutsideAngular(() => {\n      this._change = _platform.isBrowser ?\n          merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n          observableOf();\n\n      // Note that we need to do the subscription inside `runOutsideAngular`\n      // since subscribing is what causes the event listener to be added.\n      this._invalidateCache = this.change().subscribe(() => this._updateViewportSize());\n    });\n  }\n\n  ngOnDestroy() {\n    this._invalidateCache.unsubscribe();\n  }\n\n  /** Returns the viewport's width and height. */\n  getViewportSize(): Readonly<{width: number, height: number}> {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n\n    const output = {width: this._viewportSize.width, height: this._viewportSize.height};\n\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null!;\n    }\n\n    return output;\n  }\n\n  /** Gets a ClientRect for the viewport's bounds. */\n  getViewportRect(): ClientRect {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {width, height} = this.getViewportSize();\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition(): ViewportScrollPosition {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {top: 0, left: 0};\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const documentElement = document.documentElement!;\n    const documentRect = documentElement.getBoundingClientRect();\n\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                 documentElement.scrollTop || 0;\n\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime: number = DEFAULT_RESIZE_TIME): Observable<Event> {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n\n  /** Updates the cached viewport size. */\n  private _updateViewportSize() {\n    this._viewportSize = this._platform.isBrowser ?\n        {width: window.innerWidth, height: window.innerHeight} :\n        {width: 0, height: 0};\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                platform: Platform,\n                                                ngZone: NgZone) {\n  return parentRuler || new ViewportRuler(platform, ngZone);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const VIEWPORT_RULER_PROVIDER = {\n  // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n  provide: ViewportRuler,\n  deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n  useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './fixed-size-virtual-scroll';\nexport * from './scroll-dispatcher';\nexport * from './scrollable';\nexport * from './scrolling-module';\nexport * from './viewport-ruler';\nexport * from './virtual-for-of';\nexport * from './virtual-scroll-strategy';\nexport * from './virtual-scroll-viewport';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","Subject","distinctUntilChanged","coerceNumberProperty","Directive","forwardRef","Input","observableOf","Observable","auditTime","filter","fromEvent","Injectable","NgZone","Platform","Optional","SkipSelf","takeUntil","getRtlScrollAxisType","RtlScrollAxisType","supportsScrollBehavior","ElementRef","Directionality","animationFrameScheduler","asapScheduler","tslib_1.__extends","startWith","tslib_1.__values","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Inject","Output","ViewChild","pairwise","switchMap","shareReplay","isDataSource","ArrayDataSource","ViewContainerRef","TemplateRef","IterableDiffers","NgModule","BidiModule","PlatformModule","merge"],"mappings":"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"}