{"version":3,"sources":["src/cdk/cdk-testing-testbed.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","testing","testbed","tslib","core","rxjs","operators","keycodes","this","tslib_1","testing$1","keyCodes","TestKey","_a","stateObservableSymbol","Symbol","TaskStateZoneInterceptor","_lastState","_stateSubject","BehaviorSubject","_getTaskStateFromInternalZoneState","stable","state","asObservable","prototype","onHasTask","delegate","current","target","hasTaskState","next","macroTask","microTask","setup","undefined","Zone","Error","ProxyZoneSpec","zoneSpec","assertPresent","interceptor","lastTaskState","zoneSpecOnHasTask","apply","arguments","keyMap","BACKSPACE","keyCode","key","TAB","ENTER","SHIFT","CONTROL","ALT","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","META","UnitTestElement","element","_stabilize","blur","__awaiter","__generator","label","sent","triggerBlur","clear","isTextInput","clearElement","click","relativeX","relativeY","top","clientX","clientY","_b","getBoundingClientRect","Math","round","left","dispatchMouseEvent","focus","triggerFocus","getCssValue","property","getComputedStyle","getPropertyValue","hover","sendKeys","modifiersAndKeys","_i","length","args","map","k","typeInElement","__spread","text","textContent","trim","getAttribute","name","hasClass","classList","contains","getDimensions","getProperty","matchesSelector","selector","elementPrototype","Element","call","TestbedHarnessEnvironment","_super","rawRootElement","_fixture","_this","_destroyed","_taskState","componentRef","onDestroy","__extends","loader","fixture","nativeElement","documentRootLoader","document","body","harnessForFixture","harnessType","environment","forceStabilize","createComponentHarness","detectChanges","whenStable","waitForTasksOutsideAngular","get","flush","pipe","takeWhile","toPromise","getDocumentRoot","createTestElement","createEnvironment","getAllRawElements","Array","from","querySelectorAll","HarnessEnvironment","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing'), require('@angular/core/testing'), require('rxjs/operators'), require('rxjs'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/testing/testbed', ['exports', 'tslib', '@angular/cdk/testing', '@angular/core/testing', 'rxjs/operators', 'rxjs', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.testing = global.ng.cdk.testing || {}, global.ng.cdk.testing.testbed = {}), global.tslib, global.ng.cdk.testing, global.ng.core.testing, global.rxjs.operators, global.rxjs, global.ng.cdk.keycodes));\n}(this, function (exports, tslib_1, testing, testing$1, operators, rxjs, keyCodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Unique symbol that is used to patch a property to a proxy zone. */\n    var stateObservableSymbol = Symbol('ProxyZone_PATCHED#stateObservable');\n    /**\n     * Interceptor that can be set up in a `ProxyZone` instance. The interceptor\n     * will keep track of the task state and emit whenever the state changes.\n     *\n     * This serves as a workaround for https://github.com/angular/angular/issues/32896.\n     */\n    var TaskStateZoneInterceptor = /** @class */ (function () {\n        function TaskStateZoneInterceptor(_lastState) {\n            this._lastState = _lastState;\n            /** Subject that can be used to emit a new state change. */\n            this._stateSubject = new rxjs.BehaviorSubject(this._lastState ? this._getTaskStateFromInternalZoneState(this._lastState) : { stable: true });\n            /** Public observable that emits whenever the task state changes. */\n            this.state = this._stateSubject.asObservable();\n        }\n        /** This will be called whenever the task state changes in the intercepted zone. */\n        TaskStateZoneInterceptor.prototype.onHasTask = function (delegate, current, target, hasTaskState) {\n            if (current === target) {\n                this._stateSubject.next(this._getTaskStateFromInternalZoneState(hasTaskState));\n            }\n        };\n        /** Gets the task state from the internal ZoneJS task state. */\n        TaskStateZoneInterceptor.prototype._getTaskStateFromInternalZoneState = function (state) {\n            return { stable: !state.macroTask && !state.microTask };\n        };\n        /**\n         * Sets up the custom task state Zone interceptor in the  `ProxyZone`. Throws if\n         * no `ProxyZone` could be found.\n         * @returns an observable that emits whenever the task state changes.\n         */\n        TaskStateZoneInterceptor.setup = function () {\n            if (Zone === undefined) {\n                throw Error('Could not find ZoneJS. For test harnesses running in TestBed, ' +\n                    'ZoneJS needs to be installed.');\n            }\n            // tslint:disable-next-line:variable-name\n            var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n            // If there is no \"ProxyZoneSpec\" installed, we throw an error and recommend\n            // setting up the proxy zone by pulling in the testing bundle.\n            if (!ProxyZoneSpec) {\n                throw Error('ProxyZoneSpec is needed for the test harnesses but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/dist/zone-testing.js');\n            }\n            // Ensure that there is a proxy zone instance set up, and get\n            // a reference to the instance if present.\n            var zoneSpec = ProxyZoneSpec.assertPresent();\n            // If there already is a delegate registered in the proxy zone, and it\n            // is type of the custom task state interceptor, we just use that state\n            // observable. This allows us to only intercept Zone once per test\n            // (similar to how `fakeAsync` or `async` work).\n            if (zoneSpec[stateObservableSymbol]) {\n                return zoneSpec[stateObservableSymbol];\n            }\n            // Since we intercept on environment creation and the fixture has been\n            // created before, we might have missed tasks scheduled before. Fortunately\n            // the proxy zone keeps track of the previous task state, so we can just pass\n            // this as initial state to the task zone interceptor.\n            var interceptor = new TaskStateZoneInterceptor(zoneSpec.lastTaskState);\n            var zoneSpecOnHasTask = zoneSpec.onHasTask;\n            // We setup the task state interceptor in the `ProxyZone`. Note that we cannot register\n            // the interceptor as a new proxy zone delegate because it would mean that other zone\n            // delegates (e.g. `FakeAsyncTestZone` or `AsyncTestZone`) can accidentally overwrite/disable\n            // our interceptor. Since we just intend to monitor the task state of the proxy zone, it is\n            // sufficient to just patch the proxy zone. This also avoids that we interfere with the task\n            // queue scheduling logic.\n            zoneSpec.onHasTask = function () {\n                zoneSpecOnHasTask.apply(zoneSpec, arguments);\n                interceptor.onHasTask.apply(interceptor, arguments);\n            };\n            return zoneSpec[stateObservableSymbol] = interceptor.state;\n        };\n        return TaskStateZoneInterceptor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** An enum of non-text keys that can be used with the `sendKeys` method. */\n    // NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n    // support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n    // dependency on any particular testing framework here. Instead we'll just maintain this supported\n    // list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n    // representation is used in its respective testing framework.\n    var TestKey;\n    (function (TestKey) {\n        TestKey[TestKey[\"BACKSPACE\"] = 0] = \"BACKSPACE\";\n        TestKey[TestKey[\"TAB\"] = 1] = \"TAB\";\n        TestKey[TestKey[\"ENTER\"] = 2] = \"ENTER\";\n        TestKey[TestKey[\"SHIFT\"] = 3] = \"SHIFT\";\n        TestKey[TestKey[\"CONTROL\"] = 4] = \"CONTROL\";\n        TestKey[TestKey[\"ALT\"] = 5] = \"ALT\";\n        TestKey[TestKey[\"ESCAPE\"] = 6] = \"ESCAPE\";\n        TestKey[TestKey[\"PAGE_UP\"] = 7] = \"PAGE_UP\";\n        TestKey[TestKey[\"PAGE_DOWN\"] = 8] = \"PAGE_DOWN\";\n        TestKey[TestKey[\"END\"] = 9] = \"END\";\n        TestKey[TestKey[\"HOME\"] = 10] = \"HOME\";\n        TestKey[TestKey[\"LEFT_ARROW\"] = 11] = \"LEFT_ARROW\";\n        TestKey[TestKey[\"UP_ARROW\"] = 12] = \"UP_ARROW\";\n        TestKey[TestKey[\"RIGHT_ARROW\"] = 13] = \"RIGHT_ARROW\";\n        TestKey[TestKey[\"DOWN_ARROW\"] = 14] = \"DOWN_ARROW\";\n        TestKey[TestKey[\"INSERT\"] = 15] = \"INSERT\";\n        TestKey[TestKey[\"DELETE\"] = 16] = \"DELETE\";\n        TestKey[TestKey[\"F1\"] = 17] = \"F1\";\n        TestKey[TestKey[\"F2\"] = 18] = \"F2\";\n        TestKey[TestKey[\"F3\"] = 19] = \"F3\";\n        TestKey[TestKey[\"F4\"] = 20] = \"F4\";\n        TestKey[TestKey[\"F5\"] = 21] = \"F5\";\n        TestKey[TestKey[\"F6\"] = 22] = \"F6\";\n        TestKey[TestKey[\"F7\"] = 23] = \"F7\";\n        TestKey[TestKey[\"F8\"] = 24] = \"F8\";\n        TestKey[TestKey[\"F9\"] = 25] = \"F9\";\n        TestKey[TestKey[\"F10\"] = 26] = \"F10\";\n        TestKey[TestKey[\"F11\"] = 27] = \"F11\";\n        TestKey[TestKey[\"F12\"] = 28] = \"F12\";\n        TestKey[TestKey[\"META\"] = 29] = \"META\";\n    })(TestKey || (TestKey = {}));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _a;\n    /** Maps `TestKey` constants to the `keyCode` and `key` values used by native browser events. */\n    var keyMap = (_a = {},\n        _a[TestKey.BACKSPACE] = { keyCode: keyCodes.BACKSPACE, key: 'Backspace' },\n        _a[TestKey.TAB] = { keyCode: keyCodes.TAB, key: 'Tab' },\n        _a[TestKey.ENTER] = { keyCode: keyCodes.ENTER, key: 'Enter' },\n        _a[TestKey.SHIFT] = { keyCode: keyCodes.SHIFT, key: 'Shift' },\n        _a[TestKey.CONTROL] = { keyCode: keyCodes.CONTROL, key: 'Control' },\n        _a[TestKey.ALT] = { keyCode: keyCodes.ALT, key: 'Alt' },\n        _a[TestKey.ESCAPE] = { keyCode: keyCodes.ESCAPE, key: 'Escape' },\n        _a[TestKey.PAGE_UP] = { keyCode: keyCodes.PAGE_UP, key: 'PageUp' },\n        _a[TestKey.PAGE_DOWN] = { keyCode: keyCodes.PAGE_DOWN, key: 'PageDown' },\n        _a[TestKey.END] = { keyCode: keyCodes.END, key: 'End' },\n        _a[TestKey.HOME] = { keyCode: keyCodes.HOME, key: 'Home' },\n        _a[TestKey.LEFT_ARROW] = { keyCode: keyCodes.LEFT_ARROW, key: 'ArrowLeft' },\n        _a[TestKey.UP_ARROW] = { keyCode: keyCodes.UP_ARROW, key: 'ArrowUp' },\n        _a[TestKey.RIGHT_ARROW] = { keyCode: keyCodes.RIGHT_ARROW, key: 'ArrowRight' },\n        _a[TestKey.DOWN_ARROW] = { keyCode: keyCodes.DOWN_ARROW, key: 'ArrowDown' },\n        _a[TestKey.INSERT] = { keyCode: keyCodes.INSERT, key: 'Insert' },\n        _a[TestKey.DELETE] = { keyCode: keyCodes.DELETE, key: 'Delete' },\n        _a[TestKey.F1] = { keyCode: keyCodes.F1, key: 'F1' },\n        _a[TestKey.F2] = { keyCode: keyCodes.F2, key: 'F2' },\n        _a[TestKey.F3] = { keyCode: keyCodes.F3, key: 'F3' },\n        _a[TestKey.F4] = { keyCode: keyCodes.F4, key: 'F4' },\n        _a[TestKey.F5] = { keyCode: keyCodes.F5, key: 'F5' },\n        _a[TestKey.F6] = { keyCode: keyCodes.F6, key: 'F6' },\n        _a[TestKey.F7] = { keyCode: keyCodes.F7, key: 'F7' },\n        _a[TestKey.F8] = { keyCode: keyCodes.F8, key: 'F8' },\n        _a[TestKey.F9] = { keyCode: keyCodes.F9, key: 'F9' },\n        _a[TestKey.F10] = { keyCode: keyCodes.F10, key: 'F10' },\n        _a[TestKey.F11] = { keyCode: keyCodes.F11, key: 'F11' },\n        _a[TestKey.F12] = { keyCode: keyCodes.F12, key: 'F12' },\n        _a[TestKey.META] = { keyCode: keyCodes.META, key: 'Meta' },\n        _a);\n    /** A `TestElement` implementation for unit tests. */\n    var UnitTestElement = /** @class */ (function () {\n        function UnitTestElement(element, _stabilize) {\n            this.element = element;\n            this._stabilize = _stabilize;\n        }\n        UnitTestElement.prototype.blur = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            testing.triggerBlur(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.clear = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            if (!testing.isTextInput(this.element)) {\n                                throw Error('Attempting to clear an invalid element');\n                            }\n                            testing.clearElement(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.click = function (relativeX, relativeY) {\n            if (relativeX === void 0) { relativeX = 0; }\n            if (relativeY === void 0) { relativeY = 0; }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var _a, left, top, clientX, clientY;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _b.sent();\n                            _a = this.element.getBoundingClientRect(), left = _a.left, top = _a.top;\n                            clientX = Math.round(left + relativeX);\n                            clientY = Math.round(top + relativeY);\n                            testing.dispatchMouseEvent(this.element, 'mousedown', clientX, clientY);\n                            testing.dispatchMouseEvent(this.element, 'mouseup', clientX, clientY);\n                            testing.dispatchMouseEvent(this.element, 'click', clientX, clientY);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.focus = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            testing.triggerFocus(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getCssValue = function (property) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            // TODO(mmalerba): Consider adding value normalization if we run into common cases where its\n                            //  needed.\n                            return [2 /*return*/, getComputedStyle(this.element).getPropertyValue(property)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hover = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            testing.dispatchMouseEvent(this.element, 'mouseenter');\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.sendKeys = function () {\n            var modifiersAndKeys = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                modifiersAndKeys[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var args;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            args = modifiersAndKeys.map(function (k) { return typeof k === 'number' ? keyMap[k] : k; });\n                            testing.typeInElement.apply(void 0, tslib_1.__spread([this.element], args));\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.text = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, (this.element.textContent || '').trim()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getAttribute = function (name) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getAttribute(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hasClass = function (name) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.classList.contains(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getDimensions = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getBoundingClientRect()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getProperty = function (name) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element[name]];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.matchesSelector = function (selector) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var elementPrototype;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            elementPrototype = Element.prototype;\n                            return [2 /*return*/, (elementPrototype['matches'] || elementPrototype['msMatchesSelector'])\n                                    .call(this.element, selector)];\n                    }\n                });\n            });\n        };\n        return UnitTestElement;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A `HarnessEnvironment` implementation for Angular's Testbed. */\n    var TestbedHarnessEnvironment = /** @class */ (function (_super) {\n        tslib_1.__extends(TestbedHarnessEnvironment, _super);\n        function TestbedHarnessEnvironment(rawRootElement, _fixture) {\n            var _this = _super.call(this, rawRootElement) || this;\n            _this._fixture = _fixture;\n            _this._destroyed = false;\n            _this._taskState = TaskStateZoneInterceptor.setup();\n            _fixture.componentRef.onDestroy(function () { return _this._destroyed = true; });\n            return _this;\n        }\n        /** Creates a `HarnessLoader` rooted at the given fixture's root element. */\n        TestbedHarnessEnvironment.loader = function (fixture) {\n            return new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n        };\n        /**\n         * Creates a `HarnessLoader` at the document root. This can be used if harnesses are\n         * located outside of a fixture (e.g. overlays appended to the document body).\n         */\n        TestbedHarnessEnvironment.documentRootLoader = function (fixture) {\n            return new TestbedHarnessEnvironment(document.body, fixture);\n        };\n        /**\n         * Creates an instance of the given harness type, using the fixture's root element as the\n         * harness's host element. This method should be used when creating a harness for the root element\n         * of a fixture, as components do not have the correct selector when they are created as the root\n         * of the fixture.\n         */\n        TestbedHarnessEnvironment.harnessForFixture = function (fixture, harnessType) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var environment;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            environment = new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n                            return [4 /*yield*/, environment.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, environment.createComponentHarness(harnessType, fixture.nativeElement)];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.forceStabilize = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (this._destroyed) {\n                                throw Error('Harness is attempting to use a fixture that has already been destroyed.');\n                            }\n                            this._fixture.detectChanges();\n                            return [4 /*yield*/, this._fixture.whenStable()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.waitForTasksOutsideAngular = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // If we run in the fake async zone, we run \"flush\" to run any scheduled tasks. This\n                            // ensures that the harnesses behave inside of the FakeAsyncTestZone similar to the\n                            // \"AsyncTestZone\" and the root zone (i.e. neither fakeAsync or async). Note that we\n                            // cannot just rely on the task state observable to become stable because the state will\n                            // never change. This is because the task queue will be only drained if the fake async\n                            // zone is being flushed.\n                            if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n                                testing$1.flush();\n                            }\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            return [4 /*yield*/, this._taskState.pipe(operators.takeWhile(function (state) { return !state.stable; })).toPromise()];\n                        case 1:\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.getDocumentRoot = function () {\n            return document.body;\n        };\n        TestbedHarnessEnvironment.prototype.createTestElement = function (element) {\n            var _this = this;\n            return new UnitTestElement(element, function () { return _this.forceStabilize(); });\n        };\n        TestbedHarnessEnvironment.prototype.createEnvironment = function (element) {\n            return new TestbedHarnessEnvironment(element, this._fixture);\n        };\n        TestbedHarnessEnvironment.prototype.getAllRawElements = function (selector) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, Array.from(this.rawRootElement.querySelectorAll(selector))];\n                    }\n                });\n            });\n        };\n        return TestbedHarnessEnvironment;\n    }(testing.HarnessEnvironment));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.TestbedHarnessEnvironment = TestbedHarnessEnvironment;\n    exports.UnitTestElement = UnitTestElement;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=cdk-testing-testbed.umd.js.map\n"]}