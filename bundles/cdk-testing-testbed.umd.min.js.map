{"version":3,"sources":["src/cdk/cdk-testing-testbed.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","testing","testbed","tslib","core","rxjs","operators","keycodes","this","testing$1","keyCodes","TestKey","_a","stateObservableSymbol","Symbol","TaskStateZoneInterceptor","_lastState","_stateSubject","BehaviorSubject","_getTaskStateFromInternalZoneState","stable","state","asObservable","prototype","onHasTask","delegate","current","target","hasTaskState","next","macroTask","microTask","setup","undefined","Zone","Error","ProxyZoneSpec","zoneSpec","assertPresent","interceptor","lastTaskState","zoneSpecOnHasTask","apply","arguments","dispatchEvent","node","event","dispatchFakeEvent","type","canBubble","createFakeEvent","cancelable","document","createEvent","initEvent","dispatchKeyboardEvent","keyCode","key","modifiers","createKeyboardEvent","originalPreventDefault","preventDefault","initKeyEvent","window","control","alt","shift","meta","modifiersStr","trim","initKeyboardEvent","Object","defineProperties","get","ctrlKey","altKey","shiftKey","metaKey","defineProperty","dispatchMouseEvent","x","y","createMouseEvent","button","initMouseEvent","triggerFocusChange","element","eventFired","handler","addEventListener","removeEventListener","triggerFocus","isTextInput","nodeName","toLowerCase","typeInElement","e_1","modifiersAndKeys","_i","length","rest","first","slice","keys","map","k","split","c","toUpperCase","charCodeAt","reduce","arr","concat","keys_1","__values","keys_1_1","done","value","e_1_1","error","return","call","keyMap","BACKSPACE","TAB","ENTER","SHIFT","CONTROL","ALT","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","META","UnitTestElement","_stabilize","blur","__awaiter","__generator","label","sent","triggerBlur","clear","clearElement","click","relativeX","relativeY","top","clientX","clientY","_b","getBoundingClientRect","Math","round","left","focus","getCssValue","property","getComputedStyle","getPropertyValue","hover","sendKeys","args","__spread","text","textContent","getAttribute","name","hasClass","classList","contains","getDimensions","getProperty","matchesSelector","selector","elementPrototype","Element","TestbedHarnessEnvironment","_super","rawRootElement","_fixture","_this","_destroyed","_taskState","componentRef","onDestroy","__extends","loader","fixture","nativeElement","documentRootLoader","body","harnessForFixture","harnessType","environment","forceStabilize","createComponentHarness","detectChanges","whenStable","waitForTasksOutsideAngular","flush","pipe","takeWhile","toPromise","getDocumentRoot","createTestElement","createEnvironment","getAllRawElements","Array","from","querySelectorAll","HarnessEnvironment"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,wBAAyBA,QAAQ,yBAA0BA,QAAQ,kBAAmBA,QAAQ,QAASA,QAAQ,0BACvM,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,+BAAgC,CAAC,UAAW,QAAS,uBAAwB,wBAAyB,iBAAkB,OAAQ,yBAA0BJ,GACpLA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,IAAMT,EAAOQ,GAAGC,KAAO,GAAIT,EAAOQ,GAAGC,IAAIC,QAAUV,EAAOQ,GAAGC,IAAIC,SAAW,GAAIV,EAAOQ,GAAGC,IAAIC,QAAQC,QAAU,IAAKX,EAAOY,MAAOZ,EAAOQ,GAAGC,IAAIC,QAASV,EAAOQ,GAAGK,KAAKH,QAASV,EAAOc,KAAKC,UAAWf,EAAOc,KAAMd,EAAOQ,GAAGC,IAAIO,UAHlT,CAIEC,MAAM,SAAWf,EAASU,EAAOF,EAASQ,EAAWH,EAAWD,EAAMK,GAAY;;;;;;;OAUhF,IAuFIC,EA8SAC,EArYAC,EAAwBC,OAAO,qCAO/BC,EAA0C,WAC1C,SAASA,EAAyBC,GAC9BR,KAAKQ,WAAaA,EAElBR,KAAKS,cAAgB,IAAIZ,EAAKa,gBAAgBV,KAAKQ,WAAaR,KAAKW,mCAAmCX,KAAKQ,YAAc,CAAEI,QAAQ,IAErIZ,KAAKa,MAAQb,KAAKS,cAAcK,eA0DpC,OAvDAP,EAAyBQ,UAAUC,UAAY,SAAUC,EAAUC,EAASC,EAAQC,GAC5EF,IAAYC,GACZnB,KAAKS,cAAcY,KAAKrB,KAAKW,mCAAmCS,KAIxEb,EAAyBQ,UAAUJ,mCAAqC,SAAUE,GAC9E,MAAO,CAAED,QAASC,EAAMS,YAAcT,EAAMU,YAOhDhB,EAAyBiB,MAAQ,WAC7B,QAAaC,IAATC,KACA,MAAMC,MAAM,+FAIhB,IAAIC,EAAgBF,KAAoB,cAGxC,IAAKE,EACD,MAAMD,MAAM,uJAKhB,IAAIE,EAAWD,EAAcE,gBAK7B,GAAID,EAASxB,GACT,OAAOwB,EAASxB,GAMpB,IAAI0B,EAAc,IAAIxB,EAAyBsB,EAASG,eACpDC,EAAoBJ,EAASb,UAWjC,OAJAa,EAASb,UAAY,WACjBiB,EAAkBC,MAAML,EAAUM,WAClCJ,EAAYf,UAAUkB,MAAMH,EAAaI,YAEtCN,EAASxB,GAAyB0B,EAAYlB,OAElDN,EAhEkC;;;;;;;;AAkO7C,SAAS6B,EAAcC,EAAMC,GAEzB,OADAD,EAAKD,cAAcE,GACZA,EAMX,SAASC,EAAkBF,EAAMG,EAAMC,GACnC,OAAOL,EAAcC,EA5BzB,SAASK,EAAgBF,EAAMC,EAAWE,QACpB,IAAdF,IAAwBA,GAAY,QACrB,IAAfE,IAAyBA,GAAa,GAC1C,IAAIL,EAAQM,SAASC,YAAY,SAEjC,OADAP,EAAMQ,UAAUN,EAAMC,EAAWE,GAC1BL,EAuBoBI,CAAgBF,EAAMC,IAMrD,SAASM,EAAsBV,EAAMG,EAAMQ,EAASC,EAAK9B,EAAQ+B,GAC7D,OAAOd,EAAcC,EA1EzB,SAASc,EAAoBX,EAAMQ,EAASC,EAAK9B,EAAQ+B,QACrC,IAAZF,IAAsBA,EAAU,QACxB,IAARC,IAAkBA,EAAM,SACV,IAAdC,IAAwBA,EAAY,IACxC,IAAIZ,EAAQM,SAASC,YAAY,iBAC7BO,EAAyBd,EAAMe,eAEnC,GAAIf,EAAMgB,aACNhB,EAAMgB,aAAad,GAAM,GAAM,EAAMe,OAAQL,EAAUM,QAASN,EAAUO,IAAKP,EAAUQ,MAAOR,EAAUS,KAAMX,OAE/G,CAGD,IAAIY,GAAgBV,EAAUM,QAAU,WAAa,GAAKN,EAAUO,IAAM,OAAS,GAC/EP,EAAUQ,MAAQ,SAAW,GAAKR,EAAUS,KAAO,OAAS,IAAIE,OACpEvB,EAAMwB,kBAAkBtB,GAAM,GAAsB,EAAuBe,OAAmB,EAAcN,EAAe,EAAkBW,GAAkC,GAkBnL,OAdAG,OAAOC,iBAAiB1B,EAAO,CAC3BU,QAAS,CAAEiB,IAAK,WAAc,OAAOjB,IACrCC,IAAK,CAAEgB,IAAK,WAAc,OAAOhB,IACjC9B,OAAQ,CAAE8C,IAAK,WAAc,OAAO9C,IACpC+C,QAAS,CAAED,IAAK,WAAc,QAASf,EAAUM,UACjDW,OAAQ,CAAEF,IAAK,WAAc,QAASf,EAAUO,MAChDW,SAAU,CAAEH,IAAK,WAAc,QAASf,EAAUQ,QAClDW,QAAS,CAAEJ,IAAK,WAAc,QAASf,EAAUS,SAGrDrB,EAAMe,eAAiB,WAEnB,OADAU,OAAOO,eAAehC,EAAO,mBAAoB,CAAE2B,IAAK,WAAc,OAAO,KACtEb,EAAuBlB,MAAMlC,KAAMmC,YAEvCG,EAyCoBa,CAAoBX,EAAMQ,EAASC,EAAK9B,EAAQ+B,IAM/E,SAASqB,EAAmBlC,EAAMG,EAAMgC,EAAGC,EAAGnC,GAI1C,YAHU,IAANkC,IAAgBA,EAAI,QACd,IAANC,IAAgBA,EAAI,QACV,IAAVnC,IAAoBA;;;;;;;;AA9H5B,SAASoC,EAAiBlC,EAAMgC,EAAGC,EAAGE,QACxB,IAANH,IAAgBA,EAAI,QACd,IAANC,IAAgBA,EAAI,QACT,IAAXE,IAAqBA,EAAS,GAClC,IAAIrC,EAAQM,SAASC,YAAY,cAC7BO,EAAyBd,EAAMe,eAUnC,OATAf,EAAMsC,eAAepC,GAAM,GAAsB,EAAuBe,OAAmB,EAAgBiB,EAAiBC,EAAiBD,EAAiBC,GAAiB,GAAqB,GAAoB,GAAsB,EAAqBE,EAAqB,MAGxRZ,OAAOO,eAAehC,EAAO,UAAW,CAAE2B,IAAK,WAAc,OAAO,KAEpE3B,EAAMe,eAAiB,WAEnB,OADAU,OAAOO,eAAehC,EAAO,mBAAoB,CAAE2B,IAAK,WAAc,OAAO,KACtEb,EAAuBlB,MAAMlC,KAAMmC,YAEvCG,EA+GyBoC,CAAiBlC,EAAMgC,EAAGC,IACnDrC,EAAcC,EAAMC;;;;;;;;AAmB/B,SAASuC,EAAmBC,EAASxC,GACjC,IAAIyC,GAAa,EACbC,EAAU,WAAc,OAAOD,GAAa,GAChDD,EAAQG,iBAAiB3C,EAAO0C,GAChCF,EAAQxC,KACRwC,EAAQI,oBAAoB5C,EAAO0C,GAC9BD,GACDxC,EAAkBuC,EAASxC,GAcnC,SAAS6C,EAAaL,GAClBD,EAAmBC,EAAS;;;;;;;;AAkBhC,SAASM,EAAYN,GACjB,IAAIO,EAAWP,EAAQO,SAASC,cAChC,MAAoB,UAAbD,GAAqC,aAAbA,EAEnC,SAASE,EAAcT,GAGnB,IAFA,IAAIU,EAAKpF,EACLqF,EAAmB,GACdC,EAAK,EAAGA,EAAKvD,UAAUwD,OAAQD,IACpCD,EAAiBC,EAAK,GAAKvD,UAAUuD,GAEzC,IACIxC,EACA0C,EAFAC,EAAQJ,EAAiB,GAGR,iBAAVI,QAAwCpE,IAAlBoE,EAAM7C,cAAuCvB,IAAdoE,EAAM5C,KAClEC,EAAY2C,EACZD,EAAOH,EAAiBK,MAAM,KAG9B5C,EAAY,GACZ0C,EAAOH,GAEX,IAAIM,EAAOH,EACNI,KAAI,SAAUC,GAAK,MAAoB,iBAANA,EAClCA,EAAEC,MAAM,IAAIF,KAAI,SAAUG,GAAK,MAAO,CAAGnD,QAASmD,EAAEC,cAAcC,WAAW,GAAIpD,IAAKkD,MAAW,CAACF,MACjGK,QAAO,SAAUC,EAAKN,GAAK,OAAOM,EAAIC,OAAOP,KAAO,IACzDd,EAAaL,GACb,IACI,IAAK,IAAI2B,EAAS9G,EAAM+G,SAASX,GAAOY,EAAWF,EAAOpF,QAASsF,EAASC,KAAMD,EAAWF,EAAOpF,OAAQ,CACxG,IAAI4B,EAAM0D,EAASE,MACnB9D,EAAsB+B,EAAS,UAAW7B,EAAID,QAASC,EAAIA,IAAK6B,EAAS5B,GACzEH,EAAsB+B,EAAS,WAAY7B,EAAID,QAASC,EAAIA,IAAK6B,EAAS5B,GACtEkC,EAAYN,IAAY7B,EAAIA,KAA0B,IAAnBA,EAAIA,IAAI0C,SAC3Cb,EAAQ+B,OAAS5D,EAAIA,IACrBV,EAAkBuC,EAAS,UAE/B/B,EAAsB+B,EAAS,QAAS7B,EAAID,QAASC,EAAIA,IAAK6B,EAAS5B,IAG/E,MAAO4D,GAAStB,EAAM,CAAEuB,MAAOD,GAC/B,QACI,IACQH,IAAaA,EAASC,OAASxG,EAAKqG,EAAOO,SAAS5G,EAAG6G,KAAKR,GAEpE,QAAU,GAAIjB,EAAK,MAAMA,EAAIuB,SAjRrC,SAAW5G,GACPA,EAAQA,EAAmB,UAAI,GAAK,YACpCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAgB,OAAI,GAAK,SACjCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAmB,UAAI,GAAK,YACpCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAc,KAAI,IAAM,OA9BpC,CA+BGA,IAAYA,EAAU,KAgRzB,IAAI+G,IAAU9G,EAAK,IACZD,EAAQgH,WAAa,CAAEnE,QAAS9C,EAASiH,UAAWlE,IAAK,aAC5D7C,EAAGD,EAAQiH,KAAO,CAAEpE,QAAS9C,EAASkH,IAAKnE,IAAK,OAChD7C,EAAGD,EAAQkH,OAAS,CAAErE,QAAS9C,EAASmH,MAAOpE,IAAK,SACpD7C,EAAGD,EAAQmH,OAAS,CAAEtE,QAAS9C,EAASoH,MAAOrE,IAAK,SACpD7C,EAAGD,EAAQoH,SAAW,CAAEvE,QAAS9C,EAASqH,QAAStE,IAAK,WACxD7C,EAAGD,EAAQqH,KAAO,CAAExE,QAAS9C,EAASsH,IAAKvE,IAAK,OAChD7C,EAAGD,EAAQsH,QAAU,CAAEzE,QAAS9C,EAASuH,OAAQxE,IAAK,UACtD7C,EAAGD,EAAQuH,SAAW,CAAE1E,QAAS9C,EAASwH,QAASzE,IAAK,UACxD7C,EAAGD,EAAQwH,WAAa,CAAE3E,QAAS9C,EAASyH,UAAW1E,IAAK,YAC5D7C,EAAGD,EAAQyH,KAAO,CAAE5E,QAAS9C,EAAS0H,IAAK3E,IAAK,OAChD7C,EAAGD,EAAQ0H,MAAQ,CAAE7E,QAAS9C,EAAS2H,KAAM5E,IAAK,QAClD7C,EAAGD,EAAQ2H,YAAc,CAAE9E,QAAS9C,EAAS4H,WAAY7E,IAAK,aAC9D7C,EAAGD,EAAQ4H,UAAY,CAAE/E,QAAS9C,EAAS6H,SAAU9E,IAAK,WAC1D7C,EAAGD,EAAQ6H,aAAe,CAAEhF,QAAS9C,EAAS8H,YAAa/E,IAAK,cAChE7C,EAAGD,EAAQ8H,YAAc,CAAEjF,QAAS9C,EAAS+H,WAAYhF,IAAK,aAC9D7C,EAAGD,EAAQ+H,QAAU,CAAElF,QAAS9C,EAASgI,OAAQjF,IAAK,UACtD7C,EAAGD,EAAQgI,QAAU,CAAEnF,QAAS9C,EAASiI,OAAQlF,IAAK,UACtD7C,EAAGD,EAAQiI,IAAM,CAAEpF,QAAS9C,EAASkI,GAAInF,IAAK,MAC9C7C,EAAGD,EAAQkI,IAAM,CAAErF,QAAS9C,EAASmI,GAAIpF,IAAK,MAC9C7C,EAAGD,EAAQmI,IAAM,CAAEtF,QAAS9C,EAASoI,GAAIrF,IAAK,MAC9C7C,EAAGD,EAAQoI,IAAM,CAAEvF,QAAS9C,EAASqI,GAAItF,IAAK,MAC9C7C,EAAGD,EAAQqI,IAAM,CAAExF,QAAS9C,EAASsI,GAAIvF,IAAK,MAC9C7C,EAAGD,EAAQsI,IAAM,CAAEzF,QAAS9C,EAASuI,GAAIxF,IAAK,MAC9C7C,EAAGD,EAAQuI,IAAM,CAAE1F,QAAS9C,EAASwI,GAAIzF,IAAK,MAC9C7C,EAAGD,EAAQwI,IAAM,CAAE3F,QAAS9C,EAASyI,GAAI1F,IAAK,MAC9C7C,EAAGD,EAAQyI,IAAM,CAAE5F,QAAS9C,EAAS0I,GAAI3F,IAAK,MAC9C7C,EAAGD,EAAQ0I,KAAO,CAAE7F,QAAS9C,EAAS2I,IAAK5F,IAAK,OAChD7C,EAAGD,EAAQ2I,KAAO,CAAE9F,QAAS9C,EAAS4I,IAAK7F,IAAK,OAChD7C,EAAGD,EAAQ4I,KAAO,CAAE/F,QAAS9C,EAAS6I,IAAK9F,IAAK,OAChD7C,EAAGD,EAAQ6I,MAAQ,CAAEhG,QAAS9C,EAAS8I,KAAM/F,IAAK,QAClD7C,GAEA6I,EAAiC,WACjC,SAASA,EAAgBnE,EAASoE,GAC9BlJ,KAAK8E,QAAUA,EACf9E,KAAKkJ,WAAaA,EA4MtB,OA1MAD,EAAgBlI,UAAUoI,KAAO,WAC7B,OAAOxJ,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAGD,OAFA9I,EAAGmJ,OApI3B,SAASC,EAAY1E,GACjBD,EAAmBC,EAAS,QAoIR0E,CAAYxJ,KAAK8E,SACV,CAAC,EAAa9E,KAAKkJ,cAC9B,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,WAK5BN,EAAgBlI,UAAU0I,MAAQ,WAC9B,OAAO9J,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,GADA9I,EAAGmJ,QACEnE,EAAYpF,KAAK8E,SAClB,MAAMnD,MAAM,0CAGhB,OAxFxB,SAAS+H,EAAa5E,GAClBK,EAAaL,GACbA,EAAQ+B,MAAQ,GAChBtE,EAAkBuC,EAAS;;;;;;;;;;;;;;OAoFP4E,CAAa1J,KAAK8E,SACX,CAAC,EAAa9E,KAAKkJ,cAC9B,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,WAK5BN,EAAgBlI,UAAU4I,MAAQ,SAAUC,EAAWC,GAGnD,YAFkB,IAAdD,IAAwBA,EAAY,QACtB,IAAdC,IAAwBA,EAAY,GACjClK,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,IAAII,EAAU0J,EAAKC,EAASC,EAC5B,OAAOrK,EAAM0J,YAAYrJ,MAAM,SAAUiK,GACrC,OAAQA,EAAGX,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAQD,OAPAe,EAAGV,OACHnJ,EAAKJ,KAAK8E,QAAQoF,wBAAyCJ,EAAM1J,EAAG0J,IACpEC,EAAUI,KAAKC,MADmChK,EAAGiK,KACzBT,GAC5BI,EAAUG,KAAKC,MAAMN,EAAMD,GAC3BtF,EAAmBvE,KAAK8E,QAAS,YAAaiF,EAASC,GACvDzF,EAAmBvE,KAAK8E,QAAS,UAAWiF,EAASC,GACrDzF,EAAmBvE,KAAK8E,QAAS,QAASiF,EAASC,GAC5C,CAAC,EAAahK,KAAKkJ,cAC9B,KAAK,EAED,OADAe,EAAGV,OACI,CAAC,WAK5BN,EAAgBlI,UAAUuJ,MAAQ,WAC9B,OAAO3K,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAGD,OAFA9I,EAAGmJ,OACHpE,EAAanF,KAAK8E,SACX,CAAC,EAAa9E,KAAKkJ,cAC9B,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,WAK5BN,EAAgBlI,UAAUwJ,YAAc,SAAUC,GAC9C,OAAO7K,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAID,OAHA9I,EAAGmJ,OAGI,CAAC,EAAckB,iBAAiBzK,KAAK8E,SAAS4F,iBAAiBF,YAK1FvB,EAAgBlI,UAAU4J,MAAQ,WAC9B,OAAOhL,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAGD,OAFA9I,EAAGmJ,OACHhF,EAAmBvE,KAAK8E,QAAS,cAC1B,CAAC,EAAa9E,KAAKkJ,cAC9B,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,WAK5BN,EAAgBlI,UAAU6J,SAAW,WAEjC,IADA,IAAInF,EAAmB,GACdC,EAAK,EAAGA,EAAKvD,UAAUwD,OAAQD,IACpCD,EAAiBC,GAAMvD,UAAUuD,GAErC,OAAO/F,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,IAAI6K,EACJ,OAAOlL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAID,OAHA9I,EAAGmJ,OACHsB,EAAOpF,EAAiBO,KAAI,SAAUC,GAAK,MAAoB,iBAANA,EAAiBiB,EAAOjB,GAAKA,KACtFV,EAAcrD,WAAM,EAAQvC,EAAMmL,SAAS,CAAC9K,KAAK8E,SAAU+F,IACpD,CAAC,EAAa7K,KAAKkJ,cAC9B,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,WAK5BN,EAAgBlI,UAAUgK,KAAO,WAC7B,OAAOpL,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,GAAevJ,KAAK8E,QAAQkG,aAAe,IAAInH,gBAK3EoF,EAAgBlI,UAAUkK,aAAe,SAAUC,GAC/C,OAAOvL,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,EAAcvJ,KAAK8E,QAAQmG,aAAaC,YAKpEjC,EAAgBlI,UAAUoK,SAAW,SAAUD,GAC3C,OAAOvL,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,EAAcvJ,KAAK8E,QAAQsG,UAAUC,SAASH,YAK1EjC,EAAgBlI,UAAUuK,cAAgB,WACtC,OAAO3L,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,EAAcvJ,KAAK8E,QAAQoF,iCAKvDjB,EAAgBlI,UAAUwK,YAAc,SAAUL,GAC9C,OAAOvL,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAED,OADA9I,EAAGmJ,OACI,CAAC,EAAcvJ,KAAK8E,QAAQoG,YAKvDjC,EAAgBlI,UAAUyK,gBAAkB,SAAUC,GAClD,OAAO9L,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,IAAI0L,EACJ,OAAO/L,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAKkJ,cAClC,KAAK,EAGD,OAFA9I,EAAGmJ,OAEI,CAAC,IADRmC,EAAmBC,QAAQ5K,WACsB,SAAK2K,EAAoC,mBACjFzE,KAAKjH,KAAK8E,QAAS2G,YAKzCxC,EA/MyB,GA0NhC2C,EAA2C,SAAUC,GAErD,SAASD,EAA0BE,EAAgBC,GAC/C,IAAIC,EAAQH,EAAO5E,KAAKjH,KAAM8L,IAAmB9L,KAKjD,OAJAgM,EAAMD,SAAWA,EACjBC,EAAMC,YAAa,EACnBD,EAAME,WAAa3L,EAAyBiB,QAC5CuK,EAASI,aAAaC,WAAU,WAAc,OAAOJ,EAAMC,YAAa,KACjED,EAuGX,OA9GArM,EAAM0M,UAAUT,EAA2BC,GAU3CD,EAA0BU,OAAS,SAAUC,GACzC,OAAO,IAAIX,EAA0BW,EAAQC,cAAeD,IAMhEX,EAA0Ba,mBAAqB,SAAUF,GACrD,OAAO,IAAIX,EAA0BhJ,SAAS8J,KAAMH,IAQxDX,EAA0Be,kBAAoB,SAAUJ,EAASK,GAC7D,OAAOjN,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,IAAI6M,EACJ,OAAOlN,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAED,MAAO,CAAC,GADRuD,EAAc,IAAIjB,EAA0BW,EAAQC,cAAeD,IAClCO,kBACrC,KAAK,EAED,OADA1M,EAAGmJ,OACI,CAAC,EAAcsD,EAAYE,uBAAuBH,EAAaL,EAAQC,wBAKlGZ,EAA0B7K,UAAU+L,eAAiB,WACjD,OAAOnN,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EACD,GAAItJ,KAAKiM,WACL,MAAMtK,MAAM,2EAGhB,OADA3B,KAAK+L,SAASiB,gBACP,CAAC,EAAahN,KAAK+L,SAASkB,cACvC,KAAK,EAED,OADA7M,EAAGmJ,OACI,CAAC,WAK5BqC,EAA0B7K,UAAUmM,2BAA6B,WAC7D,OAAOvN,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAcD,OAPI5H,KAAKR,QAAQ+C,IAAI,0BACjBhE,EAAUkN,QAMP,CAAC,EAAanN,KAAKkM,WAAWkB,KAAKtN,EAAUuN,WAAU,SAAUxM,GAAS,OAAQA,EAAMD,WAAY0M,aAC/G,KAAK,EAMD,OADAlN,EAAGmJ,OACI,CAAC,WAK5BqC,EAA0B7K,UAAUwM,gBAAkB,WAClD,OAAO3K,SAAS8J,MAEpBd,EAA0B7K,UAAUyM,kBAAoB,SAAU1I,GAC9D,IAAIkH,EAAQhM,KACZ,OAAO,IAAIiJ,EAAgBnE,GAAS,WAAc,OAAOkH,EAAMc,qBAEnElB,EAA0B7K,UAAU0M,kBAAoB,SAAU3I,GAC9D,OAAO,IAAI8G,EAA0B9G,EAAS9E,KAAK+L,WAEvDH,EAA0B7K,UAAU2M,kBAAoB,SAAUjC,GAC9D,OAAO9L,EAAMyJ,UAAUpJ,UAAM,OAAQ,GAAQ,WACzC,OAAOL,EAAM0J,YAAYrJ,MAAM,SAAUI,GACrC,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAatJ,KAAK8M,kBAClC,KAAK,EAED,OADA1M,EAAGmJ,OACI,CAAC,EAAcoE,MAAMC,KAAK5N,KAAK8L,eAAe+B,iBAAiBpC,aAKnFG,EA/GmC,CAgH5CnM,EAAQqO;;;;;;;;;;;;;;;AAkBV7O,EAAQ2M,0BAA4BA,EACpC3M,EAAQgK,gBAAkBA,EAE1BlF,OAAOO,eAAerF,EAAS,aAAc,CAAE4H,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing'), require('@angular/core/testing'), require('rxjs/operators'), require('rxjs'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/testing/testbed', ['exports', 'tslib', '@angular/cdk/testing', '@angular/core/testing', 'rxjs/operators', 'rxjs', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.testing = global.ng.cdk.testing || {}, global.ng.cdk.testing.testbed = {}), global.tslib, global.ng.cdk.testing, global.ng.core.testing, global.rxjs.operators, global.rxjs, global.ng.cdk.keycodes));\n}(this, (function (exports, tslib, testing, testing$1, operators, rxjs, keyCodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Unique symbol that is used to patch a property to a proxy zone. */\n    var stateObservableSymbol = Symbol('ProxyZone_PATCHED#stateObservable');\n    /**\n     * Interceptor that can be set up in a `ProxyZone` instance. The interceptor\n     * will keep track of the task state and emit whenever the state changes.\n     *\n     * This serves as a workaround for https://github.com/angular/angular/issues/32896.\n     */\n    var TaskStateZoneInterceptor = /** @class */ (function () {\n        function TaskStateZoneInterceptor(_lastState) {\n            this._lastState = _lastState;\n            /** Subject that can be used to emit a new state change. */\n            this._stateSubject = new rxjs.BehaviorSubject(this._lastState ? this._getTaskStateFromInternalZoneState(this._lastState) : { stable: true });\n            /** Public observable that emits whenever the task state changes. */\n            this.state = this._stateSubject.asObservable();\n        }\n        /** This will be called whenever the task state changes in the intercepted zone. */\n        TaskStateZoneInterceptor.prototype.onHasTask = function (delegate, current, target, hasTaskState) {\n            if (current === target) {\n                this._stateSubject.next(this._getTaskStateFromInternalZoneState(hasTaskState));\n            }\n        };\n        /** Gets the task state from the internal ZoneJS task state. */\n        TaskStateZoneInterceptor.prototype._getTaskStateFromInternalZoneState = function (state) {\n            return { stable: !state.macroTask && !state.microTask };\n        };\n        /**\n         * Sets up the custom task state Zone interceptor in the  `ProxyZone`. Throws if\n         * no `ProxyZone` could be found.\n         * @returns an observable that emits whenever the task state changes.\n         */\n        TaskStateZoneInterceptor.setup = function () {\n            if (Zone === undefined) {\n                throw Error('Could not find ZoneJS. For test harnesses running in TestBed, ' +\n                    'ZoneJS needs to be installed.');\n            }\n            // tslint:disable-next-line:variable-name\n            var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n            // If there is no \"ProxyZoneSpec\" installed, we throw an error and recommend\n            // setting up the proxy zone by pulling in the testing bundle.\n            if (!ProxyZoneSpec) {\n                throw Error('ProxyZoneSpec is needed for the test harnesses but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/dist/zone-testing.js');\n            }\n            // Ensure that there is a proxy zone instance set up, and get\n            // a reference to the instance if present.\n            var zoneSpec = ProxyZoneSpec.assertPresent();\n            // If there already is a delegate registered in the proxy zone, and it\n            // is type of the custom task state interceptor, we just use that state\n            // observable. This allows us to only intercept Zone once per test\n            // (similar to how `fakeAsync` or `async` work).\n            if (zoneSpec[stateObservableSymbol]) {\n                return zoneSpec[stateObservableSymbol];\n            }\n            // Since we intercept on environment creation and the fixture has been\n            // created before, we might have missed tasks scheduled before. Fortunately\n            // the proxy zone keeps track of the previous task state, so we can just pass\n            // this as initial state to the task zone interceptor.\n            var interceptor = new TaskStateZoneInterceptor(zoneSpec.lastTaskState);\n            var zoneSpecOnHasTask = zoneSpec.onHasTask;\n            // We setup the task state interceptor in the `ProxyZone`. Note that we cannot register\n            // the interceptor as a new proxy zone delegate because it would mean that other zone\n            // delegates (e.g. `FakeAsyncTestZone` or `AsyncTestZone`) can accidentally overwrite/disable\n            // our interceptor. Since we just intend to monitor the task state of the proxy zone, it is\n            // sufficient to just patch the proxy zone. This also avoids that we interfere with the task\n            // queue scheduling logic.\n            zoneSpec.onHasTask = function () {\n                zoneSpecOnHasTask.apply(zoneSpec, arguments);\n                interceptor.onHasTask.apply(interceptor, arguments);\n            };\n            return zoneSpec[stateObservableSymbol] = interceptor.state;\n        };\n        return TaskStateZoneInterceptor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** An enum of non-text keys that can be used with the `sendKeys` method. */\n    // NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n    // support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n    // dependency on any particular testing framework here. Instead we'll just maintain this supported\n    // list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n    // representation is used in its respective testing framework.\n    var TestKey;\n    (function (TestKey) {\n        TestKey[TestKey[\"BACKSPACE\"] = 0] = \"BACKSPACE\";\n        TestKey[TestKey[\"TAB\"] = 1] = \"TAB\";\n        TestKey[TestKey[\"ENTER\"] = 2] = \"ENTER\";\n        TestKey[TestKey[\"SHIFT\"] = 3] = \"SHIFT\";\n        TestKey[TestKey[\"CONTROL\"] = 4] = \"CONTROL\";\n        TestKey[TestKey[\"ALT\"] = 5] = \"ALT\";\n        TestKey[TestKey[\"ESCAPE\"] = 6] = \"ESCAPE\";\n        TestKey[TestKey[\"PAGE_UP\"] = 7] = \"PAGE_UP\";\n        TestKey[TestKey[\"PAGE_DOWN\"] = 8] = \"PAGE_DOWN\";\n        TestKey[TestKey[\"END\"] = 9] = \"END\";\n        TestKey[TestKey[\"HOME\"] = 10] = \"HOME\";\n        TestKey[TestKey[\"LEFT_ARROW\"] = 11] = \"LEFT_ARROW\";\n        TestKey[TestKey[\"UP_ARROW\"] = 12] = \"UP_ARROW\";\n        TestKey[TestKey[\"RIGHT_ARROW\"] = 13] = \"RIGHT_ARROW\";\n        TestKey[TestKey[\"DOWN_ARROW\"] = 14] = \"DOWN_ARROW\";\n        TestKey[TestKey[\"INSERT\"] = 15] = \"INSERT\";\n        TestKey[TestKey[\"DELETE\"] = 16] = \"DELETE\";\n        TestKey[TestKey[\"F1\"] = 17] = \"F1\";\n        TestKey[TestKey[\"F2\"] = 18] = \"F2\";\n        TestKey[TestKey[\"F3\"] = 19] = \"F3\";\n        TestKey[TestKey[\"F4\"] = 20] = \"F4\";\n        TestKey[TestKey[\"F5\"] = 21] = \"F5\";\n        TestKey[TestKey[\"F6\"] = 22] = \"F6\";\n        TestKey[TestKey[\"F7\"] = 23] = \"F7\";\n        TestKey[TestKey[\"F8\"] = 24] = \"F8\";\n        TestKey[TestKey[\"F9\"] = 25] = \"F9\";\n        TestKey[TestKey[\"F10\"] = 26] = \"F10\";\n        TestKey[TestKey[\"F11\"] = 27] = \"F11\";\n        TestKey[TestKey[\"F12\"] = 28] = \"F12\";\n        TestKey[TestKey[\"META\"] = 29] = \"META\";\n    })(TestKey || (TestKey = {}));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a browser MouseEvent with the specified options.\n     * @docs-private\n     */\n    function createMouseEvent(type, x, y, button) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (button === void 0) { button = 0; }\n        var event = document.createEvent('MouseEvent');\n        var originalPreventDefault = event.preventDefault;\n        event.initMouseEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* detail */ x, /* screenX */ y, /* screenY */ x, /* clientX */ y, /* clientY */ false, /* ctrlKey */ false, /* altKey */ false, /* shiftKey */ false, /* metaKey */ button, /* button */ null /* relatedTarget */);\n        // `initMouseEvent` doesn't allow us to pass the `buttons` and\n        // defaults it to 0 which looks like a fake event.\n        Object.defineProperty(event, 'buttons', { get: function () { return 1; } });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault.apply(this, arguments);\n        };\n        return event;\n    }\n    /**\n     * Creates a browser TouchEvent with the specified pointer coordinates.\n     * @docs-private\n     */\n    function createTouchEvent(type, pageX, pageY) {\n        if (pageX === void 0) { pageX = 0; }\n        if (pageY === void 0) { pageY = 0; }\n        // In favor of creating events that work for most of the browsers, the event is created\n        // as a basic UI Event. The necessary details for the event will be set manually.\n        var event = document.createEvent('UIEvent');\n        var touchDetails = { pageX: pageX, pageY: pageY };\n        // TS3.6 removes the initUIEvent method and suggests porting to \"new UIEvent()\".\n        event.initUIEvent(type, true, true, window, 0);\n        // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n        // the touch details.\n        Object.defineProperties(event, {\n            touches: { value: [touchDetails] },\n            targetTouches: { value: [touchDetails] },\n            changedTouches: { value: [touchDetails] }\n        });\n        return event;\n    }\n    /**\n     * Dispatches a keydown event from an element.\n     * @docs-private\n     */\n    function createKeyboardEvent(type, keyCode, key, target, modifiers) {\n        if (keyCode === void 0) { keyCode = 0; }\n        if (key === void 0) { key = ''; }\n        if (modifiers === void 0) { modifiers = {}; }\n        var event = document.createEvent('KeyboardEvent');\n        var originalPreventDefault = event.preventDefault;\n        // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n        if (event.initKeyEvent) {\n            event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n        }\n        else {\n            // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n            // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n            var modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n                modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n            event.initKeyboardEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* char */ key, /* key */ 0, /* location */ modifiersStr, /* modifiersList */ false /* repeat */);\n        }\n        // Webkit Browsers don't set the keyCode when calling the init function.\n        // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n        Object.defineProperties(event, {\n            keyCode: { get: function () { return keyCode; } },\n            key: { get: function () { return key; } },\n            target: { get: function () { return target; } },\n            ctrlKey: { get: function () { return !!modifiers.control; } },\n            altKey: { get: function () { return !!modifiers.alt; } },\n            shiftKey: { get: function () { return !!modifiers.shift; } },\n            metaKey: { get: function () { return !!modifiers.meta; } }\n        });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault.apply(this, arguments);\n        };\n        return event;\n    }\n    /**\n     * Creates a fake event object with any desired event type.\n     * @docs-private\n     */\n    function createFakeEvent(type, canBubble, cancelable) {\n        if (canBubble === void 0) { canBubble = false; }\n        if (cancelable === void 0) { cancelable = true; }\n        var event = document.createEvent('Event');\n        event.initEvent(type, canBubble, cancelable);\n        return event;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Utility to dispatch any event on a Node.\n     * @docs-private\n     */\n    function dispatchEvent(node, event) {\n        node.dispatchEvent(event);\n        return event;\n    }\n    /**\n     * Shorthand to dispatch a fake event on a specified node.\n     * @docs-private\n     */\n    function dispatchFakeEvent(node, type, canBubble) {\n        return dispatchEvent(node, createFakeEvent(type, canBubble));\n    }\n    /**\n     * Shorthand to dispatch a keyboard event with a specified key code.\n     * @docs-private\n     */\n    function dispatchKeyboardEvent(node, type, keyCode, key, target, modifiers) {\n        return dispatchEvent(node, createKeyboardEvent(type, keyCode, key, target, modifiers));\n    }\n    /**\n     * Shorthand to dispatch a mouse event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchMouseEvent(node, type, x, y, event) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (event === void 0) { event = createMouseEvent(type, x, y); }\n        return dispatchEvent(node, event);\n    }\n    /**\n     * Shorthand to dispatch a touch event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchTouchEvent(node, type, x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        return dispatchEvent(node, createTouchEvent(type, x, y));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function triggerFocusChange(element, event) {\n        var eventFired = false;\n        var handler = function () { return eventFired = true; };\n        element.addEventListener(event, handler);\n        element[event]();\n        element.removeEventListener(event, handler);\n        if (!eventFired) {\n            dispatchFakeEvent(element, event);\n        }\n    }\n    /**\n     * Patches an elements focus and blur methods to emit events consistently and predictably.\n     * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n     * while others won't fire them at all if the browser window is not focused.\n     * @docs-private\n     */\n    function patchElementFocus(element) {\n        element.focus = function () { return dispatchFakeEvent(element, 'focus'); };\n        element.blur = function () { return dispatchFakeEvent(element, 'blur'); };\n    }\n    /** @docs-private */\n    function triggerFocus(element) {\n        triggerFocusChange(element, 'focus');\n    }\n    /** @docs-private */\n    function triggerBlur(element) {\n        triggerFocusChange(element, 'blur');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks whether the given Element is a text input element.\n     * @docs-private\n     */\n    function isTextInput(element) {\n        var nodeName = element.nodeName.toLowerCase();\n        return nodeName === 'input' || nodeName === 'textarea';\n    }\n    function typeInElement(element) {\n        var e_1, _a;\n        var modifiersAndKeys = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            modifiersAndKeys[_i - 1] = arguments[_i];\n        }\n        var first = modifiersAndKeys[0];\n        var modifiers;\n        var rest;\n        if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n            modifiers = first;\n            rest = modifiersAndKeys.slice(1);\n        }\n        else {\n            modifiers = {};\n            rest = modifiersAndKeys;\n        }\n        var keys = rest\n            .map(function (k) { return typeof k === 'string' ?\n            k.split('').map(function (c) { return ({ keyCode: c.toUpperCase().charCodeAt(0), key: c }); }) : [k]; })\n            .reduce(function (arr, k) { return arr.concat(k); }, []);\n        triggerFocus(element);\n        try {\n            for (var keys_1 = tslib.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n                dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n                if (isTextInput(element) && key.key && key.key.length === 1) {\n                    element.value += key.key;\n                    dispatchFakeEvent(element, 'input');\n                }\n                dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    /**\n     * Clears the text in an input or textarea element.\n     * @docs-private\n     */\n    function clearElement(element) {\n        triggerFocus(element);\n        element.value = '';\n        dispatchFakeEvent(element, 'input');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _a;\n    /** Maps `TestKey` constants to the `keyCode` and `key` values used by native browser events. */\n    var keyMap = (_a = {},\n        _a[TestKey.BACKSPACE] = { keyCode: keyCodes.BACKSPACE, key: 'Backspace' },\n        _a[TestKey.TAB] = { keyCode: keyCodes.TAB, key: 'Tab' },\n        _a[TestKey.ENTER] = { keyCode: keyCodes.ENTER, key: 'Enter' },\n        _a[TestKey.SHIFT] = { keyCode: keyCodes.SHIFT, key: 'Shift' },\n        _a[TestKey.CONTROL] = { keyCode: keyCodes.CONTROL, key: 'Control' },\n        _a[TestKey.ALT] = { keyCode: keyCodes.ALT, key: 'Alt' },\n        _a[TestKey.ESCAPE] = { keyCode: keyCodes.ESCAPE, key: 'Escape' },\n        _a[TestKey.PAGE_UP] = { keyCode: keyCodes.PAGE_UP, key: 'PageUp' },\n        _a[TestKey.PAGE_DOWN] = { keyCode: keyCodes.PAGE_DOWN, key: 'PageDown' },\n        _a[TestKey.END] = { keyCode: keyCodes.END, key: 'End' },\n        _a[TestKey.HOME] = { keyCode: keyCodes.HOME, key: 'Home' },\n        _a[TestKey.LEFT_ARROW] = { keyCode: keyCodes.LEFT_ARROW, key: 'ArrowLeft' },\n        _a[TestKey.UP_ARROW] = { keyCode: keyCodes.UP_ARROW, key: 'ArrowUp' },\n        _a[TestKey.RIGHT_ARROW] = { keyCode: keyCodes.RIGHT_ARROW, key: 'ArrowRight' },\n        _a[TestKey.DOWN_ARROW] = { keyCode: keyCodes.DOWN_ARROW, key: 'ArrowDown' },\n        _a[TestKey.INSERT] = { keyCode: keyCodes.INSERT, key: 'Insert' },\n        _a[TestKey.DELETE] = { keyCode: keyCodes.DELETE, key: 'Delete' },\n        _a[TestKey.F1] = { keyCode: keyCodes.F1, key: 'F1' },\n        _a[TestKey.F2] = { keyCode: keyCodes.F2, key: 'F2' },\n        _a[TestKey.F3] = { keyCode: keyCodes.F3, key: 'F3' },\n        _a[TestKey.F4] = { keyCode: keyCodes.F4, key: 'F4' },\n        _a[TestKey.F5] = { keyCode: keyCodes.F5, key: 'F5' },\n        _a[TestKey.F6] = { keyCode: keyCodes.F6, key: 'F6' },\n        _a[TestKey.F7] = { keyCode: keyCodes.F7, key: 'F7' },\n        _a[TestKey.F8] = { keyCode: keyCodes.F8, key: 'F8' },\n        _a[TestKey.F9] = { keyCode: keyCodes.F9, key: 'F9' },\n        _a[TestKey.F10] = { keyCode: keyCodes.F10, key: 'F10' },\n        _a[TestKey.F11] = { keyCode: keyCodes.F11, key: 'F11' },\n        _a[TestKey.F12] = { keyCode: keyCodes.F12, key: 'F12' },\n        _a[TestKey.META] = { keyCode: keyCodes.META, key: 'Meta' },\n        _a);\n    /** A `TestElement` implementation for unit tests. */\n    var UnitTestElement = /** @class */ (function () {\n        function UnitTestElement(element, _stabilize) {\n            this.element = element;\n            this._stabilize = _stabilize;\n        }\n        UnitTestElement.prototype.blur = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            triggerBlur(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.clear = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            if (!isTextInput(this.element)) {\n                                throw Error('Attempting to clear an invalid element');\n                            }\n                            clearElement(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.click = function (relativeX, relativeY) {\n            if (relativeX === void 0) { relativeX = 0; }\n            if (relativeY === void 0) { relativeY = 0; }\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var _a, left, top, clientX, clientY;\n                return tslib.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _b.sent();\n                            _a = this.element.getBoundingClientRect(), left = _a.left, top = _a.top;\n                            clientX = Math.round(left + relativeX);\n                            clientY = Math.round(top + relativeY);\n                            dispatchMouseEvent(this.element, 'mousedown', clientX, clientY);\n                            dispatchMouseEvent(this.element, 'mouseup', clientX, clientY);\n                            dispatchMouseEvent(this.element, 'click', clientX, clientY);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.focus = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            triggerFocus(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getCssValue = function (property) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            // TODO(mmalerba): Consider adding value normalization if we run into common cases where its\n                            //  needed.\n                            return [2 /*return*/, getComputedStyle(this.element).getPropertyValue(property)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hover = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            dispatchMouseEvent(this.element, 'mouseenter');\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.sendKeys = function () {\n            var modifiersAndKeys = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                modifiersAndKeys[_i] = arguments[_i];\n            }\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var args;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            args = modifiersAndKeys.map(function (k) { return typeof k === 'number' ? keyMap[k] : k; });\n                            typeInElement.apply(void 0, tslib.__spread([this.element], args));\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.text = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, (this.element.textContent || '').trim()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getAttribute = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getAttribute(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hasClass = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.classList.contains(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getDimensions = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getBoundingClientRect()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getProperty = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element[name]];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.matchesSelector = function (selector) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var elementPrototype;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            elementPrototype = Element.prototype;\n                            return [2 /*return*/, (elementPrototype['matches'] || elementPrototype['msMatchesSelector'])\n                                    .call(this.element, selector)];\n                    }\n                });\n            });\n        };\n        return UnitTestElement;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A `HarnessEnvironment` implementation for Angular's Testbed. */\n    var TestbedHarnessEnvironment = /** @class */ (function (_super) {\n        tslib.__extends(TestbedHarnessEnvironment, _super);\n        function TestbedHarnessEnvironment(rawRootElement, _fixture) {\n            var _this = _super.call(this, rawRootElement) || this;\n            _this._fixture = _fixture;\n            _this._destroyed = false;\n            _this._taskState = TaskStateZoneInterceptor.setup();\n            _fixture.componentRef.onDestroy(function () { return _this._destroyed = true; });\n            return _this;\n        }\n        /** Creates a `HarnessLoader` rooted at the given fixture's root element. */\n        TestbedHarnessEnvironment.loader = function (fixture) {\n            return new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n        };\n        /**\n         * Creates a `HarnessLoader` at the document root. This can be used if harnesses are\n         * located outside of a fixture (e.g. overlays appended to the document body).\n         */\n        TestbedHarnessEnvironment.documentRootLoader = function (fixture) {\n            return new TestbedHarnessEnvironment(document.body, fixture);\n        };\n        /**\n         * Creates an instance of the given harness type, using the fixture's root element as the\n         * harness's host element. This method should be used when creating a harness for the root element\n         * of a fixture, as components do not have the correct selector when they are created as the root\n         * of the fixture.\n         */\n        TestbedHarnessEnvironment.harnessForFixture = function (fixture, harnessType) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var environment;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            environment = new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n                            return [4 /*yield*/, environment.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, environment.createComponentHarness(harnessType, fixture.nativeElement)];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.forceStabilize = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (this._destroyed) {\n                                throw Error('Harness is attempting to use a fixture that has already been destroyed.');\n                            }\n                            this._fixture.detectChanges();\n                            return [4 /*yield*/, this._fixture.whenStable()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.waitForTasksOutsideAngular = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // If we run in the fake async zone, we run \"flush\" to run any scheduled tasks. This\n                            // ensures that the harnesses behave inside of the FakeAsyncTestZone similar to the\n                            // \"AsyncTestZone\" and the root zone (i.e. neither fakeAsync or async). Note that we\n                            // cannot just rely on the task state observable to become stable because the state will\n                            // never change. This is because the task queue will be only drained if the fake async\n                            // zone is being flushed.\n                            if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n                                testing$1.flush();\n                            }\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            return [4 /*yield*/, this._taskState.pipe(operators.takeWhile(function (state) { return !state.stable; })).toPromise()];\n                        case 1:\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.getDocumentRoot = function () {\n            return document.body;\n        };\n        TestbedHarnessEnvironment.prototype.createTestElement = function (element) {\n            var _this = this;\n            return new UnitTestElement(element, function () { return _this.forceStabilize(); });\n        };\n        TestbedHarnessEnvironment.prototype.createEnvironment = function (element) {\n            return new TestbedHarnessEnvironment(element, this._fixture);\n        };\n        TestbedHarnessEnvironment.prototype.getAllRawElements = function (selector) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, Array.from(this.rawRootElement.querySelectorAll(selector))];\n                    }\n                });\n            });\n        };\n        return TestbedHarnessEnvironment;\n    }(testing.HarnessEnvironment));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.TestbedHarnessEnvironment = TestbedHarnessEnvironment;\n    exports.UnitTestElement = UnitTestElement;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-testing-testbed.umd.js.map\n"]}