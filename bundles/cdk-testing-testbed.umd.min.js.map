{"version":3,"sources":["src/cdk/cdk-testing-testbed.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","testing","testbed","tslib","core","rxjs","operators","keycodes","this","testing$1","keyCodes","_a","stateObservableSymbol","Symbol","TaskStateZoneInterceptor","_lastState","_stateSubject","BehaviorSubject","_getTaskStateFromInternalZoneState","stable","state","asObservable","prototype","onHasTask","delegate","current","target","hasTaskState","next","macroTask","microTask","setup","undefined","Zone","Error","ProxyZoneSpec","zoneSpec","assertPresent","interceptor","lastTaskState","zoneSpecOnHasTask","bind","args","_i","arguments","length","apply","__spread","dispatchEvent","node","event","dispatchFakeEvent","type","canBubble","createFakeEvent","cancelable","document","createEvent","initEvent","dispatchKeyboardEvent","keyCode","key","modifiers","createKeyboardEvent","originalPreventDefault","preventDefault","initKeyEvent","window","control","alt","shift","meta","modifiersStr","trim","initKeyboardEvent","Object","defineProperties","get","ctrlKey","altKey","shiftKey","metaKey","defineProperty","dispatchMouseEvent","x","y","createMouseEvent","button","initMouseEvent","triggerFocusChange","element","eventFired","handler","addEventListener","removeEventListener","triggerFocus","isTextInput","nodeName","toLowerCase","typeInElement","e_1","modifiersAndKeys","rest","first","slice","keys","map","k","split","c","toUpperCase","charCodeAt","reduce","arr","concat","keys_1","__values","keys_1_1","done","value","e_1_1","error","return","call","keyMap","TestKey","BACKSPACE","TAB","ENTER","SHIFT","CONTROL","ALT","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","META","UnitTestElement","_stabilize","blur","__awaiter","__generator","label","sent","triggerBlur","clear","clearElement","click","relativeX","relativeY","top","clientX","clientY","_b","getBoundingClientRect","Math","round","left","focus","getCssValue","property","getComputedStyle","getPropertyValue","hover","sendKeys","text","textContent","getAttribute","name","hasClass","classList","contains","getDimensions","getProperty","matchesSelector","selector","elementPrototype","Element","TestbedHarnessEnvironment","_super","rawRootElement","_fixture","_this","_destroyed","_taskState","componentRef","onDestroy","__extends","loader","fixture","nativeElement","documentRootLoader","body","harnessForFixture","harnessType","environment","forceStabilize","createComponentHarness","detectChanges","whenStable","waitForTasksOutsideAngular","flush","pipe","takeWhile","toPromise","getDocumentRoot","createTestElement","createEnvironment","getAllRawElements","Array","from","querySelectorAll","HarnessEnvironment"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing'), require('@angular/core/testing'), require('rxjs/operators'), require('rxjs'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/testing/testbed', ['exports', 'tslib', '@angular/cdk/testing', '@angular/core/testing', 'rxjs/operators', 'rxjs', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.testing = global.ng.cdk.testing || {}, global.ng.cdk.testing.testbed = {}), global.tslib, global.ng.cdk.testing, global.ng.core.testing, global.rxjs.operators, global.rxjs, global.ng.cdk.keycodes));\n}(this, (function (exports, tslib, testing, testing$1, operators, rxjs, keyCodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Unique symbol that is used to patch a property to a proxy zone. */\n    var stateObservableSymbol = Symbol('ProxyZone_PATCHED#stateObservable');\n    /**\n     * Interceptor that can be set up in a `ProxyZone` instance. The interceptor\n     * will keep track of the task state and emit whenever the state changes.\n     *\n     * This serves as a workaround for https://github.com/angular/angular/issues/32896.\n     */\n    var TaskStateZoneInterceptor = /** @class */ (function () {\n        function TaskStateZoneInterceptor(_lastState) {\n            this._lastState = _lastState;\n            /** Subject that can be used to emit a new state change. */\n            this._stateSubject = new rxjs.BehaviorSubject(this._lastState ? this._getTaskStateFromInternalZoneState(this._lastState) : { stable: true });\n            /** Public observable that emits whenever the task state changes. */\n            this.state = this._stateSubject.asObservable();\n        }\n        /** This will be called whenever the task state changes in the intercepted zone. */\n        TaskStateZoneInterceptor.prototype.onHasTask = function (delegate, current, target, hasTaskState) {\n            if (current === target) {\n                this._stateSubject.next(this._getTaskStateFromInternalZoneState(hasTaskState));\n            }\n        };\n        /** Gets the task state from the internal ZoneJS task state. */\n        TaskStateZoneInterceptor.prototype._getTaskStateFromInternalZoneState = function (state) {\n            return { stable: !state.macroTask && !state.microTask };\n        };\n        /**\n         * Sets up the custom task state Zone interceptor in the  `ProxyZone`. Throws if\n         * no `ProxyZone` could be found.\n         * @returns an observable that emits whenever the task state changes.\n         */\n        TaskStateZoneInterceptor.setup = function () {\n            if (Zone === undefined) {\n                throw Error('Could not find ZoneJS. For test harnesses running in TestBed, ' +\n                    'ZoneJS needs to be installed.');\n            }\n            // tslint:disable-next-line:variable-name\n            var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n            // If there is no \"ProxyZoneSpec\" installed, we throw an error and recommend\n            // setting up the proxy zone by pulling in the testing bundle.\n            if (!ProxyZoneSpec) {\n                throw Error('ProxyZoneSpec is needed for the test harnesses but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/dist/zone-testing.js');\n            }\n            // Ensure that there is a proxy zone instance set up, and get\n            // a reference to the instance if present.\n            var zoneSpec = ProxyZoneSpec.assertPresent();\n            // If there already is a delegate registered in the proxy zone, and it\n            // is type of the custom task state interceptor, we just use that state\n            // observable. This allows us to only intercept Zone once per test\n            // (similar to how `fakeAsync` or `async` work).\n            if (zoneSpec[stateObservableSymbol]) {\n                return zoneSpec[stateObservableSymbol];\n            }\n            // Since we intercept on environment creation and the fixture has been\n            // created before, we might have missed tasks scheduled before. Fortunately\n            // the proxy zone keeps track of the previous task state, so we can just pass\n            // this as initial state to the task zone interceptor.\n            var interceptor = new TaskStateZoneInterceptor(zoneSpec.lastTaskState);\n            var zoneSpecOnHasTask = zoneSpec.onHasTask.bind(zoneSpec);\n            // We setup the task state interceptor in the `ProxyZone`. Note that we cannot register\n            // the interceptor as a new proxy zone delegate because it would mean that other zone\n            // delegates (e.g. `FakeAsyncTestZone` or `AsyncTestZone`) can accidentally overwrite/disable\n            // our interceptor. Since we just intend to monitor the task state of the proxy zone, it is\n            // sufficient to just patch the proxy zone. This also avoids that we interfere with the task\n            // queue scheduling logic.\n            zoneSpec.onHasTask = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                zoneSpecOnHasTask.apply(void 0, tslib.__spread(args));\n                interceptor.onHasTask.apply(interceptor, tslib.__spread(args));\n            };\n            return zoneSpec[stateObservableSymbol] = interceptor.state;\n        };\n        return TaskStateZoneInterceptor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a browser MouseEvent with the specified options.\n     * @docs-private\n     */\n    function createMouseEvent(type, x, y, button) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (button === void 0) { button = 0; }\n        var event = document.createEvent('MouseEvent');\n        var originalPreventDefault = event.preventDefault.bind(event);\n        event.initMouseEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* detail */ x, /* screenX */ y, /* screenY */ x, /* clientX */ y, /* clientY */ false, /* ctrlKey */ false, /* altKey */ false, /* shiftKey */ false, /* metaKey */ button, /* button */ null /* relatedTarget */);\n        // `initMouseEvent` doesn't allow us to pass the `buttons` and\n        // defaults it to 0 which looks like a fake event.\n        Object.defineProperty(event, 'buttons', { get: function () { return 1; } });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault();\n        };\n        return event;\n    }\n    /**\n     * Creates a browser TouchEvent with the specified pointer coordinates.\n     * @docs-private\n     */\n    function createTouchEvent(type, pageX, pageY) {\n        if (pageX === void 0) { pageX = 0; }\n        if (pageY === void 0) { pageY = 0; }\n        // In favor of creating events that work for most of the browsers, the event is created\n        // as a basic UI Event. The necessary details for the event will be set manually.\n        var event = document.createEvent('UIEvent');\n        var touchDetails = { pageX: pageX, pageY: pageY };\n        // TS3.6 removes the initUIEvent method and suggests porting to \"new UIEvent()\".\n        event.initUIEvent(type, true, true, window, 0);\n        // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n        // the touch details.\n        Object.defineProperties(event, {\n            touches: { value: [touchDetails] },\n            targetTouches: { value: [touchDetails] },\n            changedTouches: { value: [touchDetails] }\n        });\n        return event;\n    }\n    /**\n     * Dispatches a keydown event from an element.\n     * @docs-private\n     */\n    function createKeyboardEvent(type, keyCode, key, target, modifiers) {\n        if (keyCode === void 0) { keyCode = 0; }\n        if (key === void 0) { key = ''; }\n        if (modifiers === void 0) { modifiers = {}; }\n        var event = document.createEvent('KeyboardEvent');\n        var originalPreventDefault = event.preventDefault;\n        // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n        if (event.initKeyEvent) {\n            event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n        }\n        else {\n            // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n            // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n            var modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n                modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n            event.initKeyboardEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* char */ key, /* key */ 0, /* location */ modifiersStr, /* modifiersList */ false /* repeat */);\n        }\n        // Webkit Browsers don't set the keyCode when calling the init function.\n        // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n        Object.defineProperties(event, {\n            keyCode: { get: function () { return keyCode; } },\n            key: { get: function () { return key; } },\n            target: { get: function () { return target; } },\n            ctrlKey: { get: function () { return !!modifiers.control; } },\n            altKey: { get: function () { return !!modifiers.alt; } },\n            shiftKey: { get: function () { return !!modifiers.shift; } },\n            metaKey: { get: function () { return !!modifiers.meta; } }\n        });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault.apply(this, arguments);\n        };\n        return event;\n    }\n    /**\n     * Creates a fake event object with any desired event type.\n     * @docs-private\n     */\n    function createFakeEvent(type, canBubble, cancelable) {\n        if (canBubble === void 0) { canBubble = false; }\n        if (cancelable === void 0) { cancelable = true; }\n        var event = document.createEvent('Event');\n        event.initEvent(type, canBubble, cancelable);\n        return event;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Utility to dispatch any event on a Node.\n     * @docs-private\n     */\n    function dispatchEvent(node, event) {\n        node.dispatchEvent(event);\n        return event;\n    }\n    /**\n     * Shorthand to dispatch a fake event on a specified node.\n     * @docs-private\n     */\n    function dispatchFakeEvent(node, type, canBubble) {\n        return dispatchEvent(node, createFakeEvent(type, canBubble));\n    }\n    /**\n     * Shorthand to dispatch a keyboard event with a specified key code.\n     * @docs-private\n     */\n    function dispatchKeyboardEvent(node, type, keyCode, key, target, modifiers) {\n        return dispatchEvent(node, createKeyboardEvent(type, keyCode, key, target, modifiers));\n    }\n    /**\n     * Shorthand to dispatch a mouse event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchMouseEvent(node, type, x, y, event) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (event === void 0) { event = createMouseEvent(type, x, y); }\n        return dispatchEvent(node, event);\n    }\n    /**\n     * Shorthand to dispatch a touch event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchTouchEvent(node, type, x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        return dispatchEvent(node, createTouchEvent(type, x, y));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function triggerFocusChange(element, event) {\n        var eventFired = false;\n        var handler = function () { return eventFired = true; };\n        element.addEventListener(event, handler);\n        element[event]();\n        element.removeEventListener(event, handler);\n        if (!eventFired) {\n            dispatchFakeEvent(element, event);\n        }\n    }\n    /**\n     * Patches an elements focus and blur methods to emit events consistently and predictably.\n     * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n     * while others won't fire them at all if the browser window is not focused.\n     * @docs-private\n     */\n    function patchElementFocus(element) {\n        element.focus = function () { return dispatchFakeEvent(element, 'focus'); };\n        element.blur = function () { return dispatchFakeEvent(element, 'blur'); };\n    }\n    /** @docs-private */\n    function triggerFocus(element) {\n        triggerFocusChange(element, 'focus');\n    }\n    /** @docs-private */\n    function triggerBlur(element) {\n        triggerFocusChange(element, 'blur');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks whether the given Element is a text input element.\n     * @docs-private\n     */\n    function isTextInput(element) {\n        var nodeName = element.nodeName.toLowerCase();\n        return nodeName === 'input' || nodeName === 'textarea';\n    }\n    function typeInElement(element) {\n        var e_1, _a;\n        var modifiersAndKeys = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            modifiersAndKeys[_i - 1] = arguments[_i];\n        }\n        var first = modifiersAndKeys[0];\n        var modifiers;\n        var rest;\n        if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n            modifiers = first;\n            rest = modifiersAndKeys.slice(1);\n        }\n        else {\n            modifiers = {};\n            rest = modifiersAndKeys;\n        }\n        var keys = rest\n            .map(function (k) { return typeof k === 'string' ?\n            k.split('').map(function (c) { return ({ keyCode: c.toUpperCase().charCodeAt(0), key: c }); }) : [k]; })\n            .reduce(function (arr, k) { return arr.concat(k); }, []);\n        triggerFocus(element);\n        try {\n            for (var keys_1 = tslib.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n                dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n                if (isTextInput(element) && key.key && key.key.length === 1) {\n                    element.value += key.key;\n                    dispatchFakeEvent(element, 'input');\n                }\n                dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    /**\n     * Clears the text in an input or textarea element.\n     * @docs-private\n     */\n    function clearElement(element) {\n        triggerFocus(element);\n        element.value = '';\n        dispatchFakeEvent(element, 'input');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _a;\n    /** Maps `TestKey` constants to the `keyCode` and `key` values used by native browser events. */\n    var keyMap = (_a = {},\n        _a[testing.TestKey.BACKSPACE] = { keyCode: keyCodes.BACKSPACE, key: 'Backspace' },\n        _a[testing.TestKey.TAB] = { keyCode: keyCodes.TAB, key: 'Tab' },\n        _a[testing.TestKey.ENTER] = { keyCode: keyCodes.ENTER, key: 'Enter' },\n        _a[testing.TestKey.SHIFT] = { keyCode: keyCodes.SHIFT, key: 'Shift' },\n        _a[testing.TestKey.CONTROL] = { keyCode: keyCodes.CONTROL, key: 'Control' },\n        _a[testing.TestKey.ALT] = { keyCode: keyCodes.ALT, key: 'Alt' },\n        _a[testing.TestKey.ESCAPE] = { keyCode: keyCodes.ESCAPE, key: 'Escape' },\n        _a[testing.TestKey.PAGE_UP] = { keyCode: keyCodes.PAGE_UP, key: 'PageUp' },\n        _a[testing.TestKey.PAGE_DOWN] = { keyCode: keyCodes.PAGE_DOWN, key: 'PageDown' },\n        _a[testing.TestKey.END] = { keyCode: keyCodes.END, key: 'End' },\n        _a[testing.TestKey.HOME] = { keyCode: keyCodes.HOME, key: 'Home' },\n        _a[testing.TestKey.LEFT_ARROW] = { keyCode: keyCodes.LEFT_ARROW, key: 'ArrowLeft' },\n        _a[testing.TestKey.UP_ARROW] = { keyCode: keyCodes.UP_ARROW, key: 'ArrowUp' },\n        _a[testing.TestKey.RIGHT_ARROW] = { keyCode: keyCodes.RIGHT_ARROW, key: 'ArrowRight' },\n        _a[testing.TestKey.DOWN_ARROW] = { keyCode: keyCodes.DOWN_ARROW, key: 'ArrowDown' },\n        _a[testing.TestKey.INSERT] = { keyCode: keyCodes.INSERT, key: 'Insert' },\n        _a[testing.TestKey.DELETE] = { keyCode: keyCodes.DELETE, key: 'Delete' },\n        _a[testing.TestKey.F1] = { keyCode: keyCodes.F1, key: 'F1' },\n        _a[testing.TestKey.F2] = { keyCode: keyCodes.F2, key: 'F2' },\n        _a[testing.TestKey.F3] = { keyCode: keyCodes.F3, key: 'F3' },\n        _a[testing.TestKey.F4] = { keyCode: keyCodes.F4, key: 'F4' },\n        _a[testing.TestKey.F5] = { keyCode: keyCodes.F5, key: 'F5' },\n        _a[testing.TestKey.F6] = { keyCode: keyCodes.F6, key: 'F6' },\n        _a[testing.TestKey.F7] = { keyCode: keyCodes.F7, key: 'F7' },\n        _a[testing.TestKey.F8] = { keyCode: keyCodes.F8, key: 'F8' },\n        _a[testing.TestKey.F9] = { keyCode: keyCodes.F9, key: 'F9' },\n        _a[testing.TestKey.F10] = { keyCode: keyCodes.F10, key: 'F10' },\n        _a[testing.TestKey.F11] = { keyCode: keyCodes.F11, key: 'F11' },\n        _a[testing.TestKey.F12] = { keyCode: keyCodes.F12, key: 'F12' },\n        _a[testing.TestKey.META] = { keyCode: keyCodes.META, key: 'Meta' },\n        _a);\n    /** A `TestElement` implementation for unit tests. */\n    var UnitTestElement = /** @class */ (function () {\n        function UnitTestElement(element, _stabilize) {\n            this.element = element;\n            this._stabilize = _stabilize;\n        }\n        UnitTestElement.prototype.blur = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            triggerBlur(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.clear = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            if (!isTextInput(this.element)) {\n                                throw Error('Attempting to clear an invalid element');\n                            }\n                            clearElement(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.click = function (relativeX, relativeY) {\n            if (relativeX === void 0) { relativeX = 0; }\n            if (relativeY === void 0) { relativeY = 0; }\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var _a, left, top, clientX, clientY;\n                return tslib.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _b.sent();\n                            _a = this.element.getBoundingClientRect(), left = _a.left, top = _a.top;\n                            clientX = Math.round(left + relativeX);\n                            clientY = Math.round(top + relativeY);\n                            dispatchMouseEvent(this.element, 'mousedown', clientX, clientY);\n                            dispatchMouseEvent(this.element, 'mouseup', clientX, clientY);\n                            dispatchMouseEvent(this.element, 'click', clientX, clientY);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.focus = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            triggerFocus(this.element);\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getCssValue = function (property) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            // TODO(mmalerba): Consider adding value normalization if we run into common cases where its\n                            //  needed.\n                            return [2 /*return*/, getComputedStyle(this.element).getPropertyValue(property)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hover = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            dispatchMouseEvent(this.element, 'mouseenter');\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.sendKeys = function () {\n            var modifiersAndKeys = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                modifiersAndKeys[_i] = arguments[_i];\n            }\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var args;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            args = modifiersAndKeys.map(function (k) { return typeof k === 'number' ? keyMap[k] : k; });\n                            typeInElement.apply(void 0, tslib.__spread([this.element], args));\n                            return [4 /*yield*/, this._stabilize()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.text = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, (this.element.textContent || '').trim()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getAttribute = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getAttribute(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.hasClass = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.classList.contains(name)];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getDimensions = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element.getBoundingClientRect()];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.getProperty = function (name) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, this.element[name]];\n                    }\n                });\n            });\n        };\n        UnitTestElement.prototype.matchesSelector = function (selector) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var elementPrototype;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._stabilize()];\n                        case 1:\n                            _a.sent();\n                            elementPrototype = Element.prototype;\n                            return [2 /*return*/, (elementPrototype['matches'] || elementPrototype['msMatchesSelector'])\n                                    .call(this.element, selector)];\n                    }\n                });\n            });\n        };\n        return UnitTestElement;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A `HarnessEnvironment` implementation for Angular's Testbed. */\n    var TestbedHarnessEnvironment = /** @class */ (function (_super) {\n        tslib.__extends(TestbedHarnessEnvironment, _super);\n        function TestbedHarnessEnvironment(rawRootElement, _fixture) {\n            var _this = _super.call(this, rawRootElement) || this;\n            _this._fixture = _fixture;\n            _this._destroyed = false;\n            _this._taskState = TaskStateZoneInterceptor.setup();\n            _fixture.componentRef.onDestroy(function () { return _this._destroyed = true; });\n            return _this;\n        }\n        /** Creates a `HarnessLoader` rooted at the given fixture's root element. */\n        TestbedHarnessEnvironment.loader = function (fixture) {\n            return new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n        };\n        /**\n         * Creates a `HarnessLoader` at the document root. This can be used if harnesses are\n         * located outside of a fixture (e.g. overlays appended to the document body).\n         */\n        TestbedHarnessEnvironment.documentRootLoader = function (fixture) {\n            return new TestbedHarnessEnvironment(document.body, fixture);\n        };\n        /**\n         * Creates an instance of the given harness type, using the fixture's root element as the\n         * harness's host element. This method should be used when creating a harness for the root element\n         * of a fixture, as components do not have the correct selector when they are created as the root\n         * of the fixture.\n         */\n        TestbedHarnessEnvironment.harnessForFixture = function (fixture, harnessType) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var environment;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            environment = new TestbedHarnessEnvironment(fixture.nativeElement, fixture);\n                            return [4 /*yield*/, environment.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, environment.createComponentHarness(harnessType, fixture.nativeElement)];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.forceStabilize = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (this._destroyed) {\n                                throw Error('Harness is attempting to use a fixture that has already been destroyed.');\n                            }\n                            this._fixture.detectChanges();\n                            return [4 /*yield*/, this._fixture.whenStable()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.waitForTasksOutsideAngular = function () {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // If we run in the fake async zone, we run \"flush\" to run any scheduled tasks. This\n                            // ensures that the harnesses behave inside of the FakeAsyncTestZone similar to the\n                            // \"AsyncTestZone\" and the root zone (i.e. neither fakeAsync or async). Note that we\n                            // cannot just rely on the task state observable to become stable because the state will\n                            // never change. This is because the task queue will be only drained if the fake async\n                            // zone is being flushed.\n                            if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n                                testing$1.flush();\n                            }\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            return [4 /*yield*/, this._taskState.pipe(operators.takeWhile(function (state) { return !state.stable; })).toPromise()];\n                        case 1:\n                            // Wait until the task queue has been drained and the zone is stable. Note that\n                            // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n                            // outside of the Angular zone. For test harnesses, we want to ensure that the\n                            // app is fully stabilized and therefore need to use our own zone interceptor.\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        TestbedHarnessEnvironment.prototype.getDocumentRoot = function () {\n            return document.body;\n        };\n        TestbedHarnessEnvironment.prototype.createTestElement = function (element) {\n            var _this = this;\n            return new UnitTestElement(element, function () { return _this.forceStabilize(); });\n        };\n        TestbedHarnessEnvironment.prototype.createEnvironment = function (element) {\n            return new TestbedHarnessEnvironment(element, this._fixture);\n        };\n        TestbedHarnessEnvironment.prototype.getAllRawElements = function (selector) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.forceStabilize()];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, Array.from(this.rawRootElement.querySelectorAll(selector))];\n                    }\n                });\n            });\n        };\n        return TestbedHarnessEnvironment;\n    }(testing.HarnessEnvironment));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.TestbedHarnessEnvironment = TestbedHarnessEnvironment;\n    exports.UnitTestElement = UnitTestElement;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-testing-testbed.umd.js.map\n"]}