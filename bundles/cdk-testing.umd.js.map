{"version":3,"file":"cdk-testing.umd.js","sources":["../../src/cdk/testing/type-in-element.ts","../../src/cdk/testing/test-element.ts","../../src/cdk/testing/harness-environment.ts","../../src/cdk/testing/element-focus.ts","../../src/cdk/testing/dispatch-events.ts","../../src/cdk/testing/event-objects.ts","../../src/cdk/testing/component-harness.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from './dispatch-events';\nimport {triggerFocus} from './element-focus';\nimport {ModifierKeys} from './event-objects';\n\n/**\n * Checks whether the given Element is a text input element.\n * @docs-private\n */\nexport function isTextInput(element: Element): element is HTMLInputElement | HTMLTextAreaElement {\n  return element.nodeName.toLowerCase() === 'input' ||\n      element.nodeName.toLowerCase() === 'textarea' ;\n}\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(\n    element: HTMLElement, ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param modifiers Modifier keys that are held while typing.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(element: HTMLElement, modifiers: ModifierKeys,\n                              ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\nexport function typeInElement(element: HTMLElement, ...modifiersAndKeys: any) {\n  const first = modifiersAndKeys[0];\n  let modifiers: ModifierKeys;\n  let rest: (string | {keyCode?: number, key?: string})[];\n  if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n    modifiers = first;\n    rest = modifiersAndKeys.slice(1);\n  } else {\n    modifiers = {};\n    rest = modifiersAndKeys;\n  }\n  const keys: {keyCode?: number, key?: string}[] = rest\n      .map(k => typeof k === 'string' ?\n          k.split('').map(c => ({keyCode: c.toUpperCase().charCodeAt(0), key: c})) : [k])\n      .reduce((arr, k) => arr.concat(k), []);\n\n  triggerFocus(element);\n  for (const key of keys) {\n    dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n    dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n    if (isTextInput(element) && key.key && key.key.length === 1) {\n      element.value += key.key;\n      dispatchFakeEvent(element, 'input');\n    }\n    dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n  }\n}\n\n/**\n * Clears the text in an input or textarea element.\n * @docs-private\n */\nexport function clearElement(element: HTMLInputElement | HTMLTextAreaElement) {\n  triggerFocus(element as HTMLElement);\n  element.value = '';\n  dispatchFakeEvent(element, 'input');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementDimensions} from './element-dimensions';\nimport {ModifierKeys} from './event-objects';\n\n/** An enum of non-text keys that can be used with the `sendKeys` method. */\n// NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n// support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n// dependency on any particular testing framework here. Instead we'll just maintain this supported\n// list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n// representation is used in its respective testing framework.\nexport enum TestKey {\n  BACKSPACE,\n  TAB,\n  ENTER,\n  SHIFT,\n  CONTROL,\n  ALT,\n  ESCAPE,\n  PAGE_UP,\n  PAGE_DOWN,\n  END,\n  HOME,\n  LEFT_ARROW,\n  UP_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  INSERT,\n  DELETE,\n  F1,\n  F2,\n  F3,\n  F4,\n  F5,\n  F6,\n  F7,\n  F8,\n  F9,\n  F10,\n  F11,\n  F12,\n  META\n}\n\n/**\n * This acts as a common interface for DOM elements across both unit and e2e tests. It is the\n * interface through which the ComponentHarness interacts with the component's DOM.\n */\nexport interface TestElement {\n  /** Blur the element. */\n  blur(): Promise<void>;\n\n  /** Clear the element's input (for input elements only). */\n  clear(): Promise<void>;\n\n  /**\n   * Click the element.\n   * @param relativeX Coordinate within the element, along the X-axis at which to click.\n   * @param relativeY Coordinate within the element, along the Y-axis at which to click.\n   */\n  click(relativeX?: number, relativeY?: number): Promise<void>;\n\n  /** Focus the element. */\n  focus(): Promise<void>;\n\n  /** Get the computed value of the given CSS property for the element. */\n  getCssValue(property: string): Promise<string>;\n\n  /** Hovers the mouse over the element. */\n  hover(): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n\n  /** Gets the text from the element. */\n  text(): Promise<string>;\n\n  /** Gets the value for the given attribute from the element. */\n  getAttribute(name: string): Promise<string | null>;\n\n  /** Checks whether the element has the given class. */\n  hasClass(name: string): Promise<boolean>;\n\n  /** Gets the dimensions of the element. */\n  getDimensions(): Promise<ElementDimensions>;\n\n  /** Gets the value of a property of an element. */\n  getProperty(name: string): Promise<any>;\n\n  /** Checks whether this element matches the given selector. */\n  matchesSelector(selector: string): Promise<boolean>;\n\n  /**\n   * Flushes change detection and async tasks.\n   * In most cases it should not be necessary to call this. However, there may be some edge cases\n   * where it is needed to fully flush animation events.\n   */\n  forceStabilize(): Promise<void>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AsyncFactoryFn,\n  ComponentHarness,\n  ComponentHarnessConstructor,\n  HarnessLoader,\n  HarnessPredicate,\n  LocatorFactory\n} from './component-harness';\nimport {TestElement} from './test-element';\n\n/**\n * Base harness environment class that can be extended to allow `ComponentHarness`es to be used in\n * different test environments (e.g. testbed, protractor, etc.). This class implements the\n * functionality of both a `HarnessLoader` and `LocatorFactory`. This class is generic on the raw\n * element type, `E`, used by the particular test environment.\n */\nexport abstract class HarnessEnvironment<E> implements HarnessLoader, LocatorFactory {\n  // Implemented as part of the `LocatorFactory` interface.\n  rootElement: TestElement;\n\n  protected constructor(protected rawRootElement: E) {\n    this.rootElement = this.createTestElement(rawRootElement);\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  documentRootLocatorFactory(): LocatorFactory {\n    return this.createEnvironment(this.getDocumentRoot());\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n  locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n  locatorFor<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        return this.createTestElement(await this._assertElementFound(arg));\n      } else {\n        return this._assertHarnessFound(arg);\n      }\n    };\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n  locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n  locatorForOptional<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        const element = (await this.getAllRawElements(arg))[0];\n        return element ? this.createTestElement(element) : null;\n      } else {\n        const candidates = await this._getAllHarnesses(arg);\n        return candidates[0] || null;\n      }\n    };\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n  locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n  locatorForAll<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        return (await this.getAllRawElements(arg)).map(e => this.createTestElement(e));\n      } else {\n        return this._getAllHarnesses(arg);\n      }\n    };\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  getHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T> {\n    return this.locatorFor(harnessType)();\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]> {\n    return this.locatorForAll(harnessType)();\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  async getChildLoader(selector: string): Promise<HarnessLoader> {\n    return this.createEnvironment(await this._assertElementFound(selector));\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  async getAllChildLoaders(selector: string): Promise<HarnessLoader[]> {\n    return (await this.getAllRawElements(selector)).map(e => this.createEnvironment(e));\n  }\n\n  /** Creates a `ComponentHarness` for the given harness type with the given raw host element. */\n  protected createComponentHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T>, element: E): T {\n    return new harnessType(this.createEnvironment(element));\n  }\n\n  /** Gets the root element for the document. */\n  protected abstract getDocumentRoot(): E;\n\n  /** Creates a `TestElement` from a raw element. */\n  protected abstract createTestElement(element: E): TestElement;\n\n  /** Creates a `HarnessLoader` rooted at the given raw element. */\n  protected abstract createEnvironment(element: E): HarnessEnvironment<E>;\n\n  /**\n   * Gets a list of all elements matching the given selector under this environment's root element.\n   */\n  protected abstract getAllRawElements(selector: string): Promise<E[]>;\n\n  private async _getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]> {\n    const harnessPredicate = harnessType instanceof HarnessPredicate ?\n        harnessType : new HarnessPredicate(harnessType, {});\n    const elements = await this.getAllRawElements(harnessPredicate.getSelector());\n    return harnessPredicate.filter(elements.map(\n        element => this.createComponentHarness(harnessPredicate.harnessType, element)));\n  }\n\n  private async _assertElementFound(selector: string): Promise<E> {\n    const element = (await this.getAllRawElements(selector))[0];\n    if (!element) {\n      throw Error(`Expected to find element matching selector: \"${selector}\", but none was found`);\n    }\n    return element;\n  }\n\n  private async _assertHarnessFound<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T> {\n    const harness = (await this._getAllHarnesses(harnessType))[0];\n    if (!harness) {\n      throw _getErrorForMissingHarness(harnessType);\n    }\n    return harness;\n  }\n}\n\nfunction _getErrorForMissingHarness<T extends ComponentHarness>(\n    harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Error {\n  const harnessPredicate =\n      harnessType instanceof HarnessPredicate ? harnessType : new HarnessPredicate(harnessType, {});\n  const {name, hostSelector} = harnessPredicate.harnessType;\n  let restrictions = harnessPredicate.getDescription();\n  let message = `Expected to find element for ${name} matching selector: \"${hostSelector}\"`;\n  if (restrictions) {\n    message += ` (with restrictions: ${restrictions})`;\n  }\n  message += ', but none was found';\n  return Error(message);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent} from './dispatch-events';\n\nfunction triggerFocusChange(element: HTMLElement, event: 'focus' | 'blur') {\n  let eventFired = false;\n  const handler = () => eventFired = true;\n  element.addEventListener(event, handler);\n  element[event]();\n  element.removeEventListener(event, handler);\n  if (!eventFired) {\n    dispatchFakeEvent(element, event);\n  }\n}\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n * @docs-private\n */\nexport function patchElementFocus(element: HTMLElement) {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n\n/** @docs-private */\nexport function triggerFocus(element: HTMLElement) {\n  triggerFocusChange(element, 'focus');\n}\n\n/** @docs-private */\nexport function triggerBlur(element: HTMLElement) {\n  triggerFocusChange(element, 'blur');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createTouchEvent,\n  ModifierKeys\n} from './event-objects';\n\n/**\n * Utility to dispatch any event on a Node.\n * @docs-private\n */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @docs-private\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key code.\n * @docs-private\n */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode?: number, key?: string,\n                                      target?: Element, modifiers?: ModifierKeys): KeyboardEvent {\n  return dispatchEvent(node,\n      createKeyboardEvent(type, keyCode, key, target, modifiers)) as KeyboardEvent;\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\n  event = createMouseEvent(type, x, y)): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Modifier keys that may be held while typing. */\nexport interface ModifierKeys {\n  control?: boolean;\n  alt?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\n/**\n * Creates a browser MouseEvent with the specified options.\n * @docs-private\n */\nexport function createMouseEvent(type: string, x = 0, y = 0, button = 0) {\n  const event = document.createEvent('MouseEvent');\n  const originalPreventDefault = event.preventDefault;\n\n  event.initMouseEvent(type,\n    true, /* canBubble */\n    true, /* cancelable */\n    window, /* view */\n    0, /* detail */\n    x, /* screenX */\n    y, /* screenY */\n    x, /* clientX */\n    y, /* clientY */\n    false, /* ctrlKey */\n    false, /* altKey */\n    false, /* shiftKey */\n    false, /* metaKey */\n    button, /* button */\n    null /* relatedTarget */);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', {get: () => 1});\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n * @docs-private\n */\nexport function createTouchEvent(type: string, pageX = 0, pageY = 0) {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = document.createEvent('UIEvent');\n  const touchDetails = {pageX, pageY};\n\n  event.initUIEvent(type, true, true, window, 0);\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: {value: [touchDetails]},\n    targetTouches: {value: [touchDetails]},\n    changedTouches: {value: [touchDetails]}\n  });\n\n  return event;\n}\n\n/**\n * Dispatches a keydown event from an element.\n * @docs-private\n */\nexport function createKeyboardEvent(type: string, keyCode: number = 0, key: string = '',\n                                    target?: Element, modifiers: ModifierKeys = {}) {\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift,\n        modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n        modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n    event.initKeyboardEvent(type,\n        true, /* canBubble */\n        true, /* cancelable */\n        window, /* view */\n        0, /* char */\n        key, /* key */\n        0, /* location */\n        modifiersStr, /* modifiersList */\n        false /* repeat */);\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    ctrlKey: { get: () => !!modifiers.control },\n    altKey: { get: () => !!modifiers.alt },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a fake event object with any desired event type.\n * @docs-private\n */\nexport function createFakeEvent(type: string, canBubble = false, cancelable = true) {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TestElement} from './test-element';\n\n/** An async function that returns a promise when called. */\nexport type AsyncFactoryFn<T> = () => Promise<T>;\n\n/** An async function that takes an item and returns a boolean promise */\nexport type AsyncPredicate<T> = (item: T) => Promise<boolean>;\n\n/** An async function that takes an item and an option value and returns a boolean promise. */\nexport type AsyncOptionPredicate<T, O> = (item: T, option: O) => Promise<boolean>;\n\n/**\n * Interface used to load ComponentHarness objects. This interface is used by test authors to\n * instantiate `ComponentHarness`es.\n */\nexport interface HarnessLoader {\n  /**\n   * Searches for an element with the given selector under the current instances's root element,\n   * and returns a `HarnessLoader` rooted at the matching element. If multiple elements match the\n   * selector, the first is used. If no elements match, an error is thrown.\n   * @param selector The selector for the root element of the new `HarnessLoader`\n   * @return A `HarnessLoader` rooted at the element matching the given selector.\n   * @throws If a matching element can't be found.\n   */\n  getChildLoader(selector: string): Promise<HarnessLoader>;\n\n  /**\n   * Searches for all elements with the given selector under the current instances's root element,\n   * and returns an array of `HarnessLoader`s, one for each matching element, rooted at that\n   * element.\n   * @param selector The selector for the root element of the new `HarnessLoader`\n   * @return A list of `HarnessLoader`s, one for each matching element, rooted at that element.\n   */\n  getAllChildLoaders(selector: string): Promise<HarnessLoader[]>;\n\n  /**\n   * Searches for an instance of the component corresponding to the given harness type under the\n   * `HarnessLoader`'s root element, and returns a `ComponentHarness` for that instance. If multiple\n   * matching components are found, a harness for the first one is returned. If no matching\n   * component is found, an error is thrown.\n   * @param harnessType The type of harness to create\n   * @return An instance of the given harness type\n   * @throws If a matching component instance can't be found.\n   */\n  getHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T>;\n\n  /**\n   * Searches for all instances of the component corresponding to the given harness type under the\n   * `HarnessLoader`'s root element, and returns a list `ComponentHarness` for each instance.\n   * @param harnessType The type of harness to create\n   * @return A list instances of the given harness type.\n   */\n  getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]>;\n}\n\n/**\n * Interface used to create asynchronous locator functions used find elements and component\n * harnesses. This interface is used by `ComponentHarness` authors to create locator functions for\n * their `ComponentHarenss` subclass.\n */\nexport interface LocatorFactory {\n  /** Gets a locator factory rooted at the document root. */\n  documentRootLocatorFactory(): LocatorFactory;\n\n  /** The root element of this `LocatorFactory` as a `TestElement`. */\n  rootElement: TestElement;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the root element of this `LocatorFactory`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, an error is thrown.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the root element of this `LocatorFactory`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, an error is thrown.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or throws an error.\n   */\n  locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the root element of this `LocatorFactory`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, null is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or returns null.\n   */\n  locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the root element of this `LocatorFactory`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, null is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or null if none is found.\n   */\n  locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for a list of elements with\n   * the given selector under the root element of this `LocatorFactory`. When the resulting locator\n   * function is invoked, a list of matching elements is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a list of\n   * `ComponentHarness`es for all components matching the given harness type under the root element\n   * of this `LocatorFactory`. When the resulting locator function is invoked, a list of\n   * `ComponentHarness`es for the matching components is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and returns a list of `ComponentHarness`es.\n   */\n  locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n}\n\n/**\n * Base class for component harnesses that all component harness authors should extend. This base\n * component harness provides the basic ability to locate element and sub-component harness. It\n * should be inherited when defining user's own harness.\n */\nexport abstract class ComponentHarness {\n  constructor(private readonly locatorFactory: LocatorFactory) {}\n\n  /** Gets a `Promise` for the `TestElement` representing the host element of the component. */\n  async host(): Promise<TestElement> {\n    return this.locatorFactory.rootElement;\n  }\n\n  /**\n   * Gets a `LocatorFactory` for the document root element. This factory can be used to create\n   * locators for elements that a component creates outside of its own root element. (e.g. by\n   * appending to document.body).\n   */\n  protected documentRootLocatorFactory(): LocatorFactory {\n    return this.locatorFactory.documentRootLocatorFactory();\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the host element of this `ComponentHarness`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, an error is thrown.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  protected locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the host element of this `ComponentHarness`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, an error is thrown.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or throws an error.\n   */\n  protected locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n\n  protected locatorFor(arg: any) {\n    return this.locatorFactory.locatorFor(arg);\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the host element of this `ComponentHarness`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, null is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or returns null.\n   */\n  protected locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the host element of this `ComponentHarness`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, null is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or null if none is found.\n   */\n  protected locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n\n  protected locatorForOptional(arg: any) {\n    return this.locatorFactory.locatorForOptional(arg);\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for a list of elements with\n   * the given selector under the host element of this `ComponentHarness`. When the resulting\n   * locator function is invoked, a list of matching elements is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  protected locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a list of\n   * `ComponentHarness`es for all components matching the given harness type under the host element\n   * of this `ComponentHarness`. When the resulting locator function is invoked, a list of\n   * `ComponentHarness`es for the matching components is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and returns a list of `ComponentHarness`es.\n   */\n  protected locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n\n  protected locatorForAll(arg: any) {\n    return this.locatorFactory.locatorForAll(arg);\n  }\n}\n\n/** Constructor for a ComponentHarness subclass. */\nexport interface ComponentHarnessConstructor<T extends ComponentHarness> {\n  new(locatorFactory: LocatorFactory): T;\n\n  /**\n   * `ComponentHarness` subclasses must specify a static `hostSelector` property that is used to\n   * find the host element for the corresponding component. This property should match the selector\n   * for the Angular component.\n   */\n  hostSelector: string;\n}\n\nexport interface BaseHarnessFilters {\n  /** Only find component instances whose host element matches the given selector. */\n  selector?: string;\n  /** Only find component instances that are nested under an element with the given selector. */\n  ancestor?: string;\n}\n\n/**\n * A class used to associate a ComponentHarness class with predicates functions that can be used to\n * filter instances of the class.\n */\nexport class HarnessPredicate<T extends ComponentHarness> {\n  private _predicates: AsyncPredicate<T>[] = [];\n  private _descriptions: string[] = [];\n  private _ancestor: string;\n\n  constructor(public harnessType: ComponentHarnessConstructor<T>, options: BaseHarnessFilters) {\n    this._addBaseOptions(options);\n  }\n\n  /**\n   * Checks if a string matches the given pattern.\n   * @param s The string to check, or a Promise for the string to check.\n   * @param pattern The pattern the string is expected to match. If `pattern` is a string, `s` is\n   *   expected to match exactly. If `pattern` is a regex, a partial match is allowed.\n   * @return A Promise that resolves to whether the string matches the pattern.\n   */\n  static async stringMatches(s: string | Promise<string>, pattern: string | RegExp):\n      Promise<boolean> {\n    s = await s;\n    return typeof pattern === 'string' ? s === pattern : pattern.test(s);\n  }\n\n  /**\n   * Adds a predicate function to be run against candidate harnesses.\n   * @param description A description of this predicate that may be used in error messages.\n   * @param predicate An async predicate function.\n   * @return this (for method chaining).\n   */\n  add(description: string, predicate: AsyncPredicate<T>) {\n    this._descriptions.push(description);\n    this._predicates.push(predicate);\n    return this;\n  }\n\n  /**\n   * Adds a predicate function that depends on an option value to be run against candidate\n   * harnesses. If the option value is undefined, the predicate will be ignored.\n   * @param name The name of the option (may be used in error messages).\n   * @param option The option value.\n   * @param predicate The predicate function to run if the option value is not undefined.\n   * @return this (for method chaining).\n   */\n  addOption<O>(name: string, option: O | undefined, predicate: AsyncOptionPredicate<T, O>) {\n    // Add quotes around strings to differentiate them from other values\n    const value = typeof option === 'string' ? `\"${option}\"` : `${option}`;\n    if (option !== undefined) {\n      this.add(`${name} = ${value}`, item => predicate(item, option));\n    }\n    return this;\n  }\n\n  /**\n   * Filters a list of harnesses on this predicate.\n   * @param harnesses The list of harnesses to filter.\n   * @return A list of harnesses that satisfy this predicate.\n   */\n  async filter(harnesses: T[]): Promise<T[]> {\n    const results = await Promise.all(harnesses.map(h => this.evaluate(h)));\n    return harnesses.filter((_, i) => results[i]);\n  }\n\n  /**\n   * Evaluates whether the given harness satisfies this predicate.\n   * @param harness The harness to check\n   * @return A promise that resolves to true if the harness satisfies this predicate,\n   *   and resolves to false otherwise.\n   */\n  async evaluate(harness: T): Promise<boolean> {\n    const results = await Promise.all(this._predicates.map(p => p(harness)));\n    return results.reduce((combined, current) => combined && current, true);\n  }\n\n  /** Gets a description of this predicate for use in error messages. */\n  getDescription() {\n    return this._descriptions.join(', ');\n  }\n\n  /** Gets the selector used to find candidate elements. */\n  getSelector() {\n    return this._ancestor.split(',')\n        .map(part => `${part.trim()} ${this.harnessType.hostSelector}`.trim())\n        .join(',');\n  }\n\n  /** Adds base options common to all harness types. */\n  private _addBaseOptions(options: BaseHarnessFilters) {\n    this._ancestor = options.ancestor || '';\n    if (this._ancestor) {\n      this._descriptions.push(`has ancestor matching selector \"${this._ancestor}\"`);\n    }\n    const selector = options.selector;\n    if (selector !== undefined) {\n      this.add(`host matches selector \"${selector}\"`, async item => {\n        return (await item.host()).matchesSelector(selector);\n      });\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["tslib_1.__awaiter"],"mappings":"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"}