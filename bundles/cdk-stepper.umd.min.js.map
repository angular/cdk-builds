{"version":3,"sources":["src/cdk/cdk-stepper.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","cdk","stepper","a11y","bidi","coercion","keycodes","common","core","rxjs","operators","this","CdkStepLabel","CdkStepHeader","_elementRef","prototype","focus","nativeElement","decorators","type","Directive","args","selector","host","role","ctorParameters","ElementRef","template","TemplateRef","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","InjectionToken","CdkStep","_stepper","stepperOptions","interacted","interactedStream","EventEmitter","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","Object","defineProperty","get","set","value","coerceBooleanProperty","enumerable","configurable","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","_markAsInteracted","emit","Component","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","CdkStepper","Inject","forwardRef","undefined","Optional","propDecorators","stepLabel","ContentChild","content","ViewChild","static","Input","Output","label","errorMessage","ariaLabel","ariaLabelledby","state","editable","optional","completed","hasError","_dir","_changeDetectorRef","_document","_destroyed","Subject","steps","QueryList","_linear","_selectedIndex","selectionChange","_orientation","_groupId","index","_a","newIndex","coerceNumberProperty","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","_keyManager","withVerticalOrientation","ngAfterContentInit","_this","changes","pipe","startWith","takeUntil","subscribe","filter","notifyOnChanges","ngAfterViewInit","FocusKeyManager","_stepHeader","withWrap","withHomeAndEnd","change","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","Directionality","ChangeDetectorRef","DOCUMENT","ContentChildren","descendants","linear","orientation","CdkStepperNext","_handleClick","[type]","HostListener","CdkStepperModule","CdkStepperPrevious","NgModule","imports","BidiModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/stepper', ['exports', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.stepper = {}), global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.common, global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, a11y, bidi, coercion, keycodes, common, core, rxjs, operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepHeader = /** @class */ (function () {\n        function CdkStepHeader(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        /** Focuses the step header. */\n        CdkStepHeader.prototype.focus = function () {\n            this._elementRef.nativeElement.focus();\n        };\n        return CdkStepHeader;\n    }());\n    CdkStepHeader.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                },] }\n    ];\n    CdkStepHeader.ctorParameters = function () { return [\n        { type: core.ElementRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepLabel = /** @class */ (function () {\n        function CdkStepLabel(/** @docs-private */ template) {\n            this.template = template;\n        }\n        return CdkStepLabel;\n    }());\n    CdkStepLabel.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepLabel]',\n                },] }\n    ];\n    CdkStepLabel.ctorParameters = function () { return [\n        { type: core.TemplateRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Used to generate unique ID for each stepper component. */\n    var nextId = 0;\n    /** Change event emitted on selection changes. */\n    var StepperSelectionEvent = /** @class */ (function () {\n        function StepperSelectionEvent() {\n        }\n        return StepperSelectionEvent;\n    }());\n    /** Enum to represent the different states of the steps. */\n    var STEP_STATE = {\n        NUMBER: 'number',\n        EDIT: 'edit',\n        DONE: 'done',\n        ERROR: 'error'\n    };\n    /** InjectionToken that can be used to specify the global stepper options. */\n    var STEPPER_GLOBAL_OPTIONS = new core.InjectionToken('STEPPER_GLOBAL_OPTIONS');\n    var CdkStep = /** @class */ (function () {\n        function CdkStep(_stepper, stepperOptions) {\n            this._stepper = _stepper;\n            /** Whether user has attempted to move away from the step. */\n            this.interacted = false;\n            /** Emits when the user has attempted to move away from the step. */\n            this.interactedStream = new core.EventEmitter();\n            this._editable = true;\n            this._optional = false;\n            this._completedOverride = null;\n            this._customError = null;\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n            this._showError = !!this._stepperOptions.showError;\n        }\n        Object.defineProperty(CdkStep.prototype, \"editable\", {\n            /** Whether the user can return to this step once it has been marked as completed. */\n            get: function () {\n                return this._editable;\n            },\n            set: function (value) {\n                this._editable = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"optional\", {\n            /** Whether the completion of step is optional. */\n            get: function () {\n                return this._optional;\n            },\n            set: function (value) {\n                this._optional = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"completed\", {\n            /** Whether step is marked as completed. */\n            get: function () {\n                return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n            },\n            set: function (value) {\n                this._completedOverride = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultCompleted = function () {\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n        };\n        Object.defineProperty(CdkStep.prototype, \"hasError\", {\n            /** Whether step has an error. */\n            get: function () {\n                return this._customError == null ? this._getDefaultError() : this._customError;\n            },\n            set: function (value) {\n                this._customError = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultError = function () {\n            return this.stepControl && this.stepControl.invalid && this.interacted;\n        };\n        /** Selects this step component. */\n        CdkStep.prototype.select = function () {\n            this._stepper.selected = this;\n        };\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\n        CdkStep.prototype.reset = function () {\n            this.interacted = false;\n            if (this._completedOverride != null) {\n                this._completedOverride = false;\n            }\n            if (this._customError != null) {\n                this._customError = false;\n            }\n            if (this.stepControl) {\n                this.stepControl.reset();\n            }\n        };\n        CdkStep.prototype.ngOnChanges = function () {\n            // Since basically all inputs of the MatStep get proxied through the view down to the\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n            this._stepper._stateChanged();\n        };\n        CdkStep.prototype._markAsInteracted = function () {\n            if (!this.interacted) {\n                this.interacted = true;\n                this.interactedStream.emit(this);\n            }\n        };\n        return CdkStep;\n    }());\n    CdkStep.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\n                },] }\n    ];\n    CdkStep.ctorParameters = function () { return [\n        { type: CdkStepper, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return CdkStepper; }),] }] },\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n    ]; };\n    CdkStep.propDecorators = {\n        stepLabel: [{ type: core.ContentChild, args: [CdkStepLabel,] }],\n        content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],\n        stepControl: [{ type: core.Input }],\n        interactedStream: [{ type: core.Output, args: ['interacted',] }],\n        label: [{ type: core.Input }],\n        errorMessage: [{ type: core.Input }],\n        ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }],\n        state: [{ type: core.Input }],\n        editable: [{ type: core.Input }],\n        optional: [{ type: core.Input }],\n        completed: [{ type: core.Input }],\n        hasError: [{ type: core.Input }]\n    };\n    var CdkStepper = /** @class */ (function () {\n        function CdkStepper(_dir, _changeDetectorRef, _elementRef, _document) {\n            this._dir = _dir;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new rxjs.Subject();\n            /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n            this.steps = new core.QueryList();\n            this._linear = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the selected step has changed. */\n            this.selectionChange = new core.EventEmitter();\n            /**\n             * @deprecated To be turned into a private property. Use `orientation` instead.\n             * @breaking-change 13.0.0\n             */\n            this._orientation = 'horizontal';\n            this._groupId = nextId++;\n            this._document = _document;\n        }\n        Object.defineProperty(CdkStepper.prototype, \"linear\", {\n            /** Whether the validity of previous steps should be checked or not. */\n            get: function () {\n                return this._linear;\n            },\n            set: function (value) {\n                this._linear = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selectedIndex\", {\n            /** The index of the selected step. */\n            get: function () {\n                return this._selectedIndex;\n            },\n            set: function (index) {\n                var _a;\n                var newIndex = coercion.coerceNumberProperty(index);\n                if (this.steps && this._steps) {\n                    // Ensure that the index can't be out of bounds.\n                    if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                    }\n                    (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n                    if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                        (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                        this._updateSelectedItemIndex(index);\n                    }\n                }\n                else {\n                    this._selectedIndex = newIndex;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selected\", {\n            /** The step that is selected. */\n            get: function () {\n                return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n            },\n            set: function (step) {\n                this.selectedIndex = (step && this.steps) ? this.steps.toArray().indexOf(step) : -1;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"orientation\", {\n            /** Orientation of the stepper. */\n            get: function () { return this._orientation; },\n            set: function (value) {\n                // This is a protected method so that `MatSteppter` can hook into it.\n                this._orientation = value;\n                if (this._keyManager) {\n                    this._keyManager.withVerticalOrientation(value === 'vertical');\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStepper.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._steps.changes\n                .pipe(operators.startWith(this._steps), operators.takeUntil(this._destroyed))\n                .subscribe(function (steps) {\n                _this.steps.reset(steps.filter(function (step) { return step._stepper === _this; }));\n                _this.steps.notifyOnChanges();\n            });\n        };\n        CdkStepper.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            // Note that while the step headers are content children by default, any components that\n            // extend this one might have them as view children. We initialize the keyboard handling in\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\n            this._keyManager = new a11y.FocusKeyManager(this._stepHeader)\n                .withWrap()\n                .withHomeAndEnd()\n                .withVerticalOrientation(this._orientation === 'vertical');\n            (this._dir ? this._dir.change : rxjs.of())\n                .pipe(operators.startWith(this._layoutDirection()), operators.takeUntil(this._destroyed))\n                .subscribe(function (direction) { return _this._keyManager.withHorizontalOrientation(direction); });\n            this._keyManager.updateActiveItem(this._selectedIndex);\n            // No need to `takeUntil` here, because we're the ones destroying `steps`.\n            this.steps.changes.subscribe(function () {\n                if (!_this.selected) {\n                    _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\n                }\n            });\n            // The logic which asserts that the selected index is within bounds doesn't run before the\n            // steps are initialized, because we don't how many steps there are yet so we may have an\n            // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n            if (!this._isValidIndex(this._selectedIndex)) {\n                this._selectedIndex = 0;\n            }\n        };\n        CdkStepper.prototype.ngOnDestroy = function () {\n            this.steps.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        /** Selects and focuses the next step in list. */\n        CdkStepper.prototype.next = function () {\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n        };\n        /** Selects and focuses the previous step in list. */\n        CdkStepper.prototype.previous = function () {\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        };\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n        CdkStepper.prototype.reset = function () {\n            this._updateSelectedItemIndex(0);\n            this.steps.forEach(function (step) { return step.reset(); });\n            this._stateChanged();\n        };\n        /** Returns a unique id for each step label element. */\n        CdkStepper.prototype._getStepLabelId = function (i) {\n            return \"cdk-step-label-\" + this._groupId + \"-\" + i;\n        };\n        /** Returns unique id for each step content element. */\n        CdkStepper.prototype._getStepContentId = function (i) {\n            return \"cdk-step-content-\" + this._groupId + \"-\" + i;\n        };\n        /** Marks the component to be change detected. */\n        CdkStepper.prototype._stateChanged = function () {\n            this._changeDetectorRef.markForCheck();\n        };\n        /** Returns position state of the step with the given index. */\n        CdkStepper.prototype._getAnimationDirection = function (index) {\n            var position = index - this._selectedIndex;\n            if (position < 0) {\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n            }\n            else if (position > 0) {\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n            }\n            return 'current';\n        };\n        /** Returns the type of icon to be displayed. */\n        CdkStepper.prototype._getIndicatorType = function (index, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            var step = this.steps.toArray()[index];\n            var isCurrentStep = this._isCurrentStep(index);\n            return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                this._getGuidelineLogic(step, isCurrentStep, state);\n        };\n        CdkStepper.prototype._getDefaultIndicatorLogic = function (step, isCurrentStep) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (!step.completed || isCurrentStep) {\n                return STEP_STATE.NUMBER;\n            }\n            else {\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n            }\n        };\n        CdkStepper.prototype._getGuidelineLogic = function (step, isCurrentStep, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (step.completed && !isCurrentStep) {\n                return STEP_STATE.DONE;\n            }\n            else if (step.completed && isCurrentStep) {\n                return state;\n            }\n            else if (step.editable && isCurrentStep) {\n                return STEP_STATE.EDIT;\n            }\n            else {\n                return state;\n            }\n        };\n        CdkStepper.prototype._isCurrentStep = function (index) {\n            return this._selectedIndex === index;\n        };\n        /** Returns the index of the currently-focused step header. */\n        CdkStepper.prototype._getFocusIndex = function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n        };\n        CdkStepper.prototype._updateSelectedItemIndex = function (newIndex) {\n            var stepsArray = this.steps.toArray();\n            this.selectionChange.emit({\n                selectedIndex: newIndex,\n                previouslySelectedIndex: this._selectedIndex,\n                selectedStep: stepsArray[newIndex],\n                previouslySelectedStep: stepsArray[this._selectedIndex],\n            });\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\n            // lost when the active step content is hidden. We can't be more granular with the check\n            // (e.g. checking whether focus is inside the active step), because we don't have a\n            // reference to the elements that are rendering out the content.\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                this._keyManager.updateActiveItem(newIndex);\n            this._selectedIndex = newIndex;\n            this._stateChanged();\n        };\n        CdkStepper.prototype._onKeydown = function (event) {\n            var hasModifier = keycodes.hasModifierKey(event);\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            if (manager.activeItemIndex != null && !hasModifier &&\n                (keyCode === keycodes.SPACE || keyCode === keycodes.ENTER)) {\n                this.selectedIndex = manager.activeItemIndex;\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n        };\n        CdkStepper.prototype._anyControlsInvalidOrPending = function (index) {\n            if (this._linear && index >= 0) {\n                return this.steps.toArray().slice(0, index).some(function (step) {\n                    var control = step.stepControl;\n                    var isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                    return isIncomplete && !step.optional && !step._completedOverride;\n                });\n            }\n            return false;\n        };\n        CdkStepper.prototype._layoutDirection = function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n        /** Checks whether the stepper contains the focused element. */\n        CdkStepper.prototype._containsFocus = function () {\n            var stepperElement = this._elementRef.nativeElement;\n            var focusedElement = this._document.activeElement;\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n        };\n        /** Checks whether the passed-in index is a valid step index. */\n        CdkStepper.prototype._isValidIndex = function (index) {\n            return index > -1 && (!this.steps || index < this.steps.length);\n        };\n        return CdkStepper;\n    }());\n    CdkStepper.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                },] }\n    ];\n    CdkStepper.ctorParameters = function () { return [\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n        { type: core.ChangeDetectorRef },\n        { type: core.ElementRef },\n        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n    ]; };\n    CdkStepper.propDecorators = {\n        _steps: [{ type: core.ContentChildren, args: [CdkStep, { descendants: true },] }],\n        _stepHeader: [{ type: core.ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n        linear: [{ type: core.Input }],\n        selectedIndex: [{ type: core.Input }],\n        selected: [{ type: core.Input }],\n        selectionChange: [{ type: core.Output }],\n        orientation: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Button that moves to the next step in a stepper workflow. */\n    var CdkStepperNext = /** @class */ (function () {\n        function CdkStepperNext(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\n            this.type = 'submit';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperNext.prototype._handleClick = function () {\n            this._stepper.next();\n        };\n        return CdkStepperNext;\n    }());\n    CdkStepperNext.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                    }\n                },] }\n    ];\n    CdkStepperNext.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperNext.propDecorators = {\n        type: [{ type: core.Input }],\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n    /** Button that moves to the previous step in a stepper workflow. */\n    var CdkStepperPrevious = /** @class */ (function () {\n        function CdkStepperPrevious(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\n            this.type = 'button';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperPrevious.prototype._handleClick = function () {\n            this._stepper.previous();\n        };\n        return CdkStepperPrevious;\n    }());\n    CdkStepperPrevious.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                    }\n                },] }\n    ];\n    CdkStepperPrevious.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperPrevious.propDecorators = {\n        type: [{ type: core.Input }],\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepperModule = /** @class */ (function () {\n        function CdkStepperModule() {\n        }\n        return CdkStepperModule;\n    }());\n    CdkStepperModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [bidi.BidiModule],\n                    exports: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ]\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkStep = CdkStep;\n    exports.CdkStepHeader = CdkStepHeader;\n    exports.CdkStepLabel = CdkStepLabel;\n    exports.CdkStepper = CdkStepper;\n    exports.CdkStepperModule = CdkStepperModule;\n    exports.CdkStepperNext = CdkStepperNext;\n    exports.CdkStepperPrevious = CdkStepperPrevious;\n    exports.STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n    exports.STEP_STATE = STEP_STATE;\n    exports.StepperSelectionEvent = StepperSelectionEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-stepper.umd.js.map\n"]}