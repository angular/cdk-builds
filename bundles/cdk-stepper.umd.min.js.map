{"version":3,"sources":["src/cdk/cdk-stepper.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","stepper","a11y","bidi","coercion","keycodes","common","core","rxjs","operators","this","CdkStepLabel","CdkStepHeader","_elementRef","prototype","focus","nativeElement","decorators","type","Directive","args","selector","host","role","ctorParameters","ElementRef","template","TemplateRef","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","InjectionToken","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","Object","defineProperty","get","set","value","coerceBooleanProperty","enumerable","configurable","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","Component","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","CdkStepper","Inject","forwardRef","undefined","Optional","propDecorators","stepLabel","ContentChild","content","ViewChild","static","Input","label","errorMessage","ariaLabel","ariaLabelledby","state","editable","optional","completed","hasError","_dir","_changeDetectorRef","_document","_destroyed","Subject","steps","QueryList","_linear","_selectedIndex","selectionChange","EventEmitter","_orientation","_groupId","index","newIndex","coerceNumberProperty","_steps","_isValidIndex","selectedStep","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","_updateOrientation","ngAfterContentInit","_this","changes","pipe","startWith","takeUntil","subscribe","filter","notifyOnChanges","ngAfterViewInit","_keyManager","FocusKeyManager","_stepHeader","withWrap","withHomeAndEnd","withVerticalOrientation","change","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","emit","previouslySelectedIndex","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","Directionality","ChangeDetectorRef","DOCUMENT","ContentChildren","descendants","linear","Output","CdkStepperNext","_handleClick","[type]","HostListener","CdkStepperModule","CdkStepperPrevious","NgModule","imports","BidiModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/stepper', ['exports', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.stepper = {}), global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.common, global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, a11y, bidi, coercion, keycodes, common, core, rxjs, operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepHeader = /** @class */ (function () {\n        function CdkStepHeader(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        /** Focuses the step header. */\n        CdkStepHeader.prototype.focus = function () {\n            this._elementRef.nativeElement.focus();\n        };\n        return CdkStepHeader;\n    }());\n    CdkStepHeader.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                },] }\n    ];\n    CdkStepHeader.ctorParameters = function () { return [\n        { type: core.ElementRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepLabel = /** @class */ (function () {\n        function CdkStepLabel(/** @docs-private */ template) {\n            this.template = template;\n        }\n        return CdkStepLabel;\n    }());\n    CdkStepLabel.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepLabel]',\n                },] }\n    ];\n    CdkStepLabel.ctorParameters = function () { return [\n        { type: core.TemplateRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Used to generate unique ID for each stepper component. */\n    var nextId = 0;\n    /** Change event emitted on selection changes. */\n    var StepperSelectionEvent = /** @class */ (function () {\n        function StepperSelectionEvent() {\n        }\n        return StepperSelectionEvent;\n    }());\n    /** Enum to represent the different states of the steps. */\n    var STEP_STATE = {\n        NUMBER: 'number',\n        EDIT: 'edit',\n        DONE: 'done',\n        ERROR: 'error'\n    };\n    /** InjectionToken that can be used to specify the global stepper options. */\n    var STEPPER_GLOBAL_OPTIONS = new core.InjectionToken('STEPPER_GLOBAL_OPTIONS');\n    var CdkStep = /** @class */ (function () {\n        function CdkStep(_stepper, stepperOptions) {\n            this._stepper = _stepper;\n            /** Whether user has seen the expanded step content or not. */\n            this.interacted = false;\n            this._editable = true;\n            this._optional = false;\n            this._completedOverride = null;\n            this._customError = null;\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n            this._showError = !!this._stepperOptions.showError;\n        }\n        Object.defineProperty(CdkStep.prototype, \"editable\", {\n            /** Whether the user can return to this step once it has been marked as completed. */\n            get: function () {\n                return this._editable;\n            },\n            set: function (value) {\n                this._editable = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"optional\", {\n            /** Whether the completion of step is optional. */\n            get: function () {\n                return this._optional;\n            },\n            set: function (value) {\n                this._optional = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"completed\", {\n            /** Whether step is marked as completed. */\n            get: function () {\n                return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n            },\n            set: function (value) {\n                this._completedOverride = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultCompleted = function () {\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n        };\n        Object.defineProperty(CdkStep.prototype, \"hasError\", {\n            /** Whether step has an error. */\n            get: function () {\n                return this._customError == null ? this._getDefaultError() : this._customError;\n            },\n            set: function (value) {\n                this._customError = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultError = function () {\n            return this.stepControl && this.stepControl.invalid && this.interacted;\n        };\n        /** Selects this step component. */\n        CdkStep.prototype.select = function () {\n            this._stepper.selected = this;\n        };\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\n        CdkStep.prototype.reset = function () {\n            this.interacted = false;\n            if (this._completedOverride != null) {\n                this._completedOverride = false;\n            }\n            if (this._customError != null) {\n                this._customError = false;\n            }\n            if (this.stepControl) {\n                this.stepControl.reset();\n            }\n        };\n        CdkStep.prototype.ngOnChanges = function () {\n            // Since basically all inputs of the MatStep get proxied through the view down to the\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n            this._stepper._stateChanged();\n        };\n        return CdkStep;\n    }());\n    CdkStep.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\n                },] }\n    ];\n    CdkStep.ctorParameters = function () { return [\n        { type: CdkStepper, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return CdkStepper; }),] }] },\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n    ]; };\n    CdkStep.propDecorators = {\n        stepLabel: [{ type: core.ContentChild, args: [CdkStepLabel,] }],\n        content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],\n        stepControl: [{ type: core.Input }],\n        label: [{ type: core.Input }],\n        errorMessage: [{ type: core.Input }],\n        ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }],\n        state: [{ type: core.Input }],\n        editable: [{ type: core.Input }],\n        optional: [{ type: core.Input }],\n        completed: [{ type: core.Input }],\n        hasError: [{ type: core.Input }]\n    };\n    var CdkStepper = /** @class */ (function () {\n        function CdkStepper(_dir, _changeDetectorRef, _elementRef, _document) {\n            this._dir = _dir;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new rxjs.Subject();\n            /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n            this.steps = new core.QueryList();\n            this._linear = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the selected step has changed. */\n            this.selectionChange = new core.EventEmitter();\n            /**\n             * @deprecated To be turned into a private property. Use `orientation` instead.\n             * @breaking-change 13.0.0\n             */\n            this._orientation = 'horizontal';\n            this._groupId = nextId++;\n            this._document = _document;\n        }\n        Object.defineProperty(CdkStepper.prototype, \"linear\", {\n            /** Whether the validity of previous steps should be checked or not. */\n            get: function () {\n                return this._linear;\n            },\n            set: function (value) {\n                this._linear = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selectedIndex\", {\n            /** The index of the selected step. */\n            get: function () {\n                return this._selectedIndex;\n            },\n            set: function (index) {\n                var newIndex = coercion.coerceNumberProperty(index);\n                if (this.steps && this._steps) {\n                    // Ensure that the index can't be out of bounds.\n                    if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                    }\n                    var selectedStep = this.selected;\n                    if (selectedStep) {\n                        // TODO: this should really be called something like `visited` instead. Just because\n                        // the user has seen the step doesn't guarantee that they've interacted with it.\n                        selectedStep.interacted = true;\n                    }\n                    if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                        (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                        this._updateSelectedItemIndex(index);\n                    }\n                }\n                else {\n                    this._selectedIndex = newIndex;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selected\", {\n            /** The step that is selected. */\n            get: function () {\n                return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n            },\n            set: function (step) {\n                this.selectedIndex = (step && this.steps) ? this.steps.toArray().indexOf(step) : -1;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"orientation\", {\n            // Note that this isn't an `Input` so it doesn't bleed into the Material stepper.\n            /** Orientation of the stepper. */\n            get: function () { return this._orientation; },\n            set: function (value) {\n                this._updateOrientation(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkStepper.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._steps.changes\n                .pipe(operators.startWith(this._steps), operators.takeUntil(this._destroyed))\n                .subscribe(function (steps) {\n                _this.steps.reset(steps.filter(function (step) { return step._stepper === _this; }));\n                _this.steps.notifyOnChanges();\n            });\n        };\n        CdkStepper.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            // Note that while the step headers are content children by default, any components that\n            // extend this one might have them as view children. We initialize the keyboard handling in\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\n            this._keyManager = new a11y.FocusKeyManager(this._stepHeader)\n                .withWrap()\n                .withHomeAndEnd()\n                .withVerticalOrientation(this._orientation === 'vertical');\n            (this._dir ? this._dir.change : rxjs.of())\n                .pipe(operators.startWith(this._layoutDirection()), operators.takeUntil(this._destroyed))\n                .subscribe(function (direction) { return _this._keyManager.withHorizontalOrientation(direction); });\n            this._keyManager.updateActiveItem(this._selectedIndex);\n            // No need to `takeUntil` here, because we're the ones destroying `steps`.\n            this.steps.changes.subscribe(function () {\n                if (!_this.selected) {\n                    _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\n                }\n            });\n            // The logic which asserts that the selected index is within bounds doesn't run before the\n            // steps are initialized, because we don't how many steps there are yet so we may have an\n            // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n            if (!this._isValidIndex(this._selectedIndex)) {\n                this._selectedIndex = 0;\n            }\n        };\n        CdkStepper.prototype.ngOnDestroy = function () {\n            this.steps.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        /** Selects and focuses the next step in list. */\n        CdkStepper.prototype.next = function () {\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n        };\n        /** Selects and focuses the previous step in list. */\n        CdkStepper.prototype.previous = function () {\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        };\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n        CdkStepper.prototype.reset = function () {\n            this._updateSelectedItemIndex(0);\n            this.steps.forEach(function (step) { return step.reset(); });\n            this._stateChanged();\n        };\n        /** Returns a unique id for each step label element. */\n        CdkStepper.prototype._getStepLabelId = function (i) {\n            return \"cdk-step-label-\" + this._groupId + \"-\" + i;\n        };\n        /** Returns unique id for each step content element. */\n        CdkStepper.prototype._getStepContentId = function (i) {\n            return \"cdk-step-content-\" + this._groupId + \"-\" + i;\n        };\n        /** Marks the component to be change detected. */\n        CdkStepper.prototype._stateChanged = function () {\n            this._changeDetectorRef.markForCheck();\n        };\n        /** Returns position state of the step with the given index. */\n        CdkStepper.prototype._getAnimationDirection = function (index) {\n            var position = index - this._selectedIndex;\n            if (position < 0) {\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n            }\n            else if (position > 0) {\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n            }\n            return 'current';\n        };\n        /** Returns the type of icon to be displayed. */\n        CdkStepper.prototype._getIndicatorType = function (index, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            var step = this.steps.toArray()[index];\n            var isCurrentStep = this._isCurrentStep(index);\n            return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                this._getGuidelineLogic(step, isCurrentStep, state);\n        };\n        /** Updates the stepper orientation. */\n        CdkStepper.prototype._updateOrientation = function (value) {\n            // This is a protected method so that `MatSteppter` can hook into it.\n            this._orientation = value;\n            if (this._keyManager) {\n                this._keyManager.withVerticalOrientation(value === 'vertical');\n            }\n        };\n        CdkStepper.prototype._getDefaultIndicatorLogic = function (step, isCurrentStep) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (!step.completed || isCurrentStep) {\n                return STEP_STATE.NUMBER;\n            }\n            else {\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n            }\n        };\n        CdkStepper.prototype._getGuidelineLogic = function (step, isCurrentStep, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (step.completed && !isCurrentStep) {\n                return STEP_STATE.DONE;\n            }\n            else if (step.completed && isCurrentStep) {\n                return state;\n            }\n            else if (step.editable && isCurrentStep) {\n                return STEP_STATE.EDIT;\n            }\n            else {\n                return state;\n            }\n        };\n        CdkStepper.prototype._isCurrentStep = function (index) {\n            return this._selectedIndex === index;\n        };\n        /** Returns the index of the currently-focused step header. */\n        CdkStepper.prototype._getFocusIndex = function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n        };\n        CdkStepper.prototype._updateSelectedItemIndex = function (newIndex) {\n            var stepsArray = this.steps.toArray();\n            this.selectionChange.emit({\n                selectedIndex: newIndex,\n                previouslySelectedIndex: this._selectedIndex,\n                selectedStep: stepsArray[newIndex],\n                previouslySelectedStep: stepsArray[this._selectedIndex],\n            });\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\n            // lost when the active step content is hidden. We can't be more granular with the check\n            // (e.g. checking whether focus is inside the active step), because we don't have a\n            // reference to the elements that are rendering out the content.\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                this._keyManager.updateActiveItem(newIndex);\n            this._selectedIndex = newIndex;\n            this._stateChanged();\n        };\n        CdkStepper.prototype._onKeydown = function (event) {\n            var hasModifier = keycodes.hasModifierKey(event);\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            if (manager.activeItemIndex != null && !hasModifier &&\n                (keyCode === keycodes.SPACE || keyCode === keycodes.ENTER)) {\n                this.selectedIndex = manager.activeItemIndex;\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n        };\n        CdkStepper.prototype._anyControlsInvalidOrPending = function (index) {\n            if (this._linear && index >= 0) {\n                return this.steps.toArray().slice(0, index).some(function (step) {\n                    var control = step.stepControl;\n                    var isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                    return isIncomplete && !step.optional && !step._completedOverride;\n                });\n            }\n            return false;\n        };\n        CdkStepper.prototype._layoutDirection = function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n        /** Checks whether the stepper contains the focused element. */\n        CdkStepper.prototype._containsFocus = function () {\n            var stepperElement = this._elementRef.nativeElement;\n            var focusedElement = this._document.activeElement;\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n        };\n        /** Checks whether the passed-in index is a valid step index. */\n        CdkStepper.prototype._isValidIndex = function (index) {\n            return index > -1 && (!this.steps || index < this.steps.length);\n        };\n        return CdkStepper;\n    }());\n    CdkStepper.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                },] }\n    ];\n    CdkStepper.ctorParameters = function () { return [\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n        { type: core.ChangeDetectorRef },\n        { type: core.ElementRef },\n        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n    ]; };\n    CdkStepper.propDecorators = {\n        _steps: [{ type: core.ContentChildren, args: [CdkStep, { descendants: true },] }],\n        _stepHeader: [{ type: core.ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n        linear: [{ type: core.Input }],\n        selectedIndex: [{ type: core.Input }],\n        selected: [{ type: core.Input }],\n        selectionChange: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Button that moves to the next step in a stepper workflow. */\n    var CdkStepperNext = /** @class */ (function () {\n        function CdkStepperNext(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\n            this.type = 'submit';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperNext.prototype._handleClick = function () {\n            this._stepper.next();\n        };\n        return CdkStepperNext;\n    }());\n    CdkStepperNext.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                    }\n                },] }\n    ];\n    CdkStepperNext.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperNext.propDecorators = {\n        type: [{ type: core.Input }],\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n    /** Button that moves to the previous step in a stepper workflow. */\n    var CdkStepperPrevious = /** @class */ (function () {\n        function CdkStepperPrevious(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\n            this.type = 'button';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperPrevious.prototype._handleClick = function () {\n            this._stepper.previous();\n        };\n        return CdkStepperPrevious;\n    }());\n    CdkStepperPrevious.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                    }\n                },] }\n    ];\n    CdkStepperPrevious.ctorParameters = function () { return [\n        { type: CdkStepper }\n    ]; };\n    CdkStepperPrevious.propDecorators = {\n        type: [{ type: core.Input }],\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepperModule = /** @class */ (function () {\n        function CdkStepperModule() {\n        }\n        return CdkStepperModule;\n    }());\n    CdkStepperModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [bidi.BidiModule],\n                    exports: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ]\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkStep = CdkStep;\n    exports.CdkStepHeader = CdkStepHeader;\n    exports.CdkStepLabel = CdkStepLabel;\n    exports.CdkStepper = CdkStepper;\n    exports.CdkStepperModule = CdkStepperModule;\n    exports.CdkStepperNext = CdkStepperNext;\n    exports.CdkStepperPrevious = CdkStepperPrevious;\n    exports.STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n    exports.STEP_STATE = STEP_STATE;\n    exports.StepperSelectionEvent = StepperSelectionEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-stepper.umd.js.map\n"]}