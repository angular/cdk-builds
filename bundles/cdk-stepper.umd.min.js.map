{"version":3,"sources":["src/cdk/cdk-stepper.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","stepper","a11y","bidi","coercion","keycodes","core","common","rxjs","operators","this","CdkStepLabel","template","decorators","type","Directive","args","selector","ctorParameters","TemplateRef","CdkStepHeader","_elementRef","prototype","focus","nativeElement","host","role","ElementRef","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","InjectionToken","MAT_STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_customCompleted","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","Object","defineProperty","get","set","value","coerceBooleanProperty","enumerable","configurable","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","Component","moduleId","id","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","CdkStepper","Inject","forwardRef","undefined","Optional","propDecorators","stepLabel","ContentChild","static","content","ViewChild","Input","label","errorMessage","ariaLabel","ariaLabelledby","state","editable","optional","completed","hasError","_dir","_changeDetectorRef","_document","_destroyed","Subject","_linear","_selectedIndex","selectionChange","EventEmitter","_orientation","_groupId","_steps","index","newIndex","coerceNumberProperty","steps","length","Error","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","ngAfterViewInit","_this","_keyManager","FocusKeyManager","_stepHeader","withWrap","withVerticalOrientation","change","of","pipe","startWith","_layoutDirection","takeUntil","subscribe","direction","withHorizontalOrientation","updateActiveItemIndex","changes","Math","max","ngOnDestroy","next","complete","min","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","onKeydown","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","Directionality","ChangeDetectorRef","DOCUMENT","ContentChildren","linear","Output","CdkStepperNext","_handleClick","[type]","HostListener","CdkStepperPrevious","CdkStepperModule","NgModule","imports","BidiModule","CommonModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/core'), require('@angular/common'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/stepper', ['exports', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/core', '@angular/common', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.stepper = {}), global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.core, global.ng.common, global.rxjs, global.rxjs.operators));\n}(this, function (exports, a11y, bidi, coercion, keycodes, core, common, rxjs, operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepLabel = /** @class */ (function () {\n        function CdkStepLabel(/** @docs-private */ template) {\n            this.template = template;\n        }\n        CdkStepLabel.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkStepLabel]',\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkStepLabel.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return CdkStepLabel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepHeader = /** @class */ (function () {\n        function CdkStepHeader(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        /** Focuses the step header. */\n        CdkStepHeader.prototype.focus = function () {\n            this._elementRef.nativeElement.focus();\n        };\n        CdkStepHeader.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkStepHeader]',\n                        host: {\n                            'role': 'tab',\n                        },\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkStepHeader.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        return CdkStepHeader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Used to generate unique ID for each stepper component. */\n    var nextId = 0;\n    /** Change event emitted on selection changes. */\n    var StepperSelectionEvent = /** @class */ (function () {\n        function StepperSelectionEvent() {\n        }\n        return StepperSelectionEvent;\n    }());\n    /** Enum to represent the different states of the steps. */\n    var STEP_STATE = {\n        NUMBER: 'number',\n        EDIT: 'edit',\n        DONE: 'done',\n        ERROR: 'error'\n    };\n    /** InjectionToken that can be used to specify the global stepper options. */\n    var STEPPER_GLOBAL_OPTIONS = new core.InjectionToken('STEPPER_GLOBAL_OPTIONS');\n    /**\n     * InjectionToken that can be used to specify the global stepper options.\n     * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n     * @breaking-change 8.0.0.\n     */\n    var MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n    var CdkStep = /** @class */ (function () {\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        function CdkStep(_stepper, stepperOptions) {\n            this._stepper = _stepper;\n            /** Whether user has seen the expanded step content or not. */\n            this.interacted = false;\n            this._editable = true;\n            this._optional = false;\n            this._customCompleted = null;\n            this._customError = null;\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n            this._showError = !!this._stepperOptions.showError;\n        }\n        Object.defineProperty(CdkStep.prototype, \"editable\", {\n            /** Whether the user can return to this step once it has been marked as completed. */\n            get: function () { return this._editable; },\n            set: function (value) {\n                this._editable = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"optional\", {\n            /** Whether the completion of step is optional. */\n            get: function () { return this._optional; },\n            set: function (value) {\n                this._optional = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CdkStep.prototype, \"completed\", {\n            /** Whether step is marked as completed. */\n            get: function () {\n                return this._customCompleted == null ? this._getDefaultCompleted() : this._customCompleted;\n            },\n            set: function (value) {\n                this._customCompleted = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultCompleted = function () {\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n        };\n        Object.defineProperty(CdkStep.prototype, \"hasError\", {\n            /** Whether step has an error. */\n            get: function () {\n                return this._customError == null ? this._getDefaultError() : this._customError;\n            },\n            set: function (value) {\n                this._customError = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CdkStep.prototype._getDefaultError = function () {\n            return this.stepControl && this.stepControl.invalid && this.interacted;\n        };\n        /** Selects this step component. */\n        CdkStep.prototype.select = function () {\n            this._stepper.selected = this;\n        };\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\n        CdkStep.prototype.reset = function () {\n            this.interacted = false;\n            if (this._customCompleted != null) {\n                this._customCompleted = false;\n            }\n            if (this._customError != null) {\n                this._customError = false;\n            }\n            if (this.stepControl) {\n                this.stepControl.reset();\n            }\n        };\n        CdkStep.prototype.ngOnChanges = function () {\n            // Since basically all inputs of the MatStep get proxied through the view down to the\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n            this._stepper._stateChanged();\n        };\n        CdkStep.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'cdk-step',\n                        exportAs: 'cdkStep',\n                        template: '<ng-template><ng-content></ng-content></ng-template>',\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        CdkStep.ctorParameters = function () { return [\n            { type: CdkStepper, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return CdkStepper; }),] }] },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n        ]; };\n        CdkStep.propDecorators = {\n            stepLabel: [{ type: core.ContentChild, args: [CdkStepLabel, { static: false },] }],\n            content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],\n            stepControl: [{ type: core.Input }],\n            label: [{ type: core.Input }],\n            errorMessage: [{ type: core.Input }],\n            ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\n            ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }],\n            state: [{ type: core.Input }],\n            editable: [{ type: core.Input }],\n            optional: [{ type: core.Input }],\n            completed: [{ type: core.Input }],\n            hasError: [{ type: core.Input }]\n        };\n        return CdkStep;\n    }());\n    var CdkStepper = /** @class */ (function () {\n        function CdkStepper(_dir, _changeDetectorRef, \n        // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n        _elementRef, _document) {\n            this._dir = _dir;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new rxjs.Subject();\n            this._linear = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the selected step has changed. */\n            this.selectionChange = new core.EventEmitter();\n            this._orientation = 'horizontal';\n            this._groupId = nextId++;\n            this._document = _document;\n        }\n        Object.defineProperty(CdkStepper.prototype, \"steps\", {\n            /** The list of step components that the stepper is holding. */\n            get: function () {\n                return this._steps;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"linear\", {\n            /** Whether the validity of previous steps should be checked or not. */\n            get: function () { return this._linear; },\n            set: function (value) { this._linear = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selectedIndex\", {\n            /** The index of the selected step. */\n            get: function () { return this._selectedIndex; },\n            set: function (index) {\n                var newIndex = coercion.coerceNumberProperty(index);\n                if (this.steps) {\n                    // Ensure that the index can't be out of bounds.\n                    if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                    }\n                    if (this._selectedIndex != newIndex &&\n                        !this._anyControlsInvalidOrPending(newIndex) &&\n                        (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                        this._updateSelectedItemIndex(index);\n                    }\n                }\n                else {\n                    this._selectedIndex = newIndex;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(CdkStepper.prototype, \"selected\", {\n            /** The step that is selected. */\n            get: function () {\n                // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n                return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n            },\n            set: function (step) {\n                this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CdkStepper.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            // Note that while the step headers are content children by default, any components that\n            // extend this one might have them as view chidren. We initialize the keyboard handling in\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\n            this._keyManager = new a11y.FocusKeyManager(this._stepHeader)\n                .withWrap()\n                .withVerticalOrientation(this._orientation === 'vertical');\n            (this._dir ? this._dir.change : rxjs.of())\n                .pipe(operators.startWith(this._layoutDirection()), operators.takeUntil(this._destroyed))\n                .subscribe(function (direction) { return _this._keyManager.withHorizontalOrientation(direction); });\n            this._keyManager.updateActiveItemIndex(this._selectedIndex);\n            this.steps.changes.pipe(operators.takeUntil(this._destroyed)).subscribe(function () {\n                if (!_this.selected) {\n                    _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\n                }\n            });\n        };\n        CdkStepper.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        /** Selects and focuses the next step in list. */\n        CdkStepper.prototype.next = function () {\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n        };\n        /** Selects and focuses the previous step in list. */\n        CdkStepper.prototype.previous = function () {\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        };\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n        CdkStepper.prototype.reset = function () {\n            this._updateSelectedItemIndex(0);\n            this.steps.forEach(function (step) { return step.reset(); });\n            this._stateChanged();\n        };\n        /** Returns a unique id for each step label element. */\n        CdkStepper.prototype._getStepLabelId = function (i) {\n            return \"cdk-step-label-\" + this._groupId + \"-\" + i;\n        };\n        /** Returns unique id for each step content element. */\n        CdkStepper.prototype._getStepContentId = function (i) {\n            return \"cdk-step-content-\" + this._groupId + \"-\" + i;\n        };\n        /** Marks the component to be change detected. */\n        CdkStepper.prototype._stateChanged = function () {\n            this._changeDetectorRef.markForCheck();\n        };\n        /** Returns position state of the step with the given index. */\n        CdkStepper.prototype._getAnimationDirection = function (index) {\n            var position = index - this._selectedIndex;\n            if (position < 0) {\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n            }\n            else if (position > 0) {\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n            }\n            return 'current';\n        };\n        /** Returns the type of icon to be displayed. */\n        CdkStepper.prototype._getIndicatorType = function (index, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            var step = this.steps.toArray()[index];\n            var isCurrentStep = this._isCurrentStep(index);\n            return step._displayDefaultIndicatorType\n                ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n                : this._getGuidelineLogic(step, isCurrentStep, state);\n        };\n        CdkStepper.prototype._getDefaultIndicatorLogic = function (step, isCurrentStep) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (!step.completed || isCurrentStep) {\n                return STEP_STATE.NUMBER;\n            }\n            else {\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n            }\n        };\n        CdkStepper.prototype._getGuidelineLogic = function (step, isCurrentStep, state) {\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (step.completed && !isCurrentStep) {\n                return STEP_STATE.DONE;\n            }\n            else if (step.completed && isCurrentStep) {\n                return state;\n            }\n            else if (step.editable && isCurrentStep) {\n                return STEP_STATE.EDIT;\n            }\n            else {\n                return state;\n            }\n        };\n        CdkStepper.prototype._isCurrentStep = function (index) {\n            return this._selectedIndex === index;\n        };\n        /** Returns the index of the currently-focused step header. */\n        CdkStepper.prototype._getFocusIndex = function () {\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n        };\n        CdkStepper.prototype._updateSelectedItemIndex = function (newIndex) {\n            var stepsArray = this.steps.toArray();\n            this.selectionChange.emit({\n                selectedIndex: newIndex,\n                previouslySelectedIndex: this._selectedIndex,\n                selectedStep: stepsArray[newIndex],\n                previouslySelectedStep: stepsArray[this._selectedIndex],\n            });\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\n            // lost when the active step content is hidden. We can't be more granular with the check\n            // (e.g. checking whether focus is inside the active step), because we don't have a\n            // reference to the elements that are rendering out the content.\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                this._keyManager.updateActiveItemIndex(newIndex);\n            this._selectedIndex = newIndex;\n            this._stateChanged();\n        };\n        CdkStepper.prototype._onKeydown = function (event) {\n            var hasModifier = keycodes.hasModifierKey(event);\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            if (manager.activeItemIndex != null && !hasModifier &&\n                (keyCode === keycodes.SPACE || keyCode === keycodes.ENTER)) {\n                this.selectedIndex = manager.activeItemIndex;\n                event.preventDefault();\n            }\n            else if (keyCode === keycodes.HOME) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (keyCode === keycodes.END) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n        };\n        CdkStepper.prototype._anyControlsInvalidOrPending = function (index) {\n            var steps = this.steps.toArray();\n            steps[this._selectedIndex].interacted = true;\n            if (this._linear && index >= 0) {\n                return steps.slice(0, index).some(function (step) {\n                    var control = step.stepControl;\n                    var isIncomplete = control ?\n                        (control.invalid || control.pending || !step.interacted) :\n                        !step.completed;\n                    return isIncomplete && !step.optional;\n                });\n            }\n            return false;\n        };\n        CdkStepper.prototype._layoutDirection = function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n        /** Checks whether the stepper contains the focused element. */\n        CdkStepper.prototype._containsFocus = function () {\n            if (!this._document || !this._elementRef) {\n                return false;\n            }\n            var stepperElement = this._elementRef.nativeElement;\n            var focusedElement = this._document.activeElement;\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n        };\n        CdkStepper.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkStepper]',\n                        exportAs: 'cdkStepper',\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkStepper.ctorParameters = function () { return [\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.ChangeDetectorRef },\n            { type: core.ElementRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        CdkStepper.propDecorators = {\n            _steps: [{ type: core.ContentChildren, args: [CdkStep,] }],\n            _stepHeader: [{ type: core.ContentChildren, args: [CdkStepHeader,] }],\n            linear: [{ type: core.Input }],\n            selectedIndex: [{ type: core.Input }],\n            selected: [{ type: core.Input }],\n            selectionChange: [{ type: core.Output }]\n        };\n        return CdkStepper;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Button that moves to the next step in a stepper workflow. */\n    var CdkStepperNext = /** @class */ (function () {\n        function CdkStepperNext(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\n            this.type = 'submit';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperNext.prototype._handleClick = function () {\n            this._stepper.next();\n        };\n        CdkStepperNext.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'button[cdkStepperNext]',\n                        host: {\n                            '[type]': 'type',\n                        }\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkStepperNext.ctorParameters = function () { return [\n            { type: CdkStepper }\n        ]; };\n        CdkStepperNext.propDecorators = {\n            type: [{ type: core.Input }],\n            _handleClick: [{ type: core.HostListener, args: ['click',] }]\n        };\n        return CdkStepperNext;\n    }());\n    /** Button that moves to the previous step in a stepper workflow. */\n    var CdkStepperPrevious = /** @class */ (function () {\n        function CdkStepperPrevious(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\n            this.type = 'button';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        CdkStepperPrevious.prototype._handleClick = function () {\n            this._stepper.previous();\n        };\n        CdkStepperPrevious.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'button[cdkStepperPrevious]',\n                        host: {\n                            '[type]': 'type',\n                        }\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkStepperPrevious.ctorParameters = function () { return [\n            { type: CdkStepper }\n        ]; };\n        CdkStepperPrevious.propDecorators = {\n            type: [{ type: core.Input }],\n            _handleClick: [{ type: core.HostListener, args: ['click',] }]\n        };\n        return CdkStepperPrevious;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkStepperModule = /** @class */ (function () {\n        function CdkStepperModule() {\n        }\n        CdkStepperModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [bidi.BidiModule, common.CommonModule],\n                        exports: [\n                            CdkStep,\n                            CdkStepper,\n                            CdkStepHeader,\n                            CdkStepLabel,\n                            CdkStepperNext,\n                            CdkStepperPrevious,\n                        ],\n                        declarations: [\n                            CdkStep,\n                            CdkStepper,\n                            CdkStepHeader,\n                            CdkStepLabel,\n                            CdkStepperNext,\n                            CdkStepperPrevious,\n                        ]\n                    },] }\n        ];\n        return CdkStepperModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.StepperSelectionEvent = StepperSelectionEvent;\n    exports.STEP_STATE = STEP_STATE;\n    exports.STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n    exports.MAT_STEPPER_GLOBAL_OPTIONS = MAT_STEPPER_GLOBAL_OPTIONS;\n    exports.CdkStep = CdkStep;\n    exports.CdkStepper = CdkStepper;\n    exports.CdkStepLabel = CdkStepLabel;\n    exports.CdkStepperNext = CdkStepperNext;\n    exports.CdkStepperPrevious = CdkStepperPrevious;\n    exports.CdkStepperModule = CdkStepperModule;\n    exports.CdkStepHeader = CdkStepHeader;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=cdk-stepper.umd.js.map\n"]}