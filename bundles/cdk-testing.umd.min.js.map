{"version":3,"file":"cdk-testing.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk/testing/event-objects.ts","../../src/cdk/testing/dispatch-events.ts","../../src/cdk/testing/element-focus.ts","../../src/cdk/testing/harness-environment.ts","../../src/cdk/testing/type-in-element.ts","../../src/cdk/testing/component-harness.ts","../../src/cdk/testing/test-element.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Modifier keys that may be held while typing. */\nexport interface ModifierKeys {\n  control?: boolean;\n  alt?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\n/**\n * Creates a browser MouseEvent with the specified options.\n * @docs-private\n */\nexport function createMouseEvent(type: string, x = 0, y = 0, button = 0) {\n  const event = document.createEvent('MouseEvent');\n  const originalPreventDefault = event.preventDefault;\n\n  event.initMouseEvent(type,\n    true, /* canBubble */\n    true, /* cancelable */\n    window, /* view */\n    0, /* detail */\n    x, /* screenX */\n    y, /* screenY */\n    x, /* clientX */\n    y, /* clientY */\n    false, /* ctrlKey */\n    false, /* altKey */\n    false, /* shiftKey */\n    false, /* metaKey */\n    button, /* button */\n    null /* relatedTarget */);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', {get: () => 1});\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n * @docs-private\n */\nexport function createTouchEvent(type: string, pageX = 0, pageY = 0) {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = document.createEvent('UIEvent');\n  const touchDetails = {pageX, pageY};\n\n  event.initUIEvent(type, true, true, window, 0);\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: {value: [touchDetails]},\n    targetTouches: {value: [touchDetails]},\n    changedTouches: {value: [touchDetails]}\n  });\n\n  return event;\n}\n\n/**\n * Dispatches a keydown event from an element.\n * @docs-private\n */\nexport function createKeyboardEvent(type: string, keyCode: number = 0, key: string = '',\n                                    target?: Element, modifiers: ModifierKeys = {}) {\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift,\n        modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n        modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n    event.initKeyboardEvent(type,\n        true, /* canBubble */\n        true, /* cancelable */\n        window, /* view */\n        0, /* char */\n        key, /* key */\n        0, /* location */\n        modifiersStr, /* modifiersList */\n        false /* repeat */);\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    ctrlKey: { get: () => !!modifiers.control },\n    altKey: { get: () => !!modifiers.alt },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a fake event object with any desired event type.\n * @docs-private\n */\nexport function createFakeEvent(type: string, canBubble = false, cancelable = true) {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createTouchEvent,\n  ModifierKeys\n} from './event-objects';\n\n/**\n * Utility to dispatch any event on a Node.\n * @docs-private\n */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @docs-private\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key code.\n * @docs-private\n */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode?: number, key?: string,\n                                      target?: Element, modifiers?: ModifierKeys): KeyboardEvent {\n  return dispatchEvent(node,\n      createKeyboardEvent(type, keyCode, key, target, modifiers)) as KeyboardEvent;\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\n  event = createMouseEvent(type, x, y)): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent} from './dispatch-events';\n\nfunction triggerFocusChange(element: HTMLElement, event: 'focus' | 'blur') {\n  let eventFired = false;\n  const handler = () => eventFired = true;\n  element.addEventListener(event, handler);\n  element[event]();\n  element.removeEventListener(event, handler);\n  if (!eventFired) {\n    dispatchFakeEvent(element, event);\n  }\n}\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n * @docs-private\n */\nexport function patchElementFocus(element: HTMLElement) {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n\n/** @docs-private */\nexport function triggerFocus(element: HTMLElement) {\n  triggerFocusChange(element, 'focus');\n}\n\n/** @docs-private */\nexport function triggerBlur(element: HTMLElement) {\n  triggerFocusChange(element, 'blur');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AsyncFactoryFn,\n  ComponentHarness,\n  ComponentHarnessConstructor,\n  HarnessLoader,\n  HarnessPredicate,\n  LocatorFactory\n} from './component-harness';\nimport {TestElement} from './test-element';\n\n/**\n * Base harness environment class that can be extended to allow `ComponentHarness`es to be used in\n * different test environments (e.g. testbed, protractor, etc.). This class implements the\n * functionality of both a `HarnessLoader` and `LocatorFactory`. This class is generic on the raw\n * element type, `E`, used by the particular test environment.\n */\nexport abstract class HarnessEnvironment<E> implements HarnessLoader, LocatorFactory {\n  // Implemented as part of the `LocatorFactory` interface.\n  rootElement: TestElement;\n\n  protected constructor(protected rawRootElement: E) {\n    this.rootElement = this.createTestElement(rawRootElement);\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  documentRootLocatorFactory(): LocatorFactory {\n    return this.createEnvironment(this.getDocumentRoot());\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n  locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n  locatorFor<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        return this.createTestElement(await this._assertElementFound(arg));\n      } else {\n        return this._assertHarnessFound(arg);\n      }\n    };\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n  locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n  locatorForOptional<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        const element = (await this.getAllRawElements(arg))[0];\n        return element ? this.createTestElement(element) : null;\n      } else {\n        const candidates = await this._getAllHarnesses(arg);\n        return candidates[0] || null;\n      }\n    };\n  }\n\n  // Implemented as part of the `LocatorFactory` interface.\n  locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n  locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n  locatorForAll<T extends ComponentHarness>(\n      arg: string | ComponentHarnessConstructor<T> | HarnessPredicate<T>) {\n    return async () => {\n      if (typeof arg === 'string') {\n        return (await this.getAllRawElements(arg)).map(e => this.createTestElement(e));\n      } else {\n        return this._getAllHarnesses(arg);\n      }\n    };\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  getHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T> {\n    return this.locatorFor(harnessType)();\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]> {\n    return this.locatorForAll(harnessType)();\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  async getChildLoader(selector: string): Promise<HarnessLoader> {\n    return this.createEnvironment(await this._assertElementFound(selector));\n  }\n\n  // Implemented as part of the `HarnessLoader` interface.\n  async getAllChildLoaders(selector: string): Promise<HarnessLoader[]> {\n    return (await this.getAllRawElements(selector)).map(e => this.createEnvironment(e));\n  }\n\n  /** Creates a `ComponentHarness` for the given harness type with the given raw host element. */\n  protected createComponentHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T>, element: E): T {\n    return new harnessType(this.createEnvironment(element));\n  }\n\n  /** Gets the root element for the document. */\n  protected abstract getDocumentRoot(): E;\n\n  /** Creates a `TestElement` from a raw element. */\n  protected abstract createTestElement(element: E): TestElement;\n\n  /** Creates a `HarnessLoader` rooted at the given raw element. */\n  protected abstract createEnvironment(element: E): HarnessEnvironment<E>;\n\n  /**\n   * Gets a list of all elements matching the given selector under this environment's root element.\n   */\n  protected abstract getAllRawElements(selector: string): Promise<E[]>;\n\n  private async _getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]> {\n    const harnessPredicate = harnessType instanceof HarnessPredicate ?\n        harnessType : new HarnessPredicate(harnessType, {});\n    const elements = await this.getAllRawElements(harnessPredicate.getSelector());\n    return harnessPredicate.filter(elements.map(\n        element => this.createComponentHarness(harnessPredicate.harnessType, element)));\n  }\n\n  private async _assertElementFound(selector: string): Promise<E> {\n    const element = (await this.getAllRawElements(selector))[0];\n    if (!element) {\n      throw Error(`Expected to find element matching selector: \"${selector}\", but none was found`);\n    }\n    return element;\n  }\n\n  private async _assertHarnessFound<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T> {\n    const harness = (await this._getAllHarnesses(harnessType))[0];\n    if (!harness) {\n      throw _getErrorForMissingHarness(harnessType);\n    }\n    return harness;\n  }\n}\n\nfunction _getErrorForMissingHarness<T extends ComponentHarness>(\n    harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Error {\n  const harnessPredicate =\n      harnessType instanceof HarnessPredicate ? harnessType : new HarnessPredicate(harnessType, {});\n  const {name, hostSelector} = harnessPredicate.harnessType;\n  let restrictions = harnessPredicate.getDescription();\n  let message = `Expected to find element for ${name} matching selector: \"${hostSelector}\"`;\n  if (restrictions) {\n    message += ` (with restrictions: ${restrictions})`;\n  }\n  message += ', but none was found';\n  return Error(message);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from './dispatch-events';\nimport {triggerFocus} from './element-focus';\nimport {ModifierKeys} from './event-objects';\n\n/**\n * Checks whether the given Element is a text input element.\n * @docs-private\n */\nexport function isTextInput(element: Element): element is HTMLInputElement | HTMLTextAreaElement {\n  return element.nodeName.toLowerCase() === 'input' ||\n      element.nodeName.toLowerCase() === 'textarea' ;\n}\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(\n    element: HTMLElement, ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param modifiers Modifier keys that are held while typing.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(element: HTMLElement, modifiers: ModifierKeys,\n                              ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\nexport function typeInElement(element: HTMLElement, ...modifiersAndKeys: any) {\n  const first = modifiersAndKeys[0];\n  let modifiers: ModifierKeys;\n  let rest: (string | {keyCode?: number, key?: string})[];\n  if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n    modifiers = first;\n    rest = modifiersAndKeys.slice(1);\n  } else {\n    modifiers = {};\n    rest = modifiersAndKeys;\n  }\n  const keys: {keyCode?: number, key?: string}[] = rest\n      .map(k => typeof k === 'string' ?\n          k.split('').map(c => ({keyCode: c.toUpperCase().charCodeAt(0), key: c})) : [k])\n      .reduce((arr, k) => arr.concat(k), []);\n\n  triggerFocus(element);\n  for (const key of keys) {\n    dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n    dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n    if (isTextInput(element) && key.key && key.key.length === 1) {\n      element.value += key.key;\n      dispatchFakeEvent(element, 'input');\n    }\n    dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n  }\n}\n\n/**\n * Clears the text in an input or textarea element.\n * @docs-private\n */\nexport function clearElement(element: HTMLInputElement | HTMLTextAreaElement) {\n  triggerFocus(element as HTMLElement);\n  element.value = '';\n  dispatchFakeEvent(element, 'input');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TestElement} from './test-element';\n\n/** An async function that returns a promise when called. */\nexport type AsyncFactoryFn<T> = () => Promise<T>;\n\n/** An async function that takes an item and returns a boolean promise */\nexport type AsyncPredicate<T> = (item: T) => Promise<boolean>;\n\n/** An async function that takes an item and an option value and returns a boolean promise. */\nexport type AsyncOptionPredicate<T, O> = (item: T, option: O) => Promise<boolean>;\n\n/**\n * Interface used to load ComponentHarness objects. This interface is used by test authors to\n * instantiate `ComponentHarness`es.\n */\nexport interface HarnessLoader {\n  /**\n   * Searches for an element with the given selector under the current instances's root element,\n   * and returns a `HarnessLoader` rooted at the matching element. If multiple elements match the\n   * selector, the first is used. If no elements match, an error is thrown.\n   * @param selector The selector for the root element of the new `HarnessLoader`\n   * @return A `HarnessLoader` rooted at the element matching the given selector.\n   * @throws If a matching element can't be found.\n   */\n  getChildLoader(selector: string): Promise<HarnessLoader>;\n\n  /**\n   * Searches for all elements with the given selector under the current instances's root element,\n   * and returns an array of `HarnessLoader`s, one for each matching element, rooted at that\n   * element.\n   * @param selector The selector for the root element of the new `HarnessLoader`\n   * @return A list of `HarnessLoader`s, one for each matching element, rooted at that element.\n   */\n  getAllChildLoaders(selector: string): Promise<HarnessLoader[]>;\n\n  /**\n   * Searches for an instance of the component corresponding to the given harness type under the\n   * `HarnessLoader`'s root element, and returns a `ComponentHarness` for that instance. If multiple\n   * matching components are found, a harness for the first one is returned. If no matching\n   * component is found, an error is thrown.\n   * @param harnessType The type of harness to create\n   * @return An instance of the given harness type\n   * @throws If a matching component instance can't be found.\n   */\n  getHarness<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T>;\n\n  /**\n   * Searches for all instances of the component corresponding to the given harness type under the\n   * `HarnessLoader`'s root element, and returns a list `ComponentHarness` for each instance.\n   * @param harnessType The type of harness to create\n   * @return A list instances of the given harness type.\n   */\n  getAllHarnesses<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): Promise<T[]>;\n}\n\n/**\n * Interface used to create asynchronous locator functions used find elements and component\n * harnesses. This interface is used by `ComponentHarness` authors to create locator functions for\n * their `ComponentHarenss` subclass.\n */\nexport interface LocatorFactory {\n  /** Gets a locator factory rooted at the document root. */\n  documentRootLocatorFactory(): LocatorFactory;\n\n  /** The root element of this `LocatorFactory` as a `TestElement`. */\n  rootElement: TestElement;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the root element of this `LocatorFactory`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, an error is thrown.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the root element of this `LocatorFactory`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, an error is thrown.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or throws an error.\n   */\n  locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the root element of this `LocatorFactory`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, null is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or returns null.\n   */\n  locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the root element of this `LocatorFactory`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, null is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or null if none is found.\n   */\n  locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for a list of elements with\n   * the given selector under the root element of this `LocatorFactory`. When the resulting locator\n   * function is invoked, a list of matching elements is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a list of\n   * `ComponentHarness`es for all components matching the given harness type under the root element\n   * of this `LocatorFactory`. When the resulting locator function is invoked, a list of\n   * `ComponentHarness`es for the matching components is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and returns a list of `ComponentHarness`es.\n   */\n  locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n}\n\n/**\n * Base class for component harnesses that all component harness authors should extend. This base\n * component harness provides the basic ability to locate element and sub-component harness. It\n * should be inherited when defining user's own harness.\n */\nexport abstract class ComponentHarness {\n  constructor(private readonly locatorFactory: LocatorFactory) {}\n\n  /** Gets a `Promise` for the `TestElement` representing the host element of the component. */\n  async host(): Promise<TestElement> {\n    return this.locatorFactory.rootElement;\n  }\n\n  /**\n   * Gets a `LocatorFactory` for the document root element. This factory can be used to create\n   * locators for elements that a component creates outside of its own root element. (e.g. by\n   * appending to document.body).\n   */\n  protected documentRootLocatorFactory(): LocatorFactory {\n    return this.locatorFactory.documentRootLocatorFactory();\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the host element of this `ComponentHarness`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, an error is thrown.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  protected locatorFor(selector: string): AsyncFactoryFn<TestElement>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the host element of this `ComponentHarness`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, an error is thrown.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or throws an error.\n   */\n  protected locatorFor<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T>;\n\n  protected locatorFor(arg: any) {\n    return this.locatorFactory.locatorFor(arg);\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for elements with the given\n   * selector under the host element of this `ComponentHarness`. When the resulting locator function\n   * is invoked, if multiple matching elements are found, the first element is returned. If no\n   * elements are found, null is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or returns null.\n   */\n  protected locatorForOptional(selector: string): AsyncFactoryFn<TestElement | null>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a `ComponentHarness` for a\n   * component matching the given harness type under the host element of this `ComponentHarness`.\n   * When the resulting locator function is invoked, if multiple matching components are found, a\n   * harness for the first one is returned. If no components are found, null is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and either returns a `ComponentHarness` for the component, or null if none is found.\n   */\n  protected locatorForOptional<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T | null>;\n\n  protected locatorForOptional(arg: any) {\n    return this.locatorFactory.locatorForOptional(arg);\n  }\n\n  /**\n   * Creates an asynchronous locator function that can be used to search for a list of elements with\n   * the given selector under the host element of this `ComponentHarness`. When the resulting\n   * locator function is invoked, a list of matching elements is returned.\n   * @param selector The selector for the element that the locator function should search for.\n   * @return An asynchronous locator function that searches for elements with the given selector,\n   *     and either finds one or throws an error\n   */\n  protected locatorForAll(selector: string): AsyncFactoryFn<TestElement[]>;\n\n  /**\n   * Creates an asynchronous locator function that can be used to find a list of\n   * `ComponentHarness`es for all components matching the given harness type under the host element\n   * of this `ComponentHarness`. When the resulting locator function is invoked, a list of\n   * `ComponentHarness`es for the matching components is returned.\n   * @param harnessType The type of harness to search for.\n   * @return An asynchronous locator function that searches components matching the given harness\n   *     type, and returns a list of `ComponentHarness`es.\n   */\n  protected locatorForAll<T extends ComponentHarness>(\n      harnessType: ComponentHarnessConstructor<T> | HarnessPredicate<T>): AsyncFactoryFn<T[]>;\n\n  protected locatorForAll(arg: any) {\n    return this.locatorFactory.locatorForAll(arg);\n  }\n}\n\n/** Constructor for a ComponentHarness subclass. */\nexport interface ComponentHarnessConstructor<T extends ComponentHarness> {\n  new(locatorFactory: LocatorFactory): T;\n\n  /**\n   * `ComponentHarness` subclasses must specify a static `hostSelector` property that is used to\n   * find the host element for the corresponding component. This property should match the selector\n   * for the Angular component.\n   */\n  hostSelector: string;\n}\n\nexport interface BaseHarnessFilters {\n  /** Only find component instances whose host element matches the given selector. */\n  selector?: string;\n  /** Only find component instances that are nested under an element with the given selector. */\n  ancestor?: string;\n}\n\n/**\n * A class used to associate a ComponentHarness class with predicates functions that can be used to\n * filter instances of the class.\n */\nexport class HarnessPredicate<T extends ComponentHarness> {\n  private _predicates: AsyncPredicate<T>[] = [];\n  private _descriptions: string[] = [];\n  private _ancestor: string;\n\n  constructor(public harnessType: ComponentHarnessConstructor<T>, options: BaseHarnessFilters) {\n    this._addBaseOptions(options);\n  }\n\n  /**\n   * Checks if a string matches the given pattern.\n   * @param s The string to check, or a Promise for the string to check.\n   * @param pattern The pattern the string is expected to match. If `pattern` is a string, `s` is\n   *   expected to match exactly. If `pattern` is a regex, a partial match is allowed.\n   * @return A Promise that resolves to whether the string matches the pattern.\n   */\n  static async stringMatches(s: string | Promise<string>, pattern: string | RegExp):\n      Promise<boolean> {\n    s = await s;\n    return typeof pattern === 'string' ? s === pattern : pattern.test(s);\n  }\n\n  /**\n   * Adds a predicate function to be run against candidate harnesses.\n   * @param description A description of this predicate that may be used in error messages.\n   * @param predicate An async predicate function.\n   * @return this (for method chaining).\n   */\n  add(description: string, predicate: AsyncPredicate<T>) {\n    this._descriptions.push(description);\n    this._predicates.push(predicate);\n    return this;\n  }\n\n  /**\n   * Adds a predicate function that depends on an option value to be run against candidate\n   * harnesses. If the option value is undefined, the predicate will be ignored.\n   * @param name The name of the option (may be used in error messages).\n   * @param option The option value.\n   * @param predicate The predicate function to run if the option value is not undefined.\n   * @return this (for method chaining).\n   */\n  addOption<O>(name: string, option: O | undefined, predicate: AsyncOptionPredicate<T, O>) {\n    // Add quotes around strings to differentiate them from other values\n    const value = typeof option === 'string' ? `\"${option}\"` : `${option}`;\n    if (option !== undefined) {\n      this.add(`${name} = ${value}`, item => predicate(item, option));\n    }\n    return this;\n  }\n\n  /**\n   * Filters a list of harnesses on this predicate.\n   * @param harnesses The list of harnesses to filter.\n   * @return A list of harnesses that satisfy this predicate.\n   */\n  async filter(harnesses: T[]): Promise<T[]> {\n    const results = await Promise.all(harnesses.map(h => this.evaluate(h)));\n    return harnesses.filter((_, i) => results[i]);\n  }\n\n  /**\n   * Evaluates whether the given harness satisfies this predicate.\n   * @param harness The harness to check\n   * @return A promise that resolves to true if the harness satisfies this predicate,\n   *   and resolves to false otherwise.\n   */\n  async evaluate(harness: T): Promise<boolean> {\n    const results = await Promise.all(this._predicates.map(p => p(harness)));\n    return results.reduce((combined, current) => combined && current, true);\n  }\n\n  /** Gets a description of this predicate for use in error messages. */\n  getDescription() {\n    return this._descriptions.join(', ');\n  }\n\n  /** Gets the selector used to find candidate elements. */\n  getSelector() {\n    return this._ancestor.split(',')\n        .map(part => `${part.trim()} ${this.harnessType.hostSelector}`.trim())\n        .join(',');\n  }\n\n  /** Adds base options common to all harness types. */\n  private _addBaseOptions(options: BaseHarnessFilters) {\n    this._ancestor = options.ancestor || '';\n    if (this._ancestor) {\n      this._descriptions.push(`has ancestor matching selector \"${this._ancestor}\"`);\n    }\n    const selector = options.selector;\n    if (selector !== undefined) {\n      this.add(`host matches selector \"${selector}\"`, async item => {\n        return (await item.host()).matchesSelector(selector);\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementDimensions} from './element-dimensions';\nimport {ModifierKeys} from './event-objects';\n\n/** An enum of non-text keys that can be used with the `sendKeys` method. */\n// NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n// support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n// dependency on any particular testing framework here. Instead we'll just maintain this supported\n// list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n// representation is used in its respective testing framework.\nexport enum TestKey {\n  BACKSPACE,\n  TAB,\n  ENTER,\n  SHIFT,\n  CONTROL,\n  ALT,\n  ESCAPE,\n  PAGE_UP,\n  PAGE_DOWN,\n  END,\n  HOME,\n  LEFT_ARROW,\n  UP_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  INSERT,\n  DELETE,\n  F1,\n  F2,\n  F3,\n  F4,\n  F5,\n  F6,\n  F7,\n  F8,\n  F9,\n  F10,\n  F11,\n  F12,\n  META\n}\n\n/**\n * This acts as a common interface for DOM elements across both unit and e2e tests. It is the\n * interface through which the ComponentHarness interacts with the component's DOM.\n */\nexport interface TestElement {\n  /** Blur the element. */\n  blur(): Promise<void>;\n\n  /** Clear the element's input (for input elements only). */\n  clear(): Promise<void>;\n\n  /**\n   * Click the element.\n   * @param relativeX Coordinate within the element, along the X-axis at which to click.\n   * @param relativeY Coordinate within the element, along the Y-axis at which to click.\n   */\n  click(relativeX?: number, relativeY?: number): Promise<void>;\n\n  /** Focus the element. */\n  focus(): Promise<void>;\n\n  /** Get the computed value of the given CSS property for the element. */\n  getCssValue(property: string): Promise<string>;\n\n  /** Hovers the mouse over the element. */\n  hover(): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n\n  /**\n   * Sends the given string to the input as a series of key presses. Also fires input events\n   * and attempts to add the string to the Element's value.\n   */\n  sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n\n  /** Gets the text from the element. */\n  text(): Promise<string>;\n\n  /** Gets the value for the given attribute from the element. */\n  getAttribute(name: string): Promise<string | null>;\n\n  /** Checks whether the element has the given class. */\n  hasClass(name: string): Promise<boolean>;\n\n  /** Gets the dimensions of the element. */\n  getDimensions(): Promise<ElementDimensions>;\n\n  /** Gets the value of a property of an element. */\n  getProperty(name: string): Promise<any>;\n\n  /** Checks whether this element matches the given selector. */\n  matchesSelector(selector: string): Promise<boolean>;\n\n  /**\n   * Flushes change detection and async tasks.\n   * In most cases it should not be necessary to call this. However, there may be some edge cases\n   * where it is needed to fully flush animation events.\n   */\n  forceStabilize(): Promise<void>;\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","verb","n","v","op","f","TypeError","_","y","t","call","label","ops","pop","trys","length","push","g","sent","throw","return","Symbol","iterator","this","createMouseEvent","type","x","button","event","document","createEvent","originalPreventDefault","preventDefault","initMouseEvent","window","Object","defineProperty","get","arguments","createTouchEvent","pageX","pageY","touchDetails","initUIEvent","defineProperties","touches","targetTouches","changedTouches","createKeyboardEvent","keyCode","key","target","modifiers","initKeyEvent","control","alt","shift","meta","modifiersStr","trim","initKeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","createFakeEvent","canBubble","cancelable","initEvent","dispatchEvent","node","dispatchFakeEvent","dispatchKeyboardEvent","dispatchMouseEvent","dispatchTouchEvent","triggerFocusChange","element","eventFired","handler","addEventListener","removeEventListener","patchElementFocus","focus","blur","triggerFocus","triggerBlur","_getErrorForMissingHarness","harnessType","harnessPredicate","HarnessPredicate","_a","name","hostSelector","restrictions","getDescription","message","Error","isTextInput","nodeName","toLowerCase","typeInElement","modifiersAndKeys","_i","rest","first","undefined","slice","keys","map","k","split","c","toUpperCase","charCodeAt","reduce","arr","concat","keys_1","clearElement","ComponentHarness","locatorFactory","prototype","host","rootElement","documentRootLocatorFactory","locatorFor","arg","locatorForOptional","locatorForAll","options","_predicates","_descriptions","_addBaseOptions","stringMatches","s","pattern","test","add","description","predicate","addOption","option","item","filter","harnesses","all","h","_this","evaluate","results","i","harness","p","combined","current","join","getSelector","_ancestor","part","ancestor","selector","tslib_1.__awaiter","matchesSelector","HarnessEnvironment","rawRootElement","createTestElement","createEnvironment","getDocumentRoot","_assertElementFound","_b","_assertHarnessFound","getAllRawElements","_getAllHarnesses","candidates","getHarness","getAllHarnesses","getChildLoader","getAllChildLoaders","createComponentHarness","elements","BACKSPACE","TAB","ENTER","SHIFT","CONTROL","ALT","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","META"],"mappings":"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"}