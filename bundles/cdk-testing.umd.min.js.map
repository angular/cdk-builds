{"version":3,"sources":["src/cdk/cdk-testing.umd.js"],"names":["global","factory","exports","module","define","amd","self","ng","cdk","testing","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","m","i","__read","r","ar","error","__spread","arguments","concat","TestKey","ComponentHarness","locatorFactory","prototype","host","_a","rootElement","documentRootLocatorFactory","locatorFor","queries","_i","locatorForOptional","locatorForAll","forceStabilize","waitForTasksOutsideAngular","HarnessPredicate","harnessType","options","_predicates","_descriptions","_addBaseOptions","stringMatches","pattern","test","add","description","predicate","addOption","name","option","undefined","_valueAsString","JSON","stringify","RegExp","toString","replace","item","filter","harnesses","results","_this","all","map","h","evaluate","harness","p","reduce","combined","current","getDescription","join","getSelector","_ancestor","split","part","trim","hostSelector","ancestor","selector","matchesSelector","HarnessEnvironment","rawRootElement","createTestElement","createEnvironment","getDocumentRoot","_assertResultFound","_getAllHarnessesAndTestElements","_getDescriptionForLocatorForQueries","harnessLoaderFor","_b","getAllRawElements","_getDescriptionForHarnessLoaderQuery","harnessLoaderForOptional","elements","harnessLoaderForAll","element","getHarness","query","getAllHarnesses","getChildLoader","getAllChildLoaders","createComponentHarness","allQueries","harnessQueries","elementQueries","harnessTypes","rawElements","skipSelectorCheck","perElementMatches","_c","_parseQueries","e_1","Set","queries_1","queries_1_1","e_1_1","size","rawElement","testElement","_getQueryResultForElement","_removeDuplicateQueryResults","testElementMatched","matchedHarnessTypes","dedupedMatches","results_1","results_1_1","e_2","has","constructor","e_2_1","queryDescriptions","Error","desc","_getDescriptionForTestElementQuery","_getDescriptionForComponentHarnessQuery","harnessPredicate","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/testing', ['exports'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.testing = {})));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for component harnesses that all component harness authors should extend. This base\n     * component harness provides the basic ability to locate element and sub-component harness. It\n     * should be inherited when defining user's own harness.\n     */\n    var ComponentHarness = /** @class */ (function () {\n        function ComponentHarness(locatorFactory) {\n            this.locatorFactory = locatorFactory;\n        }\n        /** Gets a `Promise` for the `TestElement` representing the host element of the component. */\n        ComponentHarness.prototype.host = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorFactory.rootElement];\n                });\n            });\n        };\n        /**\n         * Gets a `LocatorFactory` for the document root element. This factory can be used to create\n         * locators for elements that a component creates outside of its own root element. (e.g. by\n         * appending to document.body).\n         */\n        ComponentHarness.prototype.documentRootLocatorFactory = function () {\n            return this.locatorFactory.documentRootLocatorFactory();\n        };\n        /**\n         * Creates an asynchronous locator function that can be used to find a `ComponentHarness` instance\n         * or element under the host element of this `ComponentHarness`.\n         * @param queries A list of queries specifying which harnesses and elements to search for:\n         *   - A `string` searches for elements matching the CSS selector specified by the string.\n         *   - A `ComponentHarness` constructor searches for `ComponentHarness` instances matching the\n         *     given class.\n         *   - A `HarnessPredicate` searches for `ComponentHarness` instances matching the given\n         *     predicate.\n         * @return An asynchronous locator function that searches for and returns a `Promise` for the\n         *   first element or harness matching the given search criteria. Matches are ordered first by\n         *   order in the DOM, and second by order in the queries list. If no matches are found, the\n         *   `Promise` rejects. The type that the `Promise` resolves to is a union of all result types for\n         *   each query.\n         *\n         * e.g. Given the following DOM: `<div id=\"d1\" /><div id=\"d2\" />`, and assuming\n         * `DivHarness.hostSelector === 'div'`:\n         * - `await ch.locatorFor(DivHarness, 'div')()` gets a `DivHarness` instance for `#d1`\n         * - `await ch.locatorFor('div', DivHarness)()` gets a `TestElement` instance for `#d1`\n         * - `await ch.locatorFor('span')()` throws because the `Promise` rejects.\n         */\n        ComponentHarness.prototype.locatorFor = function () {\n            var _a;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return (_a = this.locatorFactory).locatorFor.apply(_a, __spread(queries));\n        };\n        /**\n         * Creates an asynchronous locator function that can be used to find a `ComponentHarness` instance\n         * or element under the host element of this `ComponentHarness`.\n         * @param queries A list of queries specifying which harnesses and elements to search for:\n         *   - A `string` searches for elements matching the CSS selector specified by the string.\n         *   - A `ComponentHarness` constructor searches for `ComponentHarness` instances matching the\n         *     given class.\n         *   - A `HarnessPredicate` searches for `ComponentHarness` instances matching the given\n         *     predicate.\n         * @return An asynchronous locator function that searches for and returns a `Promise` for the\n         *   first element or harness matching the given search criteria. Matches are ordered first by\n         *   order in the DOM, and second by order in the queries list. If no matches are found, the\n         *   `Promise` is resolved with `null`. The type that the `Promise` resolves to is a union of all\n         *   result types for each query or null.\n         *\n         * e.g. Given the following DOM: `<div id=\"d1\" /><div id=\"d2\" />`, and assuming\n         * `DivHarness.hostSelector === 'div'`:\n         * - `await ch.locatorForOptional(DivHarness, 'div')()` gets a `DivHarness` instance for `#d1`\n         * - `await ch.locatorForOptional('div', DivHarness)()` gets a `TestElement` instance for `#d1`\n         * - `await ch.locatorForOptional('span')()` gets `null`.\n         */\n        ComponentHarness.prototype.locatorForOptional = function () {\n            var _a;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return (_a = this.locatorFactory).locatorForOptional.apply(_a, __spread(queries));\n        };\n        /**\n         * Creates an asynchronous locator function that can be used to find `ComponentHarness` instances\n         * or elements under the host element of this `ComponentHarness`.\n         * @param queries A list of queries specifying which harnesses and elements to search for:\n         *   - A `string` searches for elements matching the CSS selector specified by the string.\n         *   - A `ComponentHarness` constructor searches for `ComponentHarness` instances matching the\n         *     given class.\n         *   - A `HarnessPredicate` searches for `ComponentHarness` instances matching the given\n         *     predicate.\n         * @return An asynchronous locator function that searches for and returns a `Promise` for all\n         *   elements and harnesses matching the given search criteria. Matches are ordered first by\n         *   order in the DOM, and second by order in the queries list. If an element matches more than\n         *   one `ComponentHarness` class, the locator gets an instance of each for the same element. If\n         *   an element matches multiple `string` selectors, only one `TestElement` instance is returned\n         *   for that element. The type that the `Promise` resolves to is an array where each element is\n         *   the union of all result types for each query.\n         *\n         * e.g. Given the following DOM: `<div id=\"d1\" /><div id=\"d2\" />`, and assuming\n         * `DivHarness.hostSelector === 'div'` and `IdIsD1Harness.hostSelector === '#d1'`:\n         * - `await ch.locatorForAll(DivHarness, 'div')()` gets `[\n         *     DivHarness, // for #d1\n         *     TestElement, // for #d1\n         *     DivHarness, // for #d2\n         *     TestElement // for #d2\n         *   ]`\n         * - `await ch.locatorForAll('div', '#d1')()` gets `[\n         *     TestElement, // for #d1\n         *     TestElement // for #d2\n         *   ]`\n         * - `await ch.locatorForAll(DivHarness, IdIsD1Harness)()` gets `[\n         *     DivHarness, // for #d1\n         *     IdIsD1Harness, // for #d1\n         *     DivHarness // for #d2\n         *   ]`\n         * - `await ch.locatorForAll('span')()` gets `[]`.\n         */\n        ComponentHarness.prototype.locatorForAll = function () {\n            var _a;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return (_a = this.locatorFactory).locatorForAll.apply(_a, __spread(queries));\n        };\n        /**\n         * Flushes change detection and async tasks in the Angular zone.\n         * In most cases it should not be necessary to call this manually. However, there may be some edge\n         * cases where it is needed to fully flush animation events.\n         */\n        ComponentHarness.prototype.forceStabilize = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorFactory.forceStabilize()];\n                });\n            });\n        };\n        /**\n         * Waits for all scheduled or running async tasks to complete. This allows harness\n         * authors to wait for async tasks outside of the Angular zone.\n         */\n        ComponentHarness.prototype.waitForTasksOutsideAngular = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorFactory.waitForTasksOutsideAngular()];\n                });\n            });\n        };\n        return ComponentHarness;\n    }());\n    /**\n     * A class used to associate a ComponentHarness class with predicates functions that can be used to\n     * filter instances of the class.\n     */\n    var HarnessPredicate = /** @class */ (function () {\n        function HarnessPredicate(harnessType, options) {\n            this.harnessType = harnessType;\n            this._predicates = [];\n            this._descriptions = [];\n            this._addBaseOptions(options);\n        }\n        /**\n         * Checks if the specified nullable string value matches the given pattern.\n         * @param value The nullable string value to check, or a Promise resolving to the\n         *   nullable string value.\n         * @param pattern The pattern the value is expected to match. If `pattern` is a string,\n         *   `value` is expected to match exactly. If `pattern` is a regex, a partial match is\n         *   allowed. If `pattern` is `null`, the value is expected to be `null`.\n         * @return Whether the value matches the pattern.\n         */\n        HarnessPredicate.stringMatches = function (value, pattern) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, value];\n                        case 1:\n                            value = _a.sent();\n                            if (pattern === null) {\n                                return [2 /*return*/, value === null];\n                            }\n                            else if (value === null) {\n                                return [2 /*return*/, false];\n                            }\n                            return [2 /*return*/, typeof pattern === 'string' ? value === pattern : pattern.test(value)];\n                    }\n                });\n            });\n        };\n        /**\n         * Adds a predicate function to be run against candidate harnesses.\n         * @param description A description of this predicate that may be used in error messages.\n         * @param predicate An async predicate function.\n         * @return this (for method chaining).\n         */\n        HarnessPredicate.prototype.add = function (description, predicate) {\n            this._descriptions.push(description);\n            this._predicates.push(predicate);\n            return this;\n        };\n        /**\n         * Adds a predicate function that depends on an option value to be run against candidate\n         * harnesses. If the option value is undefined, the predicate will be ignored.\n         * @param name The name of the option (may be used in error messages).\n         * @param option The option value.\n         * @param predicate The predicate function to run if the option value is not undefined.\n         * @return this (for method chaining).\n         */\n        HarnessPredicate.prototype.addOption = function (name, option, predicate) {\n            if (option !== undefined) {\n                this.add(name + \" = \" + _valueAsString(option), function (item) { return predicate(item, option); });\n            }\n            return this;\n        };\n        /**\n         * Filters a list of harnesses on this predicate.\n         * @param harnesses The list of harnesses to filter.\n         * @return A list of harnesses that satisfy this predicate.\n         */\n        HarnessPredicate.prototype.filter = function (harnesses) {\n            return __awaiter(this, void 0, void 0, function () {\n                var results;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Promise.all(harnesses.map(function (h) { return _this.evaluate(h); }))];\n                        case 1:\n                            results = _a.sent();\n                            return [2 /*return*/, harnesses.filter(function (_, i) { return results[i]; })];\n                    }\n                });\n            });\n        };\n        /**\n         * Evaluates whether the given harness satisfies this predicate.\n         * @param harness The harness to check\n         * @return A promise that resolves to true if the harness satisfies this predicate,\n         *   and resolves to false otherwise.\n         */\n        HarnessPredicate.prototype.evaluate = function (harness) {\n            return __awaiter(this, void 0, void 0, function () {\n                var results;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Promise.all(this._predicates.map(function (p) { return p(harness); }))];\n                        case 1:\n                            results = _a.sent();\n                            return [2 /*return*/, results.reduce(function (combined, current) { return combined && current; }, true)];\n                    }\n                });\n            });\n        };\n        /** Gets a description of this predicate for use in error messages. */\n        HarnessPredicate.prototype.getDescription = function () {\n            return this._descriptions.join(', ');\n        };\n        /** Gets the selector used to find candidate elements. */\n        HarnessPredicate.prototype.getSelector = function () {\n            var _this = this;\n            return this._ancestor.split(',')\n                .map(function (part) { return (part.trim() + \" \" + _this.harnessType.hostSelector).trim(); })\n                .join(',');\n        };\n        /** Adds base options common to all harness types. */\n        HarnessPredicate.prototype._addBaseOptions = function (options) {\n            var _this = this;\n            this._ancestor = options.ancestor || '';\n            if (this._ancestor) {\n                this._descriptions.push(\"has ancestor matching selector \\\"\" + this._ancestor + \"\\\"\");\n            }\n            var selector = options.selector;\n            if (selector !== undefined) {\n                this.add(\"host matches selector \\\"\" + selector + \"\\\"\", function (item) { return __awaiter(_this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, item.host()];\n                            case 1: return [2 /*return*/, (_a.sent()).matchesSelector(selector)];\n                        }\n                    });\n                }); });\n            }\n        };\n        return HarnessPredicate;\n    }());\n    /** Represent a value as a string for the purpose of logging. */\n    function _valueAsString(value) {\n        if (value === undefined) {\n            return 'undefined';\n        }\n        // `JSON.stringify` doesn't handle RegExp properly, so we need a custom replacer.\n        try {\n            return JSON.stringify(value, function (_, v) {\n                if (v instanceof RegExp) {\n                    return \"/\" + v.toString() + \"/\";\n                }\n                return typeof v === 'string' ? v.replace('/\\//g', '\\\\/') : v;\n            }).replace(/\"\\/\\//g, '\\\\/').replace(/\\/\\/\"/g, '\\\\/').replace(/\\\\\\//g, '/');\n        }\n        catch (_a) {\n            // `JSON.stringify` will throw if the object is cyclical,\n            // in this case the best we can do is report the value as `{...}`.\n            return '{...}';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base harness environment class that can be extended to allow `ComponentHarness`es to be used in\n     * different test environments (e.g. testbed, protractor, etc.). This class implements the\n     * functionality of both a `HarnessLoader` and `LocatorFactory`. This class is generic on the raw\n     * element type, `E`, used by the particular test environment.\n     */\n    var HarnessEnvironment = /** @class */ (function () {\n        function HarnessEnvironment(rawRootElement) {\n            this.rawRootElement = rawRootElement;\n            this.rootElement = this.createTestElement(rawRootElement);\n        }\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.documentRootLocatorFactory = function () {\n            return this.createEnvironment(this.getDocumentRoot());\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.locatorFor = function () {\n            var _this = this;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return function () { return _assertResultFound(_this._getAllHarnessesAndTestElements(queries), _getDescriptionForLocatorForQueries(queries)); };\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.locatorForOptional = function () {\n            var _this = this;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getAllHarnessesAndTestElements(queries)];\n                    case 1: return [2 /*return*/, (_a.sent())[0] || null];\n                }\n            }); }); };\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.locatorForAll = function () {\n            var _this = this;\n            var queries = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                queries[_i] = arguments[_i];\n            }\n            return function () { return _this._getAllHarnessesAndTestElements(queries); };\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.harnessLoaderFor = function (selector) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = this.createEnvironment;\n                            return [4 /*yield*/, _assertResultFound(this.getAllRawElements(selector), [_getDescriptionForHarnessLoaderQuery(selector)])];\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.harnessLoaderForOptional = function (selector) {\n            return __awaiter(this, void 0, void 0, function () {\n                var elements;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getAllRawElements(selector)];\n                        case 1:\n                            elements = _a.sent();\n                            return [2 /*return*/, elements[0] ? this.createEnvironment(elements[0]) : null];\n                    }\n                });\n            });\n        };\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.harnessLoaderForAll = function (selector) {\n            return __awaiter(this, void 0, void 0, function () {\n                var elements;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getAllRawElements(selector)];\n                        case 1:\n                            elements = _a.sent();\n                            return [2 /*return*/, elements.map(function (element) { return _this.createEnvironment(element); })];\n                    }\n                });\n            });\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getHarness = function (query) {\n            return this.locatorFor(query)();\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getAllHarnesses = function (query) {\n            return this.locatorForAll(query)();\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getChildLoader = function (selector) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = this.createEnvironment;\n                            return [4 /*yield*/, _assertResultFound(this.getAllRawElements(selector), [_getDescriptionForHarnessLoaderQuery(selector)])];\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getAllChildLoaders = function (selector) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getAllRawElements(selector)];\n                        case 1: return [2 /*return*/, (_a.sent()).map(function (e) { return _this.createEnvironment(e); })];\n                    }\n                });\n            });\n        };\n        /** Creates a `ComponentHarness` for the given harness type with the given raw host element. */\n        HarnessEnvironment.prototype.createComponentHarness = function (harnessType, element) {\n            return new harnessType(this.createEnvironment(element));\n        };\n        /**\n         * Matches the given raw elements with the given list of element and harness queries to produce a\n         * list of matched harnesses and test elements.\n         */\n        HarnessEnvironment.prototype._getAllHarnessesAndTestElements = function (queries) {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, allQueries, harnessQueries, elementQueries, harnessTypes, rawElements, skipSelectorCheck, perElementMatches;\n                var _b;\n                var _this = this;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _a = _parseQueries(queries), allQueries = _a.allQueries, harnessQueries = _a.harnessQueries, elementQueries = _a.elementQueries, harnessTypes = _a.harnessTypes;\n                            return [4 /*yield*/, this.getAllRawElements(__spread(elementQueries, harnessQueries.map(function (predicate) { return predicate.getSelector(); })).join(','))];\n                        case 1:\n                            rawElements = _c.sent();\n                            skipSelectorCheck = (elementQueries.length === 0 && harnessTypes.size === 1) ||\n                                harnessQueries.length === 0;\n                            return [4 /*yield*/, Promise.all(rawElements.map(function (rawElement) { return __awaiter(_this, void 0, void 0, function () {\n                                    var testElement, allResultsForElement;\n                                    var _this = this;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                testElement = this.createTestElement(rawElement);\n                                                return [4 /*yield*/, Promise.all(\n                                                    // For each query, get `null` if it doesn't match, or a `TestElement` or\n                                                    // `ComponentHarness` as appropriate if it does match. This gives us everything that\n                                                    // matches the current raw element, but it may contain duplicate entries (e.g. multiple\n                                                    // `TestElement` or multiple `ComponentHarness` of the same type.\n                                                    allQueries.map(function (query) {\n                                                        return _this._getQueryResultForElement(query, rawElement, testElement, skipSelectorCheck);\n                                                    }))];\n                                            case 1:\n                                                allResultsForElement = _a.sent();\n                                                return [2 /*return*/, _removeDuplicateQueryResults(allResultsForElement)];\n                                        }\n                                    });\n                                }); }))];\n                        case 2:\n                            perElementMatches = _c.sent();\n                            return [2 /*return*/, (_b = []).concat.apply(_b, __spread(perElementMatches))];\n                    }\n                });\n            });\n        };\n        /**\n         * Check whether the given query matches the given element, if it does return the matched\n         * `TestElement` or `ComponentHarness`, if it does not, return null. In cases where the caller\n         * knows for sure that the query matches the element's selector, `skipSelectorCheck` can be used\n         * to skip verification and optimize performance.\n         */\n        HarnessEnvironment.prototype._getQueryResultForElement = function (query, rawElement, testElement, skipSelectorCheck) {\n            if (skipSelectorCheck === void 0) { skipSelectorCheck = false; }\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, _b, harness;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (!(typeof query === 'string')) return [3 /*break*/, 3];\n                            _a = skipSelectorCheck;\n                            if (_a) return [3 /*break*/, 2];\n                            return [4 /*yield*/, testElement.matchesSelector(query)];\n                        case 1:\n                            _a = (_c.sent());\n                            _c.label = 2;\n                        case 2: return [2 /*return*/, ((_a) ? testElement : null)];\n                        case 3:\n                            _b = skipSelectorCheck;\n                            if (_b) return [3 /*break*/, 5];\n                            return [4 /*yield*/, testElement.matchesSelector(query.getSelector())];\n                        case 4:\n                            _b = (_c.sent());\n                            _c.label = 5;\n                        case 5:\n                            if (!_b) return [3 /*break*/, 7];\n                            harness = this.createComponentHarness(query.harnessType, rawElement);\n                            return [4 /*yield*/, query.evaluate(harness)];\n                        case 6: return [2 /*return*/, (_c.sent()) ? harness : null];\n                        case 7: return [2 /*return*/, null];\n                    }\n                });\n            });\n        };\n        return HarnessEnvironment;\n    }());\n    /**\n     * Parses a list of queries in the format accepted by the `locatorFor*` methods into an easier to\n     * work with format.\n     */\n    function _parseQueries(queries) {\n        var e_1, _a;\n        var allQueries = [];\n        var harnessQueries = [];\n        var elementQueries = [];\n        var harnessTypes = new Set();\n        try {\n            for (var queries_1 = __values(queries), queries_1_1 = queries_1.next(); !queries_1_1.done; queries_1_1 = queries_1.next()) {\n                var query = queries_1_1.value;\n                if (typeof query === 'string') {\n                    allQueries.push(query);\n                    elementQueries.push(query);\n                }\n                else {\n                    var predicate = query instanceof HarnessPredicate ? query : new HarnessPredicate(query, {});\n                    allQueries.push(predicate);\n                    harnessQueries.push(predicate);\n                    harnessTypes.add(predicate.harnessType);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (queries_1_1 && !queries_1_1.done && (_a = queries_1.return)) _a.call(queries_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return { allQueries: allQueries, harnessQueries: harnessQueries, elementQueries: elementQueries, harnessTypes: harnessTypes };\n    }\n    /**\n     * Removes duplicate query results for a particular element. (e.g. multiple `TestElement`\n     * instances or multiple instances of the same `ComponentHarness` class.\n     */\n    function _removeDuplicateQueryResults(results) {\n        return __awaiter(this, void 0, void 0, function () {\n            var testElementMatched, matchedHarnessTypes, dedupedMatches, results_1, results_1_1, result;\n            var e_2, _a;\n            return __generator(this, function (_b) {\n                testElementMatched = false;\n                matchedHarnessTypes = new Set();\n                dedupedMatches = [];\n                try {\n                    for (results_1 = __values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {\n                        result = results_1_1.value;\n                        if (!result) {\n                            continue;\n                        }\n                        if (result instanceof ComponentHarness) {\n                            if (!matchedHarnessTypes.has(result.constructor)) {\n                                matchedHarnessTypes.add(result.constructor);\n                                dedupedMatches.push(result);\n                            }\n                        }\n                        else if (!testElementMatched) {\n                            testElementMatched = true;\n                            dedupedMatches.push(result);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                return [2 /*return*/, dedupedMatches];\n            });\n        });\n    }\n    /** Verifies that there is at least one result in an array. */\n    function _assertResultFound(results, queryDescriptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, results];\n                    case 1:\n                        result = (_a.sent())[0];\n                        if (result == undefined) {\n                            throw Error(\"Failed to find element matching one of the following queries:\\n\" +\n                                queryDescriptions.map(function (desc) { return \"(\" + desc + \")\"; }).join(',\\n'));\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    }\n    /** Gets a list of description strings from a list of queries. */\n    function _getDescriptionForLocatorForQueries(queries) {\n        return queries.map(function (query) { return typeof query === 'string' ?\n            _getDescriptionForTestElementQuery(query) : _getDescriptionForComponentHarnessQuery(query); });\n    }\n    /** Gets a description string for a `ComponentHarness` query. */\n    function _getDescriptionForComponentHarnessQuery(query) {\n        var harnessPredicate = query instanceof HarnessPredicate ? query : new HarnessPredicate(query, {});\n        var _a = harnessPredicate.harnessType, name = _a.name, hostSelector = _a.hostSelector;\n        var description = name + \" with host element matching selector: \\\"\" + hostSelector + \"\\\"\";\n        var constraints = harnessPredicate.getDescription();\n        return description + (constraints ?\n            \" satisfying the constraints: \" + harnessPredicate.getDescription() : '');\n    }\n    /** Gets a description string for a `TestElement` query. */\n    function _getDescriptionForTestElementQuery(selector) {\n        return \"TestElement for element matching selector: \\\"\" + selector + \"\\\"\";\n    }\n    /** Gets a description string for a `HarnessLoader` query. */\n    function _getDescriptionForHarnessLoaderQuery(selector) {\n        return \"HarnessLoader for element matching selector: \\\"\" + selector + \"\\\"\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (TestKey) {\n        TestKey[TestKey[\"BACKSPACE\"] = 0] = \"BACKSPACE\";\n        TestKey[TestKey[\"TAB\"] = 1] = \"TAB\";\n        TestKey[TestKey[\"ENTER\"] = 2] = \"ENTER\";\n        TestKey[TestKey[\"SHIFT\"] = 3] = \"SHIFT\";\n        TestKey[TestKey[\"CONTROL\"] = 4] = \"CONTROL\";\n        TestKey[TestKey[\"ALT\"] = 5] = \"ALT\";\n        TestKey[TestKey[\"ESCAPE\"] = 6] = \"ESCAPE\";\n        TestKey[TestKey[\"PAGE_UP\"] = 7] = \"PAGE_UP\";\n        TestKey[TestKey[\"PAGE_DOWN\"] = 8] = \"PAGE_DOWN\";\n        TestKey[TestKey[\"END\"] = 9] = \"END\";\n        TestKey[TestKey[\"HOME\"] = 10] = \"HOME\";\n        TestKey[TestKey[\"LEFT_ARROW\"] = 11] = \"LEFT_ARROW\";\n        TestKey[TestKey[\"UP_ARROW\"] = 12] = \"UP_ARROW\";\n        TestKey[TestKey[\"RIGHT_ARROW\"] = 13] = \"RIGHT_ARROW\";\n        TestKey[TestKey[\"DOWN_ARROW\"] = 14] = \"DOWN_ARROW\";\n        TestKey[TestKey[\"INSERT\"] = 15] = \"INSERT\";\n        TestKey[TestKey[\"DELETE\"] = 16] = \"DELETE\";\n        TestKey[TestKey[\"F1\"] = 17] = \"F1\";\n        TestKey[TestKey[\"F2\"] = 18] = \"F2\";\n        TestKey[TestKey[\"F3\"] = 19] = \"F3\";\n        TestKey[TestKey[\"F4\"] = 20] = \"F4\";\n        TestKey[TestKey[\"F5\"] = 21] = \"F5\";\n        TestKey[TestKey[\"F6\"] = 22] = \"F6\";\n        TestKey[TestKey[\"F7\"] = 23] = \"F7\";\n        TestKey[TestKey[\"F8\"] = 24] = \"F8\";\n        TestKey[TestKey[\"F9\"] = 25] = \"F9\";\n        TestKey[TestKey[\"F10\"] = 26] = \"F10\";\n        TestKey[TestKey[\"F11\"] = 27] = \"F11\";\n        TestKey[TestKey[\"F12\"] = 28] = \"F12\";\n        TestKey[TestKey[\"META\"] = 29] = \"META\";\n    })(exports.TestKey || (exports.TestKey = {}));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ComponentHarness = ComponentHarness;\n    exports.HarnessEnvironment = HarnessEnvironment;\n    exports.HarnessPredicate = HarnessPredicate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-testing.umd.js.map\n"]}