/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1ldmVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY2RrL2RyYWctZHJvcC9kcmFnLWV2ZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHtDZGtEcmFnfSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJhZyc7XG5pbXBvcnQge0Nka0Ryb3BMaXN0fSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJvcC1saXN0JztcblxuLyoqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciBzdGFydHMgZHJhZ2dpbmcgYSBkcmFnZ2FibGUuICovXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdTdGFydDxUID0gYW55PiB7XG4gIC8qKiBEcmFnZ2FibGUgdGhhdCBlbWl0dGVkIHRoZSBldmVudC4gKi9cbiAgc291cmNlOiBDZGtEcmFnPFQ+O1xufVxuXG4vKiogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSB1c2VyIHJlbGVhc2VzIGFuIGl0ZW0sIGJlZm9yZSBhbnkgYW5pbWF0aW9ucyBoYXZlIHN0YXJ0ZWQuICovXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdSZWxlYXNlPFQgPSBhbnk+IHtcbiAgLyoqIERyYWdnYWJsZSB0aGF0IGVtaXR0ZWQgdGhlIGV2ZW50LiAqL1xuICBzb3VyY2U6IENka0RyYWc8VD47XG59XG5cbi8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIHVzZXIgc3RvcHMgZHJhZ2dpbmcgYSBkcmFnZ2FibGUuICovXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdFbmQ8VCA9IGFueT4ge1xuICAvKiogRHJhZ2dhYmxlIHRoYXQgZW1pdHRlZCB0aGUgZXZlbnQuICovXG4gIHNvdXJjZTogQ2RrRHJhZzxUPjtcbiAgLyoqIERpc3RhbmNlIGluIHBpeGVscyB0aGF0IHRoZSB1c2VyIGhhcyBkcmFnZ2VkIHNpbmNlIHRoZSBkcmFnIHNlcXVlbmNlIHN0YXJ0ZWQuICovXG4gIGRpc3RhbmNlOiB7eDogbnVtYmVyOyB5OiBudW1iZXJ9O1xuICAvKiogUG9zaXRpb24gd2hlcmUgdGhlIHBvaW50ZXIgd2FzIHdoZW4gdGhlIGl0ZW0gd2FzIGRyb3BwZWQgKi9cbiAgZHJvcFBvaW50OiB7eDogbnVtYmVyOyB5OiBudW1iZXJ9O1xufVxuXG4vKiogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSB1c2VyIG1vdmVzIGFuIGl0ZW0gaW50byBhIG5ldyBkcm9wIGNvbnRhaW5lci4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2RrRHJhZ0VudGVyPFQgPSBhbnksIEkgPSBUPiB7XG4gIC8qKiBDb250YWluZXIgaW50byB3aGljaCB0aGUgdXNlciBoYXMgbW92ZWQgdGhlIGl0ZW0uICovXG4gIGNvbnRhaW5lcjogQ2RrRHJvcExpc3Q8VD47XG4gIC8qKiBJdGVtIHRoYXQgd2FzIG1vdmVkIGludG8gdGhlIGNvbnRhaW5lci4gKi9cbiAgaXRlbTogQ2RrRHJhZzxJPjtcbiAgLyoqIEluZGV4IGF0IHdoaWNoIHRoZSBpdGVtIGhhcyBlbnRlcmVkIHRoZSBjb250YWluZXIuICovXG4gIGN1cnJlbnRJbmRleDogbnVtYmVyO1xufVxuXG4vKipcbiAqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciByZW1vdmVzIGFuIGl0ZW0gZnJvbSBhXG4gKiBkcm9wIGNvbnRhaW5lciBieSBtb3ZpbmcgaXQgaW50byBhbm90aGVyIG9uZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDZGtEcmFnRXhpdDxUID0gYW55LCBJID0gVD4ge1xuICAvKiogQ29udGFpbmVyIGZyb20gd2hpY2ggdGhlIHVzZXIgaGFzIGEgcmVtb3ZlZCBhbiBpdGVtLiAqL1xuICBjb250YWluZXI6IENka0Ryb3BMaXN0PFQ+O1xuICAvKiogSXRlbSB0aGF0IHdhcyByZW1vdmVkIGZyb20gdGhlIGNvbnRhaW5lci4gKi9cbiAgaXRlbTogQ2RrRHJhZzxJPjtcbn1cblxuLyoqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciBkcm9wcyBhIGRyYWdnYWJsZSBpdGVtIGluc2lkZSBhIGRyb3AgY29udGFpbmVyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBDZGtEcmFnRHJvcDxULCBPID0gVCwgSSA9IGFueT4ge1xuICAvKiogSW5kZXggb2YgdGhlIGl0ZW0gd2hlbiBpdCB3YXMgcGlja2VkIHVwLiAqL1xuICBwcmV2aW91c0luZGV4OiBudW1iZXI7XG4gIC8qKiBDdXJyZW50IGluZGV4IG9mIHRoZSBpdGVtLiAqL1xuICBjdXJyZW50SW5kZXg6IG51bWJlcjtcbiAgLyoqIEl0ZW0gdGhhdCBpcyBiZWluZyBkcm9wcGVkLiAqL1xuICBpdGVtOiBDZGtEcmFnPEk+O1xuICAvKiogQ29udGFpbmVyIGluIHdoaWNoIHRoZSBpdGVtIHdhcyBkcm9wcGVkLiAqL1xuICBjb250YWluZXI6IENka0Ryb3BMaXN0PFQ+O1xuICAvKiogQ29udGFpbmVyIGZyb20gd2hpY2ggdGhlIGl0ZW0gd2FzIHBpY2tlZCB1cC4gQ2FuIGJlIHRoZSBzYW1lIGFzIHRoZSBgY29udGFpbmVyYC4gKi9cbiAgcHJldmlvdXNDb250YWluZXI6IENka0Ryb3BMaXN0PE8+O1xuICAvKiogV2hldGhlciB0aGUgdXNlcidzIHBvaW50ZXIgd2FzIG92ZXIgdGhlIGNvbnRhaW5lciB3aGVuIHRoZSBpdGVtIHdhcyBkcm9wcGVkLiAqL1xuICBpc1BvaW50ZXJPdmVyQ29udGFpbmVyOiBib29sZWFuO1xuICAvKiogRGlzdGFuY2UgaW4gcGl4ZWxzIHRoYXQgdGhlIHVzZXIgaGFzIGRyYWdnZWQgc2luY2UgdGhlIGRyYWcgc2VxdWVuY2Ugc3RhcnRlZC4gKi9cbiAgZGlzdGFuY2U6IHt4OiBudW1iZXI7IHk6IG51bWJlcn07XG4gIC8qKiBQb3NpdGlvbiB3aGVyZSB0aGUgcG9pbnRlciB3YXMgd2hlbiB0aGUgaXRlbSB3YXMgZHJvcHBlZCAqL1xuICBkcm9wUG9pbnQ6IHt4OiBudW1iZXI7IHk6IG51bWJlcn07XG59XG5cbi8qKiBFdmVudCBlbWl0dGVkIGFzIHRoZSB1c2VyIGlzIGRyYWdnaW5nIGEgZHJhZ2dhYmxlIGl0ZW0uICovXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdNb3ZlPFQgPSBhbnk+IHtcbiAgLyoqIEl0ZW0gdGhhdCBpcyBiZWluZyBkcmFnZ2VkLiAqL1xuICBzb3VyY2U6IENka0RyYWc8VD47XG4gIC8qKiBQb3NpdGlvbiBvZiB0aGUgdXNlcidzIHBvaW50ZXIgb24gdGhlIHBhZ2UuICovXG4gIHBvaW50ZXJQb3NpdGlvbjoge3g6IG51bWJlcjsgeTogbnVtYmVyfTtcbiAgLyoqIE5hdGl2ZSBldmVudCB0aGF0IGlzIGNhdXNpbmcgdGhlIGRyYWdnaW5nLiAqL1xuICBldmVudDogTW91c2VFdmVudCB8IFRvdWNoRXZlbnQ7XG4gIC8qKiBEaXN0YW5jZSBpbiBwaXhlbHMgdGhhdCB0aGUgdXNlciBoYXMgZHJhZ2dlZCBzaW5jZSB0aGUgZHJhZyBzZXF1ZW5jZSBzdGFydGVkLiAqL1xuICBkaXN0YW5jZToge3g6IG51bWJlcjsgeTogbnVtYmVyfTtcbiAgLyoqXG4gICAqIEluZGljYXRlcyB0aGUgZGlyZWN0aW9uIGluIHdoaWNoIHRoZSB1c2VyIGlzIGRyYWdnaW5nIHRoZSBlbGVtZW50IGFsb25nIGVhY2ggYXhpcy5cbiAgICogYDFgIG1lYW5zIHRoYXQgdGhlIHBvc2l0aW9uIGlzIGluY3JlYXNpbmcgKGUuZy4gdGhlIHVzZXIgaXMgbW92aW5nIHRvIHRoZSByaWdodCBvciBkb3dud2FyZHMpLFxuICAgKiB3aGVyZWFzIGAtMWAgbWVhbnMgdGhhdCBpdCdzIGRlY3JlYXNpbmcgKHRoZXkncmUgbW92aW5nIHRvIHRoZSBsZWZ0IG9yIHVwd2FyZHMpLiBgMGAgbWVhbnNcbiAgICogdGhhdCB0aGUgcG9zaXRpb24gaGFzbid0IGNoYW5nZWQuXG4gICAqL1xuICBkZWx0YToge3g6IC0xIHwgMCB8IDE7IHk6IC0xIHwgMCB8IDF9O1xufVxuXG4vKiogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSB1c2VyIHN3YXBzIHRoZSBwb3NpdGlvbiBvZiB0d28gZHJhZyBpdGVtcy4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2RrRHJhZ1NvcnRFdmVudDxUID0gYW55LCBJID0gVD4ge1xuICAvKiogSW5kZXggZnJvbSB3aGljaCB0aGUgaXRlbSB3YXMgc29ydGVkIHByZXZpb3VzbHkuICovXG4gIHByZXZpb3VzSW5kZXg6IG51bWJlcjtcbiAgLyoqIEluZGV4IHRoYXQgdGhlIGl0ZW0gaXMgY3VycmVudGx5IGluLiAqL1xuICBjdXJyZW50SW5kZXg6IG51bWJlcjtcbiAgLyoqIENvbnRhaW5lciB0aGF0IHRoZSBpdGVtIGJlbG9uZ3MgdG8uICovXG4gIGNvbnRhaW5lcjogQ2RrRHJvcExpc3Q8VD47XG4gIC8qKiBJdGVtIHRoYXQgaXMgYmVpbmcgc29ydGVkLiAqL1xuICBpdGVtOiBDZGtEcmFnPEk+O1xufVxuIl19